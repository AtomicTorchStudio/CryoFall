<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AtomicTorch.CBND.GameApi.WPF</name>
    </assembly>
    <members>
        <member name="E:AtomicTorch.CBND.GameApi.Data.Physics.IPhysicsSpace.DebugPhysicsBodyAdded">
            <summary>
            Please note: this event is available only in Client and Editor runtime.
            </summary>
        </member>
        <member name="E:AtomicTorch.CBND.GameApi.Data.Physics.IPhysicsSpace.DebugPhysicsBodyRemoved">
            <summary>
            Please note: this event is available only in Client and Editor runtime.
            </summary>
        </member>
        <member name="E:AtomicTorch.CBND.GameApi.Data.Physics.IPhysicsSpace.DebugShapeTesting">
            <summary>
            Please note: this event is available only in Client and Editor runtime.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.State.NetObjectExtensions.ClientSubscribe``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Action{``1},AtomicTorch.CBND.GameApi.Data.State.IStateSubscriptionOwner)">
            <summary>
            Subscribe on property modifications of this net object (Client-side only).
            </summary>
            <example>
            (For View Model class inheritor)
            <code language="c#">
            	someState.ClientSubscribe(
             		() => someState.SomeProperty,
             		(changedValue) => { /* some callback code, also you can use method. */ },
             		this /* because this is a View Model) */);
            </code>
            </example>
            <typeparam name="TKey">Type of net object.</typeparam>
            <typeparam name="TValue">
            Type of property (automatically detected based on <paramref name="propertyGetFunc" />
            function).
            </typeparam>
            <param name="eventSource">Net object.</param>
            <param name="propertyGetFunc">Function returning property of this object.</param>
            <param name="callback">Callback method or lambda to invoke when the property changes.</param>
            <param name="subscriptionOwner">
            Subscription owner. It should be <see cref="T:AtomicTorch.CBND.GameApi.Data.State.IStateSubscriptionOwner" />.Please note that
            BaseViewModel implements this.
            </param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.State.NetObjectExtensions.ClientSubscribe``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Action,AtomicTorch.CBND.GameApi.Data.State.IStateSubscriptionOwner)">
            <summary>
            Subscribe on property modifications of this net object (Client-side only).
            </summary>
            <example>
            (For View Model class inheritor)
            <code language="c#">
            	someState.ClientSubscribe(
             		() => someState.SomeProperty,
             		CallbackMethod,
             		this /* because this is a View Model) */);
            </code>
            </example>
            <typeparam name="TKey">Type of net object.</typeparam>
            <typeparam name="TValue">
            Type of property (automatically detected based on <paramref name="propertyGetFunc" />
            function).
            </typeparam>
            <param name="eventSource">Net object.</param>
            <param name="propertyGetFunc">Function returning property of this object.</param>
            <param name="callback">Callback method or lambda to invoke when the property changes.</param>
            <param name="subscriptionOwner">
            Subscription owner. It should be <see cref="T:AtomicTorch.CBND.GameApi.Data.State.IStateSubscriptionOwner" />.Please note that
            BaseViewModel implements this.
            </param>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.State.NetSync.BaseNetObject">
            <summary>
            Base class for network objects (including states of game objects). Has synchronizable properties.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.State.NetSync.NetworkSyncList`1">
            <summary>
            Special list type which changes are fully synchronizable over network. Use in game object states.
            <br />Please note that there are a few useful events available (only for Client-side).
            <br />Please note that regular list/array are cannot be synchronized over network when any change happens inside
            them, but they're still useful when you never modify them or don't need the change synchronization.
            </summary>
            <typeparam name="TItem">Type of item.</typeparam>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.State.NetSync.NetworkSyncList`1.DelegateClientElementInserted">
            <summary>
            Represents the method that will handle event for an element is set or inserted to the list.
            </summary>
            <param name="source">List instance.</param>
            <param name="index">Index at whist element was set or inserted/added.</param>
            <param name="value">Item which was set or inserted to the list.</param>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.State.NetSync.NetworkSyncList`1.DelegateClientElementRemoved">
            <summary>
            Represents the method that will handle event when element removed from the list.
            </summary>
            <param name="source">List instance.</param>
            <param name="index">Index at which element was removed.</param>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.State.NetSync.NetworkSyncList`1.DelegateClientListModified">
            <summary>
            Represents the method that will handle event for any list modification.
            </summary>
            <param name="source">List instance.</param>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.State.NetSync.NetworkSyncList`1.Count">
            <summary>
            Gets the count of items in this list.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.State.NetSync.NetworkSyncList`1.IsReadOnly">
            <summary>
            Returns always false.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.State.NetSync.NetworkSyncList`1.Item(System.Int32)">
            <summary>
            Gets the item at specified index.
            Sets item at specified index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.State.NetSync.NetworkSyncList`1.Add(`0)">
            <summary>
            Adds item into the list.
            </summary>
            <param name="item">Item.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.State.NetSync.NetworkSyncList`1.Clear">
            <summary>
            Clear list.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.State.NetSync.NetworkSyncList`1.Contains(`0)">
            <summary>
            Checks if list contains item.
            </summary>
            <param name="item">Item.</param>
            <returns>True if contains.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.State.NetSync.NetworkSyncList`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies all list items to array.
            </summary>
            <param name="array">Array.</param>
            <param name="arrayIndex">Array index to start placing current items to.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.State.NetSync.NetworkSyncList`1.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns>Enumerator.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.State.NetSync.NetworkSyncList`1.IndexOf(`0)">
            <summary>
            Gets the index of item in list.
            </summary>
            <param name="item">Item.</param>
            <returns>Index of item if found, otherwise -1.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.State.NetSync.NetworkSyncList`1.Insert(System.Int32,`0)">
            <summary>
            Inserts item at specified index.
            </summary>
            <param name="index">Index.</param>
            <param name="item">Item (not null).</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.State.NetSync.NetworkSyncList`1.Remove(`0)">
            <summary>
            Removes item from list.
            </summary>
            <param name="item">Item.</param>
            <returns>True if item found and removed</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.State.NetSync.NetworkSyncList`1.RemoveAt(System.Int32)">
            <summary>
            Removes any item at specified index.
            </summary>
            <param name="index">Index</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.State.NetSync.NetworkSyncList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns>Enumerator.</returns>
        </member>
        <member name="E:AtomicTorch.CBND.GameApi.Data.State.NetSync.NetworkSyncList`1.ClientAnyModification">
            <summary>
            Occurs when any modification with list happens (Client-side only).
            </summary>
        </member>
        <member name="E:AtomicTorch.CBND.GameApi.Data.State.NetSync.NetworkSyncList`1.ClientElementRemoved">
            <summary>
            Occurs when element removed (Client-side only).
            </summary>
        </member>
        <member name="E:AtomicTorch.CBND.GameApi.Data.State.NetSync.NetworkSyncList`1.ClientElementInserted">
            <summary>
            Occurs when element inserted at specific index to the list (Client-side only).
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.State.NetSync.StateSubscriptionToken">
            <summary>
            Special subscription token - returned when you're subscribing on event. Use <see cref="M:AtomicTorch.CBND.GameApi.Data.State.NetSync.StateSubscriptionToken.Unsubscribe" /> or
            <see cref="M:AtomicTorch.CBND.GameApi.Data.State.NetSync.StateSubscriptionToken.Dispose" /> methods to unsubscribe from it.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.State.NetSync.StateSubscriptionToken.Dispose">
            <summary>
            Remove subscription.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.State.NetSync.StateSubscriptionToken.Unsubscribe">
            <summary>
            Remove subscription. (same as Dispose()).
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.State.NetSync.INetObject">
            <summary>
            Do not inherit from it directly - inherit from <see cref="T:AtomicTorch.CBND.GameApi.Data.State.NetSync.BaseNetObject" /> instead.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.State.DeliveryMode">
            <summary>
            (from Lidgren library) How the library deals with resends and handling of late messages.
            Explained there https://github.com/lidgren/lidgren-network-gen3/wiki/Basics
            and there https://github.com/lidgren/lidgren-network-gen3/wiki/Sequence-Channels
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.State.DeliveryMode.Default">
            <summary>
            Reliable, ordered delivery - primary channel (common for all objects).
            Please note that primary channel will be used only if you don't set other settings such as max rate.
            Otherwise this is equivalent to ReliableOrdered.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.State.DeliveryMode.Unreliable">
            <summary>
            Unreliable, unordered delivery (unique channel).
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.State.DeliveryMode.UnreliableSequenced">
            <summary>
            Unreliable delivery, late messages are dropped (unique channel).
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.State.DeliveryMode.ReliableUnordered">
            <summary>
            Reliable delivery, but unordered (unique channel).
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.State.DeliveryMode.ReliableSequenced">
            <summary>
            Reliable delivery, late messages are dropped (unique channel).
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.State.DeliveryMode.ReliableOrdered">
            <summary>
            Separate reliable channel with ordered delivery (unique channel).
            That's it - same as Default, but uses unique channel.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.State.RemoteCallSettingsAttribute">
            <summary>
            Attribute for configuring remote call parameters such as channel and max call rate.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.State.RemoteCallSettingsAttribute.#ctor(AtomicTorch.CBND.GameApi.Data.State.DeliveryMode,System.Byte,System.Int16,System.String,System.Boolean)">
            <summary>
            Remote call settings.
            </summary>
            <param name="deliveryMode">
            Please read
            https://github.com/lidgren/lidgren-network-gen3/wiki/Sequence-Channels
            </param>
            <param name="maxCallsPerSecond">Max update rate (useful to limit network utilization).</param>
            <param name="keyArgIndex">
            Remote call method argument at this index will be used as a key. Use it if you need to
            separate remote calls on two independent sequence channels based by what the object is argument.
            </param>
            <param name="groupName">
            Group name (for current ProtoEntity) - use it to group sequences/channel for various methods in
            one class.
            For example, you can have a shared channel for weapon fire start/stop methods,
            this way you will always have the valid state (firing/non-firing).
            </param>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.State.SyncToClientReceivers">
            <summary>
            Special enumeration of receivers for SyncToClient properties.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.State.SyncToClientReceivers.Owner">
            <summary>
            Owner only.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.State.SyncToClientReceivers.ScopePlayers">
            <summary>
            Other players only (without owner).
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.State.SyncToClientReceivers.Everyone">
            <summary>
            Owner and other players.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.State.SyncToClientReceivers.Default">
            <summary>
            Default mode - send to everyone (owner and other players).
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.State.BasePrivateState">
            <summary>
            Base class for server private state of game object.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.State.BasePrivateState.IsPrivateState">
            <summary>
            Returns true - this is a server private state.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.State.BasePublicState">
            <summary>
            Base class for server public state of game object.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.State.BasePublicState.IsPrivateState">
            <summary>
            Returns false - this is not a server private state.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.State.EmptyPublicState">
            <summary>
            Empty server public state - you this when you don't need any state.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.State.EmptyPublicState.Instance">
            <summary>
            Returns instance of this class. Only one instance of this class is created and used by the game.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.State.EmptyPublicState.#ctor">
            <summary>
            Public constructor. Never call it - an exception will be thrown in that case because creating instances of this type is
            forbidden.
            You must use <see cref="F:AtomicTorch.CBND.GameApi.Data.State.EmptyPublicState.Instance" /> static field instead.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.State.IStateSubscriptionOwner">
            <summary>
            Special interface for class storing subscriptions. Use only on Client-side!
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.State.IStateSubscriptionOwner.RegisterSubscription(AtomicTorch.CBND.GameApi.Data.State.NetSync.StateSubscriptionToken)">
            <summary>
            Registers a subscription.
            </summary>
            <param name="stateSubscriptionToken">Token of subscription (will be used to unsubscribe).</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.State.IStateSubscriptionOwner.ReleaseSubscriptions">
            <summary>
            Releases all the subscriptions.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.State.TempOnlyAttribute">
            <summary>
            Attribute for marking auto-properties as non-serializable.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.State.StateSubscriptionStorage">
            <summary>
            Special class for storing subscriptions. Use only on Client-side.
            <br />Usually you don't need to use it if you're using BaseViewModel (it implements IStateSubscriptionOwner).
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.State.StateSubscriptionStorage.#ctor">
            <summary>
            Public initializer. Usually you don't need to invoke this if you're using BaseViewModel (it implements
            IStateSubscriptionOwner).
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.State.StateSubscriptionStorage.Dispose">
            <summary>
            Disposes instance. It also releases all the subscriptions.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.State.StateSubscriptionStorage.RegisterSubscription(AtomicTorch.CBND.GameApi.Data.State.NetSync.StateSubscriptionToken)">
            <summary>
            Registers a subscription.
            </summary>
            <param name="stateSubscriptionToken">Token of subscription (will be used to unsubscribe).</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.State.StateSubscriptionStorage.ReleaseSubscriptions">
            <summary>
            Releases all the subscriptions.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.State.SubscribablePropertyAttribute">
            <summary>
            Attribute for marking auto-properties as sending events on change.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.State.BaseClientState">
            <summary>
            Base class for client state of game object.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.State.BaseState">
            <summary>
            Base class for storing and manipulating object states
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.State.BaseServerState">
            <summary>
            Base class for server private state of game object. You cannot inherit from it directly. Inherit from private
            and/or public states - <see cref="T:AtomicTorch.CBND.GameApi.Data.State.BasePrivateState" /> and
            <see cref="T:AtomicTorch.CBND.GameApi.Data.State.BasePublicState" />.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.State.BaseServerState.IsPrivateState">
            <summary>
            Returns true if this is a server private state (instance of <see cref="T:AtomicTorch.CBND.GameApi.Data.State.BasePrivateState" />).
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.State.EmptyClientState">
            <summary>
            Empty client state - you this when you don't need any state.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.State.EmptyPrivateState">
            <summary>
            Empty server private state - you this when you don't need any state.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.State.EmptyPrivateState.Instance">
            <summary>
            Returns instance of this class. Only one instance of this class is created and used by the game.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.State.EmptyPrivateState.#ctor">
            <summary>
            Public constructor. Never call it - an exception will be thrown in that case because creating instances of this type is
            forbidden.
            You must use <see cref="F:AtomicTorch.CBND.GameApi.Data.State.EmptyPrivateState.Instance" /> static field instead.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.State.SyncToClientAttribute">
            <summary>
            Attribute for marking network synchronized auto-properties of game object server state as network synchronizable.
            <br />Please note that synchronization direction is one-way from Server to Client.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.State.SyncToClientAttribute.NetworkDataType">
            <summary>
            Custom network data type. Can be null.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.State.SyncToClientAttribute.#ctor(AtomicTorch.CBND.GameApi.Data.State.DeliveryMode,System.Boolean,AtomicTorch.CBND.GameApi.Data.State.SyncToClientReceivers,System.Byte,System.Type,System.Boolean)">
            <param name="isSendChanges">
            If false, only the initial data will be sent. All the subsequent changes of this property will not be sent.
            Used mostly when all the clients could reliably implement the same mechanics itself
            so no server updates of the property are needed.
            </param>
            <param name="deliveryMode">
            (only for primitive types) Please read
            https://github.com/lidgren/lidgren-network-gen3/wiki/Sequence-Channels
            </param>
            <param name="maxUpdatesPerSecond">(only for primitive types) Max update rate (useful to limit network utilization).</param>
            <param name="networkDataType">
            (only for primitive types) Cast to this type when transferring over network (useful to
            reduce network traffic - for example double type usually could be transferred as float).
            </param>
            <param name="isAllowClientSideModification">
            If set to true, no exception will thrown on modification on the client side (false by default).
            </param>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.Characters.ICharacter">
            <summary>
            Character - inherits dynamic world object.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Characters.ICharacter.IsCurrentClientCharacter">
            <summary>
            (Client-only) Returns true if this character is the current player character.<br />
            If so, you have more access to its properties.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Characters.ICharacter.ProtoCharacter">
            <summary>
            Gets the character prototype.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.Characters.IProtoCharacter">
            <summary>
            Character type - inherits from world object type.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Characters.IProtoCharacter.StatMoveSpeed">
            <summary>
            Gets the base move speed of the character. Pushed to the character stats cache.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Characters.IProtoCharacter.SharedEnumerateAllContainers(AtomicTorch.CBND.GameApi.Data.Characters.ICharacter,System.Boolean)">
            <summary>
            Enumerate all the items containers for specified character.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.IProtoTrigger">
            <summary>
            Server trigger - use ProtoTrigger implementation.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Items.CanAddItemContext.ByCharacter">
            <summary>
            Character who performs this operation. Could be null - it means the game itself (via server scripting) is operates with
            the container.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Items.CanAddItemContext.IsExploratoryCheck">
            <summary>
            If true, this check is just exploratory (when the game explores which containers are "match best" some item).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Items.CanAddItemContext.SlotId">
            <summary>
            Slot Id. Could be null - check if the item could be placed anywhere in this container or not.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Items.CanRemoveItemContext.ByCharacter">
            <summary>
            Character who performs this operation. Could be null - it means the game itself (via server scripting) is operates with
            the container.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.Items.ProtoItemsContainer`3">
            <summary>
            Base class for items container type with specific generics parameters for states.
            </summary>
            <typeparam name="TPrivateState">Type of server private state.</typeparam>
            <typeparam name="TPublicState">Type of server public state.</typeparam>
            <typeparam name="TClientState">Type of client state.</typeparam>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Items.ProtoItemsContainer`3.CanAddItem(AtomicTorch.CBND.GameApi.Data.Items.CanAddItemContext)">
            <summary>
            Checks if item can be added into a container of this items container type.
            </summary>
            <returns>True if item can be placed into this container.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Items.ProtoItemsContainer`3.CanRemoveItem(AtomicTorch.CBND.GameApi.Data.Items.CanRemoveItemContext)">
            <summary>
            Checks if item can be removed from a container of this items container type.
            </summary>
            <returns>True if item can be removed from this container.</returns>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.Items.ProtoItemsContainer">
            <summary>
            Base class for items container type without states.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.Items.DelegateItem">
            <summary>
            Represents the method that will handle any item-related event.
            </summary>
            <param name="item">Item.</param>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.Items.DelegateItemCountChanged">
            <summary>
            Represents the method that will handle event when item count changed.
            </summary>
            <param name="item">Item of which cound changed.</param>
            <param name="previousCount">Previous count value.</param>
            <param name="currentCount">Current count value.</param>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.Items.DelegateItemWithSlot">
            <summary>
            Represents the method that will handle event for item with specific slot.
            </summary>
            <param name="item">Item.</param>
            <param name="slotId">Slot Id.</param>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.Items.IProtoItemsContainer">
            <summary>
            Interface for items container type.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Items.IProtoItemsContainer.CanAddItem(AtomicTorch.CBND.GameApi.Data.Items.CanAddItemContext)">
            <summary>
            Checks if item can be added into a container of this items container type.
            </summary>
            <returns>True if item can be placed into this container.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Items.IProtoItemsContainer.CanRemoveItem(AtomicTorch.CBND.GameApi.Data.Items.CanRemoveItemContext)">
            <summary>
            Checks if item can be removed from a container of this items container type.
            </summary>
            <returns>True if item can be removed from this container.</returns>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.Items.IProtoItem">
            <summary>
            Interface of all item types.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Items.IProtoItem.Icon">
            <summary>
            Gets the item icon.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Items.IProtoItem.IsStackable">
            <summary>
            Returns true if this item could be stacked (has count more than 1 per item slot).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Items.IProtoItem.MaxItemsPerStack">
            <summary>
            Gets how many items could be stored in one stack (item slot). For non-stackable items this will be 1.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Items.IProtoItem.ClientItemUseFinish(AtomicTorch.CBND.GameApi.Data.Items.IItem)">
            <summary>
            Client use item finish method. Called for current selected item in hotbar when Client release the left mouse button.
            </summary>
            <param name="item">Current selected item.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Items.IProtoItem.ClientItemUseStart(AtomicTorch.CBND.GameApi.Data.Items.IItem)">
            <summary>
            Client use item start method. Called for current selected item in hotbar when Client press the left mouse button.
            </summary>
            <param name="item">Current selected item.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Items.IProtoItem.ServerOnSplitItem(AtomicTorch.CBND.GameApi.Data.Items.IItem,AtomicTorch.CBND.GameApi.Data.Items.IItem,System.Int32)">
            <summary>
            Server callback method when splitting items (of this item type) from one slot into another slot.
            This method is called only if the item type is stackable.
            Use it to split items states (if any).
            Please note that the new item already has a copy of the source item state.
            </summary>
            <param name="itemFrom">Item of this prototype.</param>
            <param name="newItem">Item of this prototype.</param>
            <param name="countSplit">Count subtracted from itemFrom and added to newItem.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Items.IProtoItem.ServerOnStackItems(AtomicTorch.CBND.GameApi.Data.Items.IItem,AtomicTorch.CBND.GameApi.Data.Items.IItem,System.Int32)">
            <summary>
            Server callback method when stacking items (of this item type) from one slot into another slot.
            This method is called only if the item type is stackable.
            Use it to merge items states (if any).
            </summary>
            <param name="itemFrom">Item of this prototype.</param>
            <param name="itemTo">Item of this prototype.</param>
            <param name="countStacked">Count subtracted from itemFrom and added to itemTo.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Items.IProtoItem.SharedCanSelect(AtomicTorch.CBND.GameApi.Data.Items.IItem,AtomicTorch.CBND.GameApi.Data.Characters.ICharacter,System.Boolean)">
            <summary>
            Checks whether the item can be selected in hotbar.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.Items.IClientItem">
            <summary>
            Client item - provides <see cref="E:AtomicTorch.CBND.GameApi.Data.Items.IClientItem.CountChanged" /> event.
            </summary>
        </member>
        <member name="E:AtomicTorch.CBND.GameApi.Data.Items.IClientItem.CountChanged">
            <summary>
            Item count changed event.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.Items.IClientItemsContainer">
            <summary>
            Extends IItemsContainer with the several events.
            All IItemsContainer on the Client-side are implementing this interface.
            </summary>
        </member>
        <member name="E:AtomicTorch.CBND.GameApi.Data.Items.IClientItemsContainer.ItemAdded">
            <summary>
            Occurs when an item added into this container.
            </summary>
        </member>
        <member name="E:AtomicTorch.CBND.GameApi.Data.Items.IClientItemsContainer.ItemCountChanged">
            <summary>
            Occurs when the count of an item located in this container is changed.
            </summary>
        </member>
        <member name="E:AtomicTorch.CBND.GameApi.Data.Items.IClientItemsContainer.ItemRemoved">
            <summary>
            Occurs when an item removed from this container.
            </summary>
        </member>
        <member name="E:AtomicTorch.CBND.GameApi.Data.Items.IClientItemsContainer.ItemsReset">
            <summary>
            Occurs when the container reset (capacity and items list changed).
            </summary>
        </member>
        <member name="E:AtomicTorch.CBND.GameApi.Data.Items.IClientItemsContainer.SlotsCountChanged">
            <summary>
            Occurs when capacity of the container changed.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.Items.IItem">
            <summary>
            Item.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Items.IItem.Container">
            <summary>
            Gets the items container which contains this item.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Items.IItem.ContainerSlotId">
            <summary>
            Gets the slot Id which is occupied by this item.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Items.IItem.Count">
            <summary>
            Gets the current count of the item (if it stackable). If item is not stackable, it will be 1.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Items.IItem.ProtoItem">
            <summary>
            Gets the item type of this item.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.Items.IItemsContainer">
            <summary>
            Items container.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Items.IItemsContainer.Items">
            <summary>
            Gets the read-only collection of items placed into this container.
            Important note: do NOT modify/destroy the items during enumeration.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Items.IItemsContainer.OccupiedSlotsCount">
            <summary>
            Gets the total occupied slots count.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Items.IItemsContainer.Owner">
            <summary>
            Gets the owner of the container.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Items.IItemsContainer.OwnerAsCharacter">
            <summary>
            Gets the owner as character. Null if owner is not character.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Items.IItemsContainer.OwnerAsStaticObject">
            <summary>
            Gets the owner as static world object. Null if owner is not static world object.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Items.IItemsContainer.ProtoItemsContainer">
            <summary>
            Gets the prototype of this container.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Items.IItemsContainer.SlotsCount">
            <summary>
            Gets the capacity of this items container (how many slots it has). Value should be from 1 to 255 inclusive.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Items.IItemsContainer.StateHash">
            <summary>
            Gets the state hash. It's incremented every time the container content is changed.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Items.IItemsContainer.CanStackItems(AtomicTorch.CBND.GameApi.Data.Items.IItem,AtomicTorch.CBND.GameApi.Data.Items.IItem)">
            <summary>
            Checks if one item could be stacked into another item.
            <br />It will check if items are of the same type and their total count is not exceed MaxItemsPerStack of their
            item type.
            </summary>
            <param name="itemFrom">Item from which stack will be removed.</param>
            <param name="itemTo">Item to which stack will be moved.</param>
            <returns>True if can stack.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Items.IItemsContainer.ContainsItemsOfType(AtomicTorch.CBND.GameApi.Data.Items.IProtoItem,System.UInt32)">
            <summary>
            Checks if this container contains item of the specified item type with specific count.
            </summary>
            <param name="itemType">Item type.</param>
            <param name="requiredCount">Required count.</param>
            <returns>True if contains.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Items.IItemsContainer.ContainsItemsOfType(AtomicTorch.CBND.GameApi.Data.Items.IProtoItem,System.UInt32,System.UInt32@)">
            <summary>
            Checks if this container contains item of the specified item type with specific count.
            </summary>
            <param name="itemType">Item type.</param>
            <param name="requiredCount">Required count.</param>
            <param name="availableCount">
            Returns available count (please note that due to optimization this will be equals or lower
            than the requiredCount - even if available count is larger).
            </param>
            <returns>True if contains.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Items.IItemsContainer.CountItemsOfType(AtomicTorch.CBND.GameApi.Data.Items.IProtoItem)">
            <summary>
            Counts items of specified item type.
            </summary>
            <param name="itemType">Item type.</param>
            <returns>Count.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Items.IItemsContainer.GetItemAtSlot(System.Byte)">
            <summary>
            Gets the items at specified slot Id.
            </summary>
            <param name="slotId">Slot id.</param>
            <returns>Item.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Items.IItemsContainer.GetItemsOfProto``1">
            <summary>
            Gets the enumeration of items of specified prototype.
            </summary>
            <typeparam name="TProtoItem">Item prototype.</typeparam>
            <returns>Enumeration of items.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Items.IItemsContainer.GetItemsOfProto(AtomicTorch.CBND.GameApi.Data.Items.IProtoItem)">
            <summary>
            Gets the enumeration of items of specified prototype.
            </summary>
            <returns>Enumeration of items.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Items.IItemsContainer.TryStackItem(AtomicTorch.CBND.GameApi.Data.Items.IItem,System.Int32)">
            <summary>
            Tries to add item to the existings stacks.
            </summary>
            <param name="item"></param>
            <param name="countToMove"></param>
            <returns>true - if operation performed and item.Count become 0 (fully moved).</returns>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Items.IItemsContainerProvider.EmptySlotsCount">
            <summary>
            Gets how many empty slots are available.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Items.IItemsContainerProvider.ItemsContainers">
            <summary>
            Enumerators all the nested item containers (if there are many, or simply returns the current container).
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.Logic.ILogicObject">
            <summary>
            Special scriptable GameObject which don't have any world representation.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.Logic.IProtoLogicObject">
            <summary>
            Logic object type - scriptable GameObjectType for LogicObject.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Structures.IQuadTreeNode.IsEmpty">
            <summary>
            Returns true is FilledPositionsCount==0 (but works much faster, without calculating the count).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.Structures.IQuadTreeNode.IsNodeFilled">
            <summary>
            Returns true if the node is completely filled. If a node is filled, it cannot contain the subnodes.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Structures.IQuadTreeNode.GetRandomPosition(System.Random)">
            <summary>
            Gets random filled position inside the zone.
            </summary>
            <param name="random"></param>
            <returns>Please note it will return Vector2Ushort.Max when the node is empty</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Structures.IQuadTreeNode.Load(AtomicTorch.CBND.GameApi.Data.Structures.QuadTreeSnapshot)">
            <summary>
            Load (additive).
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Structures.IQuadTreeNode.Load(System.Collections.Generic.IReadOnlyList{AtomicTorch.CBND.GameApi.Data.Structures.QuadTreeNodeSnapshot})">
            <summary>
            Load (additive).
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Structures.IQuadTreeNode.Load(System.Collections.Generic.List{AtomicTorch.GameEngine.Common.Primitives.Vector2Ushort},AtomicTorch.GameEngine.Common.Primitives.RectangleInt)">
            <summary>
            Load positions (additive). Include only those that are inside (no exceptions thrown).
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Structures.IQuadTreeNode.Load(System.Collections.Generic.IEnumerable{AtomicTorch.GameEngine.Common.Primitives.Vector2Ushort})">
            <summary>
            Load positions (additive). Include only those that are inside (no exceptions thrown).
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Structures.IQuadTreeNode.ToList">
            <summary>
            Get list of all the stored positions.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Structures.QuadTreeNodeFactory.Create(AtomicTorch.GameEngine.Common.Primitives.Vector2Ushort,System.UInt16)">
            <param name="position">QuadTreeNode start position</param>
            <param name="size">Size (will be rounded up to power of two; for example: 50->64, 200->256, 500->512, etc)</param>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.Structures.QuadTreeNodeSnapshotGroup">
            <summary>
            Represents collection of quadtree node snapshots grouped by their size.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Structures.QuadTreeNodeSnapshotGroup.GetEnumerator">
            <summary>
            Gets node snapshots (enumerate with extraction).
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.Structures.QuadTreeSnapshot.GetEnumerator">
            <summary>
            Gets node snapshots (enumerate with extraction from <see cref="F:AtomicTorch.CBND.GameApi.Data.Structures.QuadTreeSnapshot.NodeSnapshotsGroups" />).
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.ProtoEntity">
            <summary>
            Base class for prototype - such as <see cref="T:AtomicTorch.CBND.GameApi.Data.World.IProtoTile" />, etc.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.ProtoEntity.#ctor">
            <summary>
            Initializes instance of this class.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.ProtoEntity.Id">
            <summary>
            Gets the Id. It's equals to C# type full name (with the namespace).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.ProtoEntity.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.ProtoEntity.ShortId">
            <summary>
            Gets the Id. It's equals to C# type name (without the namespace).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.ProtoEntity.Client">
            <summary>
            Gets the ClientScriptingApi - use only on Client-side.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.ProtoEntity.IsClient">
            <summary>
            Returns true if current code is executing on Client-side.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.ProtoEntity.IsServer">
            <summary>
            Returns true if current code is executing on Server-side.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.ProtoEntity.Logger">
            <summary>
            Gets the logger instance.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.ProtoEntity.Server">
            <summary>
            Returns ServerApi - use only on Server-side.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.ProtoEntity.ToString">
            <summary>
            Returns string containing name and Id of the proto entity.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.ProtoEntity.FindProtoEntities``1">
            <summary>
            Gets the instances of proto-classes of the specified type. For example, use IItemType as type parameter to get all
            proto-classes of IItemType.
            </summary>
            <typeparam name="TProtoEntity">Type of proto entity.</typeparam>
            <returns>Collection of instances which implements specified prototype.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.ProtoEntity.GetProtoEntity``1">
            <summary>
            Gets the instance of proto-class by its type.
            </summary>
            <typeparam name="TProtoEntity">Type of proto entity.</typeparam>
            <returns>Instance of proto-class.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.ProtoEntity.PrepareProto">
            <summary>
            Prepares prototype - invoked after all scripts are loaded, so you can access other scripting
            entities by using <see cref="M:AtomicTorch.CBND.GameApi.Data.ProtoEntity.GetProtoEntity``1" /> and <see cref="M:AtomicTorch.CBND.GameApi.Data.ProtoEntity.FindProtoEntities``1" />
            methods.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.ProtoEntity.ReportException(System.Exception,System.String)">
            <summary>
            Report exception to game engine - it will be logged.
            </summary>
            <param name="exception">Instance of exception</param>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4">
            <summary>
            Prototype for objects with state. Do not inherit from it directly.
            </summary>
            <typeparam name="TGameObject">Type of GameObject.</typeparam>
            <typeparam name="TPrivateState">Type of server private state.</typeparam>
            <typeparam name="TPublicState">Type of server public state.</typeparam>
            <typeparam name="TClientState">Type of client state.</typeparam>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.GetClientState(`0)">
            <summary>
            Gets the client state (of this type) for specified game object.<br />
            Use only on the Client-side!
            </summary>
            <param name="gameObject">Game object instance of type <typeparamref name="TGameObject" />.</param>
            <returns>Client state of type <typeparamref name="TClientState" />.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.GetPrivateState(`0)">
            <summary>
            Gets the private server state (of this type) for specified game object.
            </summary>
            <param name="gameObject">Game object instance of type <typeparamref name="TGameObject" />.</param>
            <returns>Private server state of type <typeparamref name="TPrivateState" />.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.GetPublicState(`0)">
            <summary>
            Gets the public server state (of this type) for specified game object.
            </summary>
            <param name="gameObject">Game object instance of type <typeparamref name="TGameObject" />.</param>
            <returns>Public server state of type <typeparamref name="TPublicState" />.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ValidateIsClient">
            <summary>
            Validates if the code is executing on the Client-side. If not, an exception will be thrown.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ValidateIsServer">
            <summary>
            Validates if the code is executing on the Server-side. If not, an exception will be thrown.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ClientInitialize(AtomicTorch.CBND.GameApi.Data.ProtoGameObject{`0,`1,`2,`3}.ClientInitializeData)">
            <summary>
            Client initialize method. Called when a game object enters scope on Client.
            Use it for setting up game object on Client (you can add a sprite renderer, sound emitter, etc).
            <br />Should be called only by the game engine.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ClientUpdate(AtomicTorch.CBND.GameApi.Data.ProtoGameObject{`0,`1,`2,`3}.ClientUpdateData)">
            <summary>
            Client update method.
            <br />Should be called only by the game engine.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ServerInitialize(AtomicTorch.CBND.GameApi.Data.ProtoGameObject{`0,`1,`2,`3}.ServerInitializeData)">
            <summary>
            Server initialize method. Called once for game object when it's spawned or
            loaded from the savegame on Server-side.
            Use it for constructing the server object (setup physics body, default state parameters, etc).
            <br />Should be called only by the game engine
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ServerUpdate(AtomicTorch.CBND.GameApi.Data.ProtoGameObject{`0,`1,`2,`3}.ServerUpdateData)">
            <summary>
            Server update method.
            <br />Should be called only by the game engine.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ClientInitializeData">
            <summary>
            Data for ClientInitalize() method.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ClientInitializeData.GameObject">
            <summary>
            Game object instance.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ClientInitializeData.ClientState">
            <summary>
            Client state of game object.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ClientInitializeData.PrivateState">
            <summary>
            Synchronized server private state for this game object.<br />
            It will throw exception if you don't have this game object in your private state.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ClientInitializeData.PublicState">
            <summary>
            Synchronized server public state for this game object.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ClientUpdateData">
            <summary>
            Data for ClientUpdate() method.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ClientUpdateData.DeltaTime">
            <summary>
            DeltaTime (in seconds) since previous update.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ClientUpdateData.GameObject">
            <summary>
            Game object instance.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ClientUpdateData.ClientState">
            <summary>
            Client state of game object.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ClientUpdateData.PrivateState">
            <summary>
            Synchronized server private state for this game object.<br />
            It will throw exception if you don't have this game object in your private state.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ClientUpdateData.PublicState">
            <summary>
            Synchronized server public state for this game object.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ServerInitializeData">
            <summary>
            Data for ServerInitialize() method.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ServerInitializeData.GameObject">
            <summary>
            Game object instance.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ServerInitializeData.IsFirstTimeInit">
            <summary>
            Returns true if the game object was created and never initialized yet. For objects loaded from savegames it will return
            false.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ServerInitializeData.PrivateState">
            <summary>
            Server private state of this game object.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ServerInitializeData.PublicState">
            <summary>
            Server public state of this game object.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ServerUpdateData">
            <summary>
            Data for ServerUpdate() method.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ServerUpdateData.DeltaTime">
            <summary>
            DeltaTime (in seconds) since previous update.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ServerUpdateData.GameObject">
            <summary>
            Game object instance.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ServerUpdateData.PrivateState">
            <summary>
            Server private state of this game object.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.ServerUpdateData.PublicState">
            <summary>
            Server public state of this game object.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.ProtoGameObject`4.VerifyGameObject(`0)">
            <summary>
            Verifies that the game object is not null or destroyed and that this prototype is matching it.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.IProtoEntity">
            <summary>
            Interface for prototype - such as <see cref="T:AtomicTorch.CBND.GameApi.Data.IProtoGameObject" />, etc.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.IProtoEntity.Id">
            <summary>
            Gets the Id. It's equals to C# type full name (with the namespace).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.IProtoEntity.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.IProtoEntity.ShortId">
            <summary>
            Gets the Id. Usually it's equals to C# type name (without the namespace) but in some case it's even shorter (when used
            for console commands arguments).
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.IProtoGameObject">
            <summary>
            Interface for game object proto-classes.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.IProtoGameObject`1">
            <summary>
            Interface for game object proto-classes.
            </summary>
            <typeparam name="TGameObject">GameObject of this object type</typeparam>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.World.IProtoTile">
            <summary>
            Interface for tile prototypes.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.IProtoTile.EditorIconTexture">
            <summary>
            Gets the texture resource used as icon in Editor toolbar.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.World.IProtoTile.ClientSetupRendering(AtomicTorch.CBND.GameApi.Data.World.Tile,AtomicTorch.CBND.GameApi.Scripting.IClientSceneObject)">
            <summary>
            Gets the texture resource used for rendering of ground tile.
            </summary>
            <param name="tile">Tile.</param>
            <param name="sceneObject">Scene object (you can attach custom renderers to it).</param>
            <returns>
            Texture resource (could be chunk of a texture atlas). If null, no rendering will be created for this ground
            tile.
            </returns>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.World.TileHeightData">
            <summary>
            Store tile height and slope/cliff data in a single byte.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.World.TileHeightData.packedData">
            <summary>
            Packed data (single byte) stores the tile height and the cliff/slope flags together.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.World.IProtoStaticWorldObject">
            <summary>
            Interface for static world object type - inherits from world object type for static world objects.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.World.IProtoStaticWorldObject.ClientSetupBlueprint(AtomicTorch.CBND.GameApi.Data.World.Tile,AtomicTorch.CBND.GameApi.Data.World.IClientBlueprint)">
            <summary>
            Gets the texture used for construction place selection (blueprint). Usually the same texture is used for the object
            rendering as well.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.World.StaticObjectKind.NaturalObject">
            <summary>
            Any natural object (minerals, vegetation, etc).
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.World.StaticObjectKind.Floor">
            <summary>
            Objects located on a floor level (such as farm plot, players' built floor, also oil and lithium deposits, etc).
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.World.StaticObjectKind.Structure">
            <summary>
            Players' constructions. Also props (such as ruins).
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.World.StaticObjectLayout.Setup(System.String[])">
            <summary>
            Setup layout by lines.
            <para />
            For example:
            <para />
            layout.Setup(
            <para />
            "###",
            <para />
            "#",
            <para />
            "###");
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.World.IDynamicWorldObject">
            <summary>
            World object which is dynamic in game world - such as character, projectile and vehicle.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.IDynamicWorldObject.Position">
            <summary>
            Gets the exact position at the world.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.IDynamicWorldObject.Tile">
            <summary>
            Gets the world tile in which this world object is located currently.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.World.IStaticWorldObject">
            <summary>
            World object which is static in game world - such as any structure.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.IStaticWorldObject.OccupiedTile">
            <summary>
            Gets the first occupied tile.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.IStaticWorldObject.OccupiedTilePositions">
            <summary>
            Gets the world tile offests occupied by this static world object.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.IStaticWorldObject.OccupiedTiles">
            <summary>
            Gets the world tiles occupied by this static world object.
            Please note - this is quite slow and you should prefer <see cref="P:AtomicTorch.CBND.GameApi.Data.World.IStaticWorldObject.OccupiedTilePositions" /> where possible.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.World.Tile">
            <summary>
            World tile.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.Tile.DynamicObjects">
            <summary>
            Gets the list of dynamic objects occupying this tile.
            (on the Server-side) Please DO NOT destroy objects during enumeration of this list.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.Tile.EightNeighborTiles">
            <summary>
            Gets the all the neighbor tiles:
            * top row (left, center, right)
            * central row (left and right)
            * bottom row (left, center, right)
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.Tile.FourNeighborTiles">
            <summary>
            Gets the only four neighbor tiles (left, up, right, down).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.Tile.Height">
            <summary>
            Returns index of tile height layer.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.Tile.IsCliff">
            <summary>
            Returns true if this is a cliff (non traversable tile).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.Tile.IsSlope">
            <summary>
            Returns true if this a slope (traversable tile transferring from one height level to another one).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.Tile.NeighborTileDown">
            <summary>
            Gets the neighbor tile (down or Y-1).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.Tile.NeighborTileDownLeft">
            <summary>
            Gets the neighbor tile (down-left or X-1;Y-1).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.Tile.NeighborTileDownRight">
            <summary>
            Gets the neighbor tile (down-right or X+1;Y-1).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.Tile.NeighborTileLeft">
            <summary>
            Gets the neighbor tile (left or X-1).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.Tile.NeighborTileRight">
            <summary>
            Gets the neighbor tile (right or X+1).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.Tile.NeighborTileUp">
            <summary>
            Gets the neighbor tile (up or Y+1).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.Tile.NeighborTileUpLeft">
            <summary>
            Gets the neighbor tile (up-left or X-1;Y+1).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.Tile.NeighborTileUpRight">
            <summary>
            Gets the neighbor tile (up-right or X+1;Y+1).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.Tile.Position">
            <summary>
            Gets the position of this tile.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.Tile.ProtoTile">
            <summary>
            Gets the ground tile type instance.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.Tile.StaticObjects">
            <summary>
            Gets the list of static objects occupying this tile.
            (on the Server-side) Please DO NOT destroy objects during enumeration of this list.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.World.Tile.GetNeighborTile(AtomicTorch.GameEngine.Common.Primitives.Vector2Int)">
            <summary>
            Gets the neighbor tile at custom offset.
            </summary>
            <param name="offset">Offset vector.</param>
            <returns>World tile at offsetted position.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.World.Tile.GetNeighborTile(System.Int32,System.Int32)">
            <summary>
            Gets the neighbor tile at custom offset.
            </summary>
            <param name="offsetX">Offset by X axis.</param>
            <param name="offsetY">Offset by Y axis.</param>
            <returns>World tile at offsetted position.</returns>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.World.IWorldObject">
            <summary>
            Game object which is represented in the game world.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.IWorldObject.IsStatic">
            <summary>
            Returns true if this world object is static (instance of <see cref="T:AtomicTorch.CBND.GameApi.Data.World.IStaticWorldObject" />). Otherwise, it's dynamic
            (instance of <see cref="T:AtomicTorch.CBND.GameApi.Data.World.IDynamicWorldObject" />).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.IWorldObject.ProtoWorldObject">
            <summary>
            Gets the abstract world object type. Use it to determine if this object have a specific world object type.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.World.IWorldObject.TilePosition">
            <summary>
            Gets the position of tile where world object is located.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.World.IProtoWorldObject">
            <summary>
            World object type.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.World.IProtoWorldObject.ClientInteractFinish(AtomicTorch.CBND.GameApi.Data.World.IWorldObject)">
            <summary>
            Client interact with world object finish method. Called for current world object when Client release the left mouse
            button.
            </summary>
            <param name="worldObject">WorldObject of this object type.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.World.IProtoWorldObject.ClientInteractStart(AtomicTorch.CBND.GameApi.Data.World.IWorldObject)">
            <summary>
            Client interact with world object start method. Called for pointed world object when Client press the left mouse
            button.
            </summary>
            <param name="worldObject">WorldObject of this object type.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.World.IProtoWorldObject.SharedGetObjectCenterWorldOffset(AtomicTorch.CBND.GameApi.Data.World.IWorldObject)">
            <summary>
            World offset to object center - currently used as the sound emitting position.
            </summary>
            <param name="worldObject"></param>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.World.IProtoWorldObject`1">
            <summary>
            World object type for specific <typeparamref name="TWorldObject" /> type of world objects.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.GameObjectType">
            <summary>
            Enumeration of game object types.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.GameObjectType.Player">
            <summary>
            Player. Is not available in scripting yet.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.GameObjectType.Character">
            <summary>
            Character - such as player character or mob.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.GameObjectType.StaticObject">
            <summary>
            Static object.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.GameObjectType.ItemsContainer">
            <summary>
            Items container.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.GameObjectType.Item">
            <summary>
            Item.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.GameObjectType.DynamicObject">
            <summary>
            Dynamic object (projectile, vehicle, etc).
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.GameObjectType.LogicObject">
            <summary>
            Logic object.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Data.GameObjectType.ServerZone">
            <summary>
            Zone object (only on the Server-side).
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.IGameObject">
            <summary>
            All game objects are implements this interface.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.IGameObject.GameObjectType">
            <summary>
            Gets the type of game object. Please note: this is not the same as GetType() which returns .NET object type.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.IGameObject.Id">
            <summary>
            Gets the Id.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.IGameObject.Name">
            <summary>
            Gets the Name.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Data.IGameObjectWithProto">
            <summary>
            Scriptable GameObject provides API for working with states defined in scripts
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.IGameObjectWithProto.IsInitialized">
            <summary>
            Returns true if ClientInitialize() or ServerInitialize() was invoked for this game object.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Data.IGameObjectWithProto.ProtoGameObject">
            <summary>
            Gets the abstract game object type.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.IGameObjectWithProto.ClientInitialize">
            <summary>
            Force (re-)initialization of the object.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Data.IGameObjectWithProto.ServerInitialize">
            <summary>
            Force (re-)initialization of the object.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Resources.ProceduralTexture.IsUseCache">
            <summary>
            TODO: implement procedural textures cache.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Resources.CursorResource.LocalFilePath">
            <summary>
            Local file path (inside "Content/Textures/").
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Resources.EffectResource">
            <summary>
            Effect (shader) resource. Root folder is "Content/Effects/".<br />
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Resources.EffectResource.#ctor(System.String)">
            <summary>
            Effect resource constructor.
            </summary>
            <param name="localFilePath">Local file path of the effect (inside "Content/Effects/").</param>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Resources.ITextureAtlasChunkResource.AtlasChunkPosition">
            <summary>
            Returns special data containing index of column and row in the atlas.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Resources.ITextureAtlasResource.AtlasSize">
            <summary>
            Returns special data containing how many rows and columns the atlas has.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Resources.MusicResource">
            <summary>
            Music resource. Root folder is "Content/Music/".<br />
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Resources.MusicResource.NoMusic">
            <summary>
            The placeholder music resource - no music will be played.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Resources.MusicResource.#ctor(System.String)">
            <summary>
            Music resource constructor.
            </summary>
            <param name="localFilePath">Local file path of the music (inside "Content/Music/").</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Resources.ServerMapResource.#ctor(System.String)">
            <summary>
            Server map resource constructor.
            </summary>
            <param name="localMapPath">Local file path of the world map (inside "Content/Maps/").</param>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Resources.TextureAtlasChunkPosition">
            <summary>
            Special data structure containing rows and columns count for texture atlas and selected column index and row index.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Resources.TextureAtlasChunkPosition.CalculatedArraySlice">
            <summary>
            Calculated texture array slice (used only for rendering).
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Resources.TextureAtlasChunkPosition.ColumnIndex">
            <summary>
            Column index of atlas.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Resources.TextureAtlasChunkPosition.RowIndex">
            <summary>
            Row index.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Resources.TextureAtlasChunkResource">
            <summary>
            Texture atlas resource. Requires TextureAtlasResource for creating.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Resources.TextureAtlasChunkResource.AtlasChunkPosition">
            <summary>
            Returns special data containing index of column and row in the atlas.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Resources.TextureAtlasChunkResource.#ctor(AtomicTorch.CBND.GameApi.Resources.TextureAtlasResource,System.Byte,System.Byte)">
            <summary>
            Construct TextureAtlasChunkResource instance by using TextureAtlasResource instance.
            </summary>
            <param name="textureAtlasResource">Instance of texture atlas resource.</param>
            <param name="atlasColumn">Column index.</param>
            <param name="atlasRow">Row index.</param>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Resources.TextureAtlasResource">
            <summary>
            Texture atlas resource. Contains texture and properties of this atlas texture (how many rows and columns).<br />
            Root folder is "Content/Textures/".<br />
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Resources.TextureAtlasResource.AtlasSize">
            <summary>
            Returns special data containing how many rows and columns the atlas has.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Resources.TextureAtlasResource.#ctor(AtomicTorch.CBND.GameApi.Resources.ITextureResource,System.Byte,System.Byte)">
            <summary>
            Constructor accepting already created TextureResource.
            </summary>
            <param name="textureResource">Texture resource (or texture atlas resource).</param>
            <param name="columns">How many columns the atlas has.</param>
            <param name="rows">How many rows the atlas has.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Resources.TextureAtlasResource.#ctor(System.String,System.Byte,System.Byte,System.Boolean)">
            <summary>
            Constructor accepting already created TextureResource.
            </summary>
            <param name="localFilePath">Local file path of the texture (inside "Content/Textures/").</param>
            <param name="columns">How many columns the atlas has.</param>
            <param name="rows">How many rows the atlas has.</param>
            <param name="isTransparent">
            Determines whether the texture is transparent (in the transparent case a special rendering
            effect will be used and it's much slower).
            </param>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Resources.SkeletonResource">
            <summary>
            Skeleton animation resource. Root folder is "Content/Animations/".<br />
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Resources.SkeletonResource.#ctor(System.String)">
            <summary>
            Skeleton animation resource constructor.
            </summary>
            <param name="localFilePath">
            Local file path of the skeleton animation without the file extension (inside "Content/Animations/").
            </param>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Resources.BaseResource">
            <summary>
            Base resource type.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Resources.BaseResource.FullPath">
            <summary>
            Full path(virtual, relative to the mod) of the resource file.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Resources.BaseResource.#ctor(System.String)">
            <summary>
            Initializes a new instance of resource with provided full path to the resource file.
            </summary>
            <param name="fullPath">Full path to the resource.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Resources.BaseResource.CheckExtraFieldsEquals(AtomicTorch.CBND.GameApi.Resources.BaseResource)">
            <summary>
            Check all extra fields for equality.
            </summary>
            <param name="other">Other resource to compare with this resource.</param>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Resources.ContentPaths">
            <summary>
            Content folders paths.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Resources.ContentPaths.Animations">
            <summary>
            Animations folder path.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Resources.ContentPaths.ContentRoot">
            <summary>
            Content root folder path (relative to mod root).
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Resources.ContentPaths.Effects">
            <summary>
            Effects folder path.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Resources.ContentPaths.Maps">
            <summary>
            Maps folder path.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Resources.ContentPaths.Music">
            <summary>
            Music folder path.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Resources.ContentPaths.Sounds">
            <summary>
            Sounds folder path.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Resources.ContentPaths.Textures">
            <summary>
            Textures folder path.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Resources.SoundResource">
            <summary>
            Sound resource. Root folder is "Content/Sounds/".<br />
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Resources.SoundResource.NoSound">
            <summary>
            The placeholder sound resource - no sound will be played.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Resources.SoundResource.#ctor(System.String)">
            <summary>
            Sound resource constructor.
            </summary>
            <param name="localFilePath">Local file path of the sound (inside "Content/Sounds/").</param>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Resources.TextureAtlasSize.ColumnsCount">
            <summary>
            Columns count.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Resources.TextureAtlasSize.RowsCount">
            <summary>
            Rows count.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Resources.TextureAtlasSize.#ctor(System.Byte,System.Byte)">
            <summary>
            Public constructor.
            </summary>
            <param name="columns">Columns count.</param>
            <param name="rows">Rows count.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Resources.TextureAtlasSize.WithColumnAndRow(System.Byte,System.Byte)">
            <summary>
            Create TextureAtlasChunkPosition from current instance with custom column and row indexes.
            </summary>
            <param name="row">Row index.</param>
            <param name="column">Column index.</param>
            <returns>TextureAtlasChunkPosition with specified index and row.</returns>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Resources.TextureResource">
            <summary>
            Texture resource. Root folder is "Content/Textures/".<br />
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Resources.TextureResource.NoTexture">
            <summary>
            The placeholder texture resource - a special texture filled with magenta color.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Resources.TextureResource.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,System.SByte)">
            <summary>
            Texture resource constructor.
            </summary>
            <param name="localFilePath">Local file path of the texture (inside "Content/Textures/").</param>
            <param name="isTransparent">
            Determines whether the texture is transparent (in the transparent case a special rendering
            effect will be used and it's much slower).
            </param>
            <param name="isProvidesMagentaPixelPosition">
            Determines whether the texture resource should provide magenta pixel
            position (which is acquirable with <see cref="M:AtomicTorch.CBND.GameApi.ServicesClient.IRenderingClientService.GetTextureMagentaPixelPosition(AtomicTorch.CBND.GameApi.Resources.TextureResource)" />)
            </param>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Resources.TextureResource.IsTransparent">
            <summary>
            If true, a special rendering shader will be used, but it's much slower.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Resources.TextureResource.LocalPath">
            <summary>
            Local file path (inside "Content/Textures/").
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Resources.TextureResource.CheckExtraFieldsEquals(AtomicTorch.CBND.GameApi.Resources.BaseResource)">
            <summary>
            Check all extra fields for equality.
            </summary>
            <param name="other">Other resource to compare with this resource.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Resources.TextureResource3D.#ctor(System.String,System.UInt16,System.Boolean)">
            <summary>
            Texture3D resource constructor.
            The 3D texture must be presented as 2D horizontal strip (such as LUT 3D texture for color grading).
            Width and height calculated automatically, but you must specify the depth (slices count).
            </summary>
            <param name="localFilePath">Local file path of the texture (inside "Content/Textures/").</param>
            <param name="depth">Count of slices in this 3D texture (count of "rectangles" in the strip).</param>
            <param name="isTransparent">
            Determines whether the texture is transparent (in the transparent case a special rendering
            effect will be used and it's much slower).
            </param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.Network.ProtoEntityRemoteExtensions.CallClient``1(``0,AtomicTorch.CBND.GameApi.Data.Characters.ICharacter,System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Calls remote Client method. Use only on the Server-side.
            </summary>
            <example>
            <code language="c#">
            this.CallClient(character, _ => _.ClientRemote_DoSomethingOnClient(someArgument1, someArgument2);</code>
            </example>
            <param name="protoEntity">Proto entity (containing the remote method).</param>
            <param name="characterDestination">Player character who will receive this remote call.</param>
            <param name="remoteClientCall">
            Lambda expression of call (see example).
            <br />Please note that the server method must have name starting with "ServerRemote_".
            <br />Please note that only these argument types are supported:
            <br />1. Primitive types such as int, float, string, etc.
            <br />2. Proto entities (such as instance of IProtoItem or IProtoCharacter). Use
            <see cref="M:AtomicTorch.CBND.GameApi.Scripting.Api.GetProtoEntity``1" /> to acquire instance of proto entity.
            <br />3. Instances of IGameObject (dynamic/static world objects, characters, projectiles, etc).
            <br />4. Instances of objects which classes are implements IRemoteCallParameter.
            <br />5. Arrays or lists of 1/2/3 cases.
            </param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.Network.ProtoEntityRemoteExtensions.CallClient``2(``0,AtomicTorch.CBND.GameApi.Data.Characters.ICharacter,System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Calls remote Client method. Use only on the Server-side.
            </summary>
            <example>
            <code language="c#">
            this.CallClient(character, _ => _.ClientRemote_DoSomethingOnClient(someArgument1, someArgument2);</code>
            </example>
            <param name="protoEntity">Proto entity (containing the remote method).</param>
            <param name="characterDestination">Player character who will receive this remote call.</param>
            <param name="remoteClientCall">
            Lambda expression of call (see example).
            <br />Please note that the server method must have name starting with "ServerRemote_".
            <br />Please note that only these argument types are supported:
            <br />1. Primitive types such as int, float, string, etc.
            <br />2. Proto entities (such as instance of IProtoItem or IProtoCharacter). Use
            <see cref="M:AtomicTorch.CBND.GameApi.Scripting.Api.GetProtoEntity``1" /> to acquire instance of proto entity.
            <br />3. Instances of IGameObject (dynamic/static world objects, characters, projectiles, etc).
            <br />4. Instances of objects which classes are implements IRemoteCallParameter.
            <br />5. Arrays or lists of 1/2/3 cases.
            </param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.Network.ProtoEntityRemoteExtensions.CallClient``1(``0,System.Collections.Generic.IEnumerable{AtomicTorch.CBND.GameApi.Data.Characters.ICharacter},System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Calls remote Client method. Use only on the Server-side.
            </summary>
            <example>
            <code language="c#">
            this.CallClient(characters, _ => _.ClientRemote_DoSomethingOnClient(someArgument1, someArgument2);
            </code>
            </example>
            <param name="protoEntity">Proto entity (containing the remote method).</param>
            <param name="charactersDestination">
            Player characters who will receive this remote call (useful only on the server
            side).
            </param>
            <param name="remoteServerCall">
            Lambda expression of call (see example).
            <br />Please note that the server method must have name starting with "ServerRemote_".
            <br />Please note that only these argument types are supported:
            <br />1. Primitive types such as int, float, string, etc.
            <br />2. Proto entities (such as instance of IProtoItem or IProtoCharacter). Use
            <see cref="M:AtomicTorch.CBND.GameApi.Scripting.Api.GetProtoEntity``1" /> to acquire instance of proto entity.
            <br />3. Instances of IGameObject (dynamic/static world objects, characters, projectiles, etc).
            <br />4. Instances of objects which classes are implements IRemoteCallParameter.
            <br />5. Arrays or lists of 1/2/3 cases.
            </param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.Network.ProtoEntityRemoteExtensions.CallServer``1(``0,System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Calls remote Server method. Use only on the Client-side.
            </summary>
            <example>
            <code language="c#">
            this.CallServer(_ => _.ServerRemote_DoSomethingOnServer(someArgument1, someArgument2);</code>
            </example>
            <param name="protoEntity">Proto entity (containing the remote method).</param>
            <param name="remoteServerCall">
            Lambda expression of call (see example).
            <br />Please note that the server method must have name starting with "ServerRemote_".
            <br />Please note that only these argument types are supported:
            <br />1. Primitive types such as int, float, string, etc.
            <br />2. Proto entities (such as instance of IProtoItem or IProtoCharacter). Use
            <see cref="M:AtomicTorch.CBND.GameApi.Scripting.Api.GetProtoEntity``1" /> to acquire instance of proto entity.
            <br />3. Instances of IGameObject (dynamic/static world objects, characters, projectiles, etc).
            <br />4. Instances of objects which classes are implements IRemoteCallParameter.
            <br />5. Arrays or lists of 1/2/3 cases.
            </param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.Network.ProtoEntityRemoteExtensions.CallServer``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <inheritdoc cref="M:AtomicTorch.CBND.GameApi.Scripting.Network.ProtoEntityRemoteExtensions.CallServer``1(``0,System.Linq.Expressions.Expression{System.Action{``0}})" />
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.Network.ProtoEntityRemoteExtensions.CallServer``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}})">
            <inheritdoc cref="M:AtomicTorch.CBND.GameApi.Scripting.Network.ProtoEntityRemoteExtensions.CallServer``1(``0,System.Linq.Expressions.Expression{System.Action{``0}})" />
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Scripting.Network.IRemoteCallParameter">
            <summary>
            Inherit from this interface if you want to use custom remote parameters type with ServerRemote_/ClientRemote_ methods.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Scripting.Network.ServerRemoteContext">
            <summary>
            Available during Server Remote calls.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Scripting.Network.ServerRemoteContext.Character">
            <summary>
            The character who invoked the server remote method.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Scripting.BaseBootstrapper">
            <summary>
            Base bootstrapper. Inheritors of this class are automatically executed when the game loaded all scripts.
            To use it, please inherit from it and override <see cref="M:AtomicTorch.CBND.GameApi.Scripting.BaseBootstrapper.ClientInitialize" /> and/or <see cref="M:AtomicTorch.CBND.GameApi.Scripting.BaseBootstrapper.ServerInitialize(AtomicTorch.CBND.GameApi.Scripting.IServerConfiguration)" />
            methods.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Scripting.BaseBootstrapper.Client">
            <summary>
            Gets the ClientApi - use only on Client-side.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Scripting.BaseBootstrapper.IsClient">
            <summary>
            Returns true if current code is executing on Client-side.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Scripting.BaseBootstrapper.IsServer">
            <summary>
            Returns true if current code is executing on Server-side.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Scripting.BaseBootstrapper.Logger">
            <summary>
            Gets the logger instance.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Scripting.BaseBootstrapper.Server">
            <summary>
            Returns ServerApi - use only on Server-side.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.BaseBootstrapper.ClientInitialize">
            <summary>
            Client initialize method - executed only on Client-side.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.BaseBootstrapper.ServerInitialize(AtomicTorch.CBND.GameApi.Scripting.IServerConfiguration)">
            <summary>
            Server initialize method - executed only on Server-side.
            Please note: it's executed BEFORE any objects are added to the server objects database.
            Which means - the world is empty at this point.
            The world objects stored in the savegame will be initialized after
            all the Bootstrappers have processed their ServerInitialize() call.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Scripting.ClientComponents.ClientComponent">
            <summary>
            Base class for client components defined in scripting. Component must be added to scene object to operate.
            </summary>
        </member>
        <member name="E:AtomicTorch.CBND.GameApi.Scripting.ClientComponents.ClientComponent.BeforeDestroy">
            <summary>
            Occurs right before the component is destroyed.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Scripting.ClientComponents.ClientComponent.IsEnabled">
            <summary>
            Returns true if component is enabled. You could enable/disable it if needed. Disabled components are not updated.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Scripting.ClientComponents.ClientComponent.SceneObject">
            <summary>
            Gets the scene object to which this component is attached to.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Scripting.ClientComponents.ClientComponent.Client">
            <summary>
            Gets the ClientApi - use only on Client-side.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Scripting.ClientComponents.ClientComponent.Logger">
            <summary>
            Gets the Logger instance.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.ClientComponents.ClientComponent.Destroy">
            <summary>
            Destroys component (it will be automatically detached from the scene object).
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.ClientComponents.ClientComponent.LateUpdate(System.Double)">
            <summary>
            LateUpdate method - called by engine after frame (but before rendering).
            To enable this method, please passs isLateUpdate enabled in the component constructor.
            </summary>
            <param name="deltaTime">Delta time since last update (in seconds).</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.ClientComponents.ClientComponent.Update(System.Double)">
            <summary>
            Update method - called by engine every frame.
            </summary>
            <param name="deltaTime">Delta time since last update (in seconds).</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.ClientComponents.ClientComponent.OnDisable">
            <summary>
            Called when component become disabled.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.ClientComponents.ClientComponent.OnEnable">
            <summary>
            Called when component become enabled.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Scripting.ClientComponents.IClientComponent">
            <summary>
            Interface from client components defined in scripting.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Scripting.ClientComponents.IClientComponent.IsEnabled">
            <summary>
            Returns true if component is enabled. You could enable/disable it if needed. Disabled components are not updated.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.ClientComponents.IClientComponent.Destroy">
            <summary>
            Destroys component.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.ClientComponents.IClientComponent.Destroy(System.Double)">
            <summary>
            Destroys the component after delay time.
            </summary>
            <param name="delay">Delay time in seconds. After it the scene object will be destroyed.</param>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Scripting.IClientSceneObject">
            <summary>
            Object added on the game scene on Client-side. You can add custom scripting components to it.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Scripting.IClientSceneObject.AttachedWorldObject">
            <summary>
            Gets the attached world object instance. Could be null.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Scripting.IClientSceneObject.Position">
            <summary>
            Gets the position (in world units). Please note that the position is automatically set from
            <see cref="P:AtomicTorch.CBND.GameApi.Scripting.IClientSceneObject.AttachedWorldObject" /> if it's not null, so modification of the position will not work in that case.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.IClientSceneObject.AddComponent``1(System.Boolean)">
            <summary>
            Adds custom scripting component.
            </summary>
            <typeparam name="TScriptingComponent">
            Type of class which is inherited from <typeparamref name="TScriptingComponent" />.
            </typeparam>
            <returns>Created instance of the component.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.IClientSceneObject.Destroy">
            <summary>
            Destroys scene object.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.IClientSceneObject.Destroy(System.Double)">
            <summary>
            Destroys scene object after delay time.
            </summary>
            <param name="delay">Delay time in seconds. After it the scene object will be destroyed.</param>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Scripting.ISharedApi.IsRequiresLanguageSelection">
            <summary>
            Returns true if the language tag was never selected by user (so language selection menu should be displayed).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Scripting.ISharedApi.LocalizationLanguageTags">
            <summary>
            Returns current language tags. Will return default language tag (en_us) if language is not selected.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Scripting.ISharedApi.SystemLanguageTag">
            <summary>
            Returns system (or Steam) language tag.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.ISharedApi.CreateSimplexNoise(System.Nullable{System.Int64})">
            <summary>
            Creates simplex noise instance (OpenSimplex implementation).
            </summary>
            <param name="seed">Seed number (optional).</param>
            <returns>Simplex noise generator.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.ISharedApi.FindFiles(System.String,System.Boolean)">
            <summary>
            Returns file paths of files at specified path. Includes files at subfolders.
            </summary>
            <param name="startsWithPath">Virtual path. For example, "Content/Textures/SomeSubFolder/Test".</param>
            <param name="withoutExtensions">Set true if you want to remove extensions from the returned filenames.</param>
            <returns>List of file paths.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.ISharedApi.FindFilesWithTrailingNumbers(System.String,System.Boolean)">
            <summary>
            Returns file paths of files at specified path. Includes files at subfolders.
            Do filter files:
            For example, you provide path "Sounds/TestSound".
            Then it should match following files (in the "Sounds" folder):
            "TestSound1.ogg"
            "TestSound05.ogg"
            "TestSound05Another.ogg"
            "TestSound05_abc.ogg"
            (etc)
            And it should not match following files:
            "TestSoundAnother.ogg"
            (etc)
            </summary>
            <param name="startsWithPath">Virtual path. For example, "Content/Textures/SomeSubFolder/Test".</param>
            <param name="withoutExtensions">Set true if you want to remove extensions from the returned filenames.</param>
            <returns>List of file paths.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.ISharedApi.ForceGCCollect(System.Int64@,System.Int64@)">
            <summary>
            Force memory garbage collection.
            PLEASE DON'T USE THIS DIRECTLY.
            THIS IS ONLY FOR DEBUG PURPOSES (for special console command).
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.ISharedApi.GetFileName(System.String)">
            <summary>
            Equivalent to <see cref="M:System.IO.Path.GetFileName(System.String)" /> - use this method because System.IO is a forbidden namespace.
            </summary>
            <param name="filePath">File path.</param>
            <returns>File name</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.ISharedApi.GetFileNameWithoutExtension(System.String)">
            <summary>
            Equivalent to <see cref="M:System.IO.Path.GetFileNameWithoutExtension(System.String)" /> - use this method because System.IO is a forbidden
            namespace.
            </summary>
            <param name="filePath">File path.</param>
            <returns>File name (without extension).</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.ISharedApi.GetFilePathsInFolder(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns names of files (with extensions) located at provided virtual folder path.
            </summary>
            <param name="folderPath">Virtual folder path. For example, "Content/Textures".</param>
            <param name="includeSubfolders"></param>
            <param name="stripFolderPathFromFilePaths"></param>
            <param name="withoutExtensions">Set true if you want to remove extensions from the returned filenames.</param>
            <returns>List of file paths in folder.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.ISharedApi.GetFolderNamesInFolder(System.String)">
            <summary>
            Returns names of folders located at provided virtual folder path.
            </summary>
            <param name="folderPath">Virtual folder path. For example, "Content/Textures".</param>
            <returns>List of file names (with extensions).</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.ISharedApi.GetTempList``1">
            <summary>
            Please don't forget wrapping this method call into the "using" operator.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Scripting.ISimplexNoise">
            <summary>
            Simplex noise generator (OpenSimplex implementation).
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.ISimplexNoise.CombineWith(System.Double,System.Double)">
            <summary>
            Combines two values.
            </summary>
            <returns>Combined value.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.ISimplexNoise.Get(System.Double,System.Double)">
            <summary>
            Gets 2D simplex noise value at particular coordinate.
            </summary>
            <param name="x">X coordinate.</param>
            <param name="y">Y coordinate.</param>
            <returns>Value in [0;1] range.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.ISimplexNoise.Get(System.Double,System.Double,System.Double)">
            <summary>
            Gets 3D simplex noise value at particular coordinate.
            </summary>
            <param name="x">X coordinate.</param>
            <param name="y">Y coordinate.</param>
            <param name="z">Z coordinate.</param>
            <returns>Value in [0;1] range.</returns>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Scripting.Api">
            <summary>
            Global API class. It's static and contains <see cref="P:AtomicTorch.CBND.GameApi.Scripting.Api.Client" /> and <see cref="P:AtomicTorch.CBND.GameApi.Scripting.Api.Server" /> API access properties as
            well, as various supplement properties and methods.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Scripting.Api.Client">
            <summary>
            Gets the ClientApi - use only on Client-side.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Scripting.Api.IsClient">
            <summary>
            Returns true if current code is executing on Client-side.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Scripting.Api.IsServer">
            <summary>
            Returns true if current code is executing on Server-side.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Scripting.Api.Logger">
            <summary>
            Gets the Logger instance.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Scripting.Api.Server">
            <summary>
            Returns ServerApi - use only on Server-side.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.Api.Assert(System.Boolean,System.String)">
            <summary>
            Check if something is true. If not, an exception will be thrown with provided message text.
            </summary>
            <param name="checkResult">Value to check.</param>
            <param name="message">Message text to display in exception if assert failed (when provided value is not true).</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.Api.FindProtoEntities``1">
            <summary>
            Gets the instances of proto-classes of the specified type. For example, use IItemType as type parameter to get all
            proto-classes of IItemType.
            </summary>
            <typeparam name="TProtoEntity">Type of proto entity.</typeparam>
            <returns>Collection of instances which implements specified prototype.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.Api.GetProtoEntity``1">
            <summary>
            Gets the instance of proto-class by its type.
            </summary>
            <typeparam name="TProtoEntity">Type of proto entity.</typeparam>
            <returns>Instance of proto-class.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.Api.ValidateIsClient">
            <summary>
            Validates if the code is executing on the Client-side. If not, an exception will be thrown.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.Api.ValidateIsServer">
            <summary>
            Validates if the code is executing on the Server-side. If not, an exception will be thrown.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.Api.SafeInvoke(System.Action,System.String)">
            <summary>
            Invoke an action in a try-catch block, handling all exceptions.
            </summary>
            <param name="action">Action to invoke.</param>
            <param name="messageIfError">Message to write into the log if an exception is thrown.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Scripting.ScriptPerformanceMeasurementKey.#ctor(System.String)">
            <summary>
            Please use Api.Shared.CreatePerformanceMeasurementKey(profilerKey) and save the resulting instance for further use.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Scripting.RemoteAuthorizeServerOperator">
            <summary>
            Remote methods or classes, marked with this attribute, will verify if the remote method caller player has a server
            operator access right.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Scripting.ScriptingConstants">
            <summary>
            Provides set of special constants for scripting.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Scripting.ScriptingConstants.TileSizeRealPixels">
            <summary>
            One game world tile width/height in real pixels. It's 256.
            Use this when you need to calculate real texture size.
            See <see cref="F:AtomicTorch.CBND.GameApi.Scripting.ScriptingConstants.TileSizeVirtualPixels" /> for virtual pixels size of one game world tile.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Scripting.ScriptingConstants.TileSizeVirtualPixels">
            <summary>
            One game world tile width/height in virtual pixels. It's 128.
            See <see cref="F:AtomicTorch.CBND.GameApi.Scripting.ScriptingConstants.TileSizeRealPixels" /> for real pixels size of one game world tile.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Extensions.DictionaryProcessingExtensions.ProcessAndRemove``2(System.Collections.Generic.IDictionary{``0,``1},System.Func{System.Collections.Generic.KeyValuePair{``0,``1},System.Boolean})">
            <summary>
            It's like foreach, but if func returns false, item will be removed on end of this method
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Extensions.VectorExtensions">
            <summary>
            Vector extensions methods.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Extensions.VectorExtensions.TileDistanceTo(AtomicTorch.GameEngine.Common.Primitives.Vector2Ushort,AtomicTorch.GameEngine.Common.Primitives.Vector2Ushort)">
            <summary>
            Calculates distance between tile positions.
            </summary>
            <param name="a">Tile position.</param>
            <param name="b">Another tile position.</param>
            <returns>Tile distance between them.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Extensions.VectorExtensions.TileSqrDistanceTo(AtomicTorch.GameEngine.Common.Primitives.Vector2Ushort,AtomicTorch.GameEngine.Common.Primitives.Vector2Ushort)">
            <summary>
            Calculates squared distance between tile positions.
            </summary>
            <param name="a">Tile position.</param>
            <param name="b">Another tile position.</param>
            <returns>Squared tile distance between them.</returns>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Logging.ILogEntriesProvider">
            <summary>
            Log entries provider.
            </summary>
        </member>
        <member name="E:AtomicTorch.CBND.GameApi.Logging.ILogEntriesProvider.NewLogEntry">
            <summary>
            Occurs when a new log entry written.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Logging.ILogEntriesProvider.Log">
            <summary>
            Gets the current log entries.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Logging.ILogger">
            <summary>
            Provides methods for writing log entries into the game log. Also it contains property LogEntriesProvider for accessing
            already logged messages and subscribing on the new log entry message event.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.Logging.ILogger.LogEntriesProvider">
            <summary>
            Gets the log entries provider. It provides current logged entries and allows subscription on new log entries.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Logging.ILogger.Dev(AtomicTorch.GameEngine.Common.Primitives.AutoStringBuilder,AtomicTorch.CBND.GameApi.Data.Characters.ICharacter,System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Writes a "developer" message into the log. Use for development needs only, when you want to have a very
            distinctive/bold message in the log.
            </summary>
            <param name="message">Message text.</param>
            <param name="characterRelated">Character instance to associate with this message.</param>
            <param name="callerMemberName">Auto-provided parameter. Do not set it.</param>
            <param name="callerLineNumber">Auto-provided parameter. Do not set it.</param>
            <param name="callerFile">Auto-provided parameter. Do not set it.</param>
            <param name="appendStacktrace">Automatically append stacktrace (required to locate code on click in log).</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Logging.ILogger.Error(AtomicTorch.GameEngine.Common.Primitives.AutoStringBuilder,AtomicTorch.CBND.GameApi.Data.Characters.ICharacter,System.String,System.Int32,System.String)">
            <summary>
            Writes an error message into the log.
            </summary>
            <param name="message">Message text.</param>
            <param name="characterRelated">Character instance to associate with this message.</param>
            <param name="callerMemberName">Auto-provided parameter. Do not set it.</param>
            <param name="callerLineNumber">Auto-provided parameter. Do not set it.</param>
            <param name="callerFile">Auto-provided parameter. Do not set it.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Logging.ILogger.Exception(System.Exception,AtomicTorch.GameEngine.Common.Primitives.AutoStringBuilder,AtomicTorch.CBND.GameApi.Data.Characters.ICharacter,System.String,System.Int32,System.String)">
            <summary>
            Writes an exception with message into the log.
            </summary>
            <param name="exception">Instance of exception.</param>
            <param name="message">Meaningful message text to describe when exception happened.</param>
            <param name="characterRelated">Character instance to associate with this exception.</param>
            <param name="callerMemberName">Auto-provided parameter. Do not set it.</param>
            <param name="callerLineNumber">Auto-provided parameter. Do not set it.</param>
            <param name="callerFile">Auto-provided parameter. Do not set it.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Logging.ILogger.Important(AtomicTorch.GameEngine.Common.Primitives.AutoStringBuilder,AtomicTorch.CBND.GameApi.Data.Characters.ICharacter,System.String,System.Int32,System.String)">
            <summary>
            Writes an important message into the log.
            </summary>
            <param name="message">Message text.</param>
            <param name="characterRelated">Character instance to associate with this message.</param>
            <param name="callerMemberName">Auto-provided parameter. Do not set it.</param>
            <param name="callerLineNumber">Auto-provided parameter. Do not set it.</param>
            <param name="callerFile">Auto-provided parameter. Do not set it.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Logging.ILogger.Info(AtomicTorch.GameEngine.Common.Primitives.AutoStringBuilder,AtomicTorch.CBND.GameApi.Data.Characters.ICharacter,System.String,System.Int32,System.String)">
            <summary>
            Writes an info message into the log.
            </summary>
            <param name="message">Message text.</param>
            <param name="characterRelated">Character instance to associate with this message.</param>
            <param name="callerMemberName">Auto-provided parameter. Do not set it.</param>
            <param name="callerLineNumber">Auto-provided parameter. Do not set it.</param>
            <param name="callerFile">Auto-provided parameter. Do not set it.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Logging.ILogger.Warning(AtomicTorch.GameEngine.Common.Primitives.AutoStringBuilder,AtomicTorch.CBND.GameApi.Data.Characters.ICharacter,System.String,System.Int32,System.String)">
            <summary>
            Writes an warning message into the log.
            </summary>
            <param name="message">Message text.</param>
            <param name="characterRelated">Character instance to associate with this message.</param>
            <param name="callerMemberName">Auto-provided parameter. Do not set it.</param>
            <param name="callerLineNumber">Auto-provided parameter. Do not set it.</param>
            <param name="callerFile">Auto-provided parameter. Do not set it.</param>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Logging.LogEntryWithSource">
            <summary>
            LogEntry with source file information.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Logging.LogEntryWithSource.CleanMessage">
            <summary>
            Cleaned message - without any extra information.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Logging.LogEntryWithSource.Line">
            <summary>
            Line number in source file.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Logging.LogEntryWithSource.LocalFilePath">
            <summary>
            Local file path (relative to mod root folder).
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Logging.LogEntryWithSource.MethodName">
            <summary>
            Called method name of the source file.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Logging.LogEntryWithSource.RealFilePath">
            <summary>
            File path in real file system (null if mod is packed).
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Logging.LogEntryWithOrigin">
            <summary>
            LogEntry containing information where it was logged - on the server or the client.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Logging.LogEntryWithOrigin.IsServerLogEntry">
            <summary>
            True if log entry is logged on the server.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.Logging.LogEntryWithOrigin.LogEntry">
            <summary>
            Log entry.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.Logging.LogEntryWithOrigin.#ctor(AtomicTorch.GameEngine.Common.Logging.LogEntry,System.Boolean)">
            <summary>
            Initializes instance of this class.
            </summary>
            <param name="logEntry">Log entry.</param>
            <param name="isServerLogEntry">True if log entry is logged on the server.</param>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.Logging.NewLogEntryCallback">
            <summary>
            Represents the method that will handle event when a new log entry written.
            </summary>
            <param name="logEntry">Last logged log entry.</param>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.NoDocAttribute">
            <summary>
            Attribute for marking any code entity (class, method, property, etc)
            to prevent it from being included in the generated docs.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.NotLocalizable">
            <summary>
            Attribute for marking any property or public const field as not localizable.
            (it will be not visible in Translation tool as localizable entry)
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.NotPersistentAttribute">
            <summary>
            Attribute for marking any type (enum/class/struct) to exclude it from serialization.
            (by default all enums are registered to both network and persistent serialization providers)
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentMusicSource.Duration">
            <summary>
            Returns current music resource duration is seconds (only if IsReady).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentMusicSource.IsLooped">
            <summary>
            Gets or sets the flag determining if the music should be played in loop (auto-restart after end).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentMusicSource.IsReady">
            <summary>
            Returns true if the music resource is loaded in memory and can be played.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentMusicSource.MusicResource">
            <summary>
            Gets or sets the music resource to play.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentMusicSource.Position">
            <summary>
            Returns current music resource position is seconds (only if IsReady).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentMusicSource.Volume">
            <summary>
            Gets or sets the sound volume.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.ServicesClient.Components.Camera.CameraDrawMode.Auto">
            <summary>
            Renders every frame.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.ServicesClient.Components.Camera.CameraDrawMode.Manual">
            <summary>
            Renders only on manual request, when all the renders are ready (textures/effects loaded asynchronously).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.Camera.ICamera2D.RenderingTag">
            <summary>
            Special rendering tag - this camera will render only the rendering components with the same rendering tag.
            <see cref="T:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSpriteRenderer" />
            <see cref="T:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSkeleton" />
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.Components.Camera.ICamera2D.SetOrthographicProjection(System.UInt16,System.UInt16)">
            <summary>
            Set pixel-perfect orthographic project. Useful if you use render texture
            <see cref="M:AtomicTorch.CBND.GameApi.ServicesClient.IRenderingClientService.CreateRenderTexture(System.String,System.Int32,System.Int32,AtomicTorch.CBND.GameApi.ServicesClient.Rendering.SurfaceFormat)" />as <see cref="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.Camera.ICamera2D.RenderTarget" />.
            </summary>
            <param name="width">Viewport width.</param>
            <param name="height">Viewport height.</param>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.ServicesClient.Components.DrawOrder">
            <summary>
            Specifies rendering order.<br />
            Please note: you can use "+1"/"-1" to offset draw order. For example, "DrawOrder.Default+1" to draw over all
            regular world objects.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.ServicesClient.Components.DrawOrder.Ground">
            <summary>
            Ground tiles draw order - draws under everything. There are nothing lower than this.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.ServicesClient.Components.DrawOrder.Floor">
            <summary>
            Floor tiles draw order.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.ServicesClient.Components.DrawOrder.Default">
            <summary>
            Default draw order - all regular world objects, characters, etc.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.ServicesClient.Components.DrawOrder.Overlay">
            <summary>
            Overlay draw order - draws over everything
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.Components.EffectInstance.#ctor">
            <summary>
            You cannot create instances of this class. Use <see cref="M:AtomicTorch.CBND.GameApi.ServicesClient.Components.EffectInstance.Create(AtomicTorch.CBND.GameApi.Resources.EffectResource)" />.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentLayerRenderer.DrawOrder">
            <summary>
            Gets or sets the draw order. Higher value means draws over.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentLayerRenderer.RenderingTag">
            <summary>
            Special rendering tag - this component will be rendered only by the camera with the same rendering tag.
            <see cref="T:AtomicTorch.CBND.GameApi.ServicesClient.Components.Camera.ICamera2D" />.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentLayerRenderer.TextureResource">
            <summary>
            Gets or sets the texture resource to draw.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSkeleton">
            <summary>
            Component for managing skeleton animations.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSkeleton.CurrentSkeleton">
            <summary>
            Gets the current active skeleton animation resource.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSkeleton.DrawMode">
            <summary>
            Gets or sets the draw mode.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSkeleton.DrawOrder">
            <summary>
            Gets or sets the draw order.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSkeleton.DrawOrderOffsetY">
            <summary>
            Gets or sets the draw order offset by Y axis (in world units).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSkeleton.PositionOffset">
            <summary>
            Gets or sets the draw world position offset.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSkeleton.RenderingTag">
            <summary>
            Special rendering tag - this component will be rendered only by the camera with the same rendering tag.
            <see cref="T:AtomicTorch.CBND.GameApi.ServicesClient.Components.Camera.ICamera2D" />.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSkeleton.AddAnimation(System.Byte,System.String,System.Boolean,System.Nullable{System.Single},System.Single)">
            <summary>
            Adds animation - to be played after current animation completed. Please note: if current animation is looped, added
            animation will never start!
            </summary>
            <param name="trackIndex">Track index.</param>
            <param name="animationName">Animation name.</param>
            <param name="isLooped">Determines if the animation is looped.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSkeleton.GetCurrentAnimationName(System.Byte,System.Boolean)">
            <summary>
            Gets the current animation name for track.
            </summary>
            <param name="trackIndex">Track index.</param>
            <returns>Current playing animation name on specified track.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSkeleton.GetLatestAddedAnimationName(System.Byte)">
            <summary>
            Gets the latest queued (or current) animation name for track.
            </summary>
            <param name="trackIndex">Track index.</param>
            <returns>Current playing animation name on specified track.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSkeleton.RemoveAnimationTrack(System.Byte)">
            <summary>
            Removes animation track completely.
            </summary>
            <param name="trackIndex">Track index.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSkeleton.RemoveAttachmentAnimationsForSlot(System.String)">
            <summary>
            Finds and modifies all animations which contains a timeline which is modifying the slot's current attachment.
            For example, with this method it's possible to remove all modifications for "Weapon" slot — whi
            </summary>
            <param name="slotName">Slot name.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSkeleton.SelectCurrentSkeleton(AtomicTorch.CBND.GameApi.Resources.SkeletonResource,System.String,System.Boolean)">
            <summary>
            Sets current skeleton animation resource. Please note that it must be contained in all resources when this manager
            was constructed (<see cref="!:IRenderingClientService.CreateSkeletonAnimationRenderer" />).
            </summary>
            <param name="skeletonResource">Skeleton animation resource.</param>
            <param name="animationName">Animation name which will be played after switch on this skeleton.</param>
            <param name="isLooped">Determines if the animation is looped.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSkeleton.SetAlphaForTrack(System.UInt16,System.Double)">
            <summary>
            Values less than 1 mix this animation with the last skeleton pose. Defaults to 1, which overwrites the last skeleton
            pose with
            this animation.
            Typically track 0 is used to completely pose the skeleton, then alpha can be used on higher tracks. It doesn't make
            sense
            to use alpha on track 0 if the skeleton pose is from the last frame render.
            </summary>
            <param name="trackIndex">Index of the animation track.</param>
            <param name="alpha">Value from 0 to 1.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSkeleton.SetAnimation(System.Byte,System.String,System.Boolean,System.Nullable{System.Single})">
            <summary>
            Sets animation (replace current playing).
            Please note: for trackIndex>0 it will automatically add fade-in fade-out with default mix duration to prevent immediate
            skeleton pose popping.
            </summary>
            <param name="trackIndex">Track index.</param>
            <param name="animationName">Animation name.</param>
            <param name="isLooped">Determines if the animation is looped.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSkeleton.SetAnimationFrame(System.Byte,System.String,System.Single)">
            <summary>
            Sets specific animation frame and pause animation on it.
            </summary>
            <param name="trackIndex">Track index.</param>
            <param name="animationName">Animation name.</param>
            <param name="timePositionFraction">
            Time position fraction (from 0 to 1, where 0 is beginning of animation, 1 is end
            of animation. 0.5 is middle of animation).
            </param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSkeleton.SetAttachmentRenderer(AtomicTorch.CBND.GameApi.Resources.SkeletonResource,System.String,System.String,AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSpriteRenderer,System.Boolean,System.Double)">
            <summary>
            Setup custom renderer for specified attachment for only specified skeleton resource.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSkeleton.SetAttachmentRenderer(System.String,System.String,AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSpriteRenderer,System.Boolean,System.Double)">
            <summary>
            Setup custom renderer for specified attachment for all skeleton resources.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSkeleton.SetAttachmentSprite(AtomicTorch.CBND.GameApi.Resources.SkeletonResource,System.String,System.String,AtomicTorch.CBND.GameApi.Resources.ITextureResource,System.Double)">
            <summary>
            Setup sprite for specified attachment for only specified skeleton resource.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSkeleton.SetAttachmentSprite(System.String,System.String,AtomicTorch.CBND.GameApi.Resources.ITextureResource,System.Double)">
            <summary>
            Setup sprite for specified attachment for all skeleton resources.
            </summary>
            <param name="slotName"></param>
            <param name="attachmentName"></param>
            <param name="textureResource"></param>
            <param name="scale"></param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSkeleton.SetDefaultMixDuration(System.Single)">
            <summary>
            Sets default mix duration used for mixing between different animations.
            </summary>
            <param name="seconds">Time is seconds.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSkeleton.SetGlobalSpeed(System.Single)">
            <summary>
            Sets global speed multiplier.
            </summary>
            <param name="speedMultiplier">
            (optional) Time scale - allows slowing down/speeding up animation. For example, "0.5" will slow
            down twice, "2" will speed up twice.
            </param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSkeleton.SkipMixForTrack(System.UInt16)">
            <summary>
            Skips track mixing.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSkeleton.TransformSlotPosition(System.String,System.Nullable{AtomicTorch.GameEngine.Common.Primitives.Vector2F},System.Single@)">
            <summary>
            Calculates world position of the slot.
            </summary>
            <param name="slotName">Slot name.</param>
            <param name="screenPositionOffset">(optional) Local position offset for slot.</param>
            <param name="worldRotationAngleRad">(out) Bone world rotation angle (radians).</param>
            <returns>World position of the bone with the applied offset.</returns>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentAttachedControl">
            <summary>
            Attached UI element component.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentAttachedControl.Control">
            <summary>
            Gets or sets the attached UI element.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentAttachedControl.PositionOffset">
            <summary>
            Gets or sets the draw offset in world units.
            </summary>
            <example>
            If you want to render this element offsetted on +1 on axis X, -1 on axis Y, use "(1,-1)").
            </example>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSpriteRenderer">
            <summary>
            Client component for rendering sprite resources.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSpriteRenderer.BlendMode">
            <summary>
            Gets or sets the blend mode.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSpriteRenderer.DrawMode">
            <summary>
            Gets or sets the draw mode.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSpriteRenderer.DrawOrder">
            <summary>
            Gets or sets the draw sort order. Higher value means draw over.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSpriteRenderer.DrawOrderOffsetY">
            <summary>
            Gets or sets the draw order offset by Y axis (in world units).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSpriteRenderer.PositionOffset">
            <summary>
            Gets or sets the draw offset in world units.
            </summary>
            <example>
            If you want to render this sprite with an offset on +1 by X (right one tile) and -1 by Y (down 1 tile),
            use "(1,-1)".
            </example>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSpriteRenderer.RenderingMaterial">
            <summary>
            Gets or sets the custom rendering material to apply during draw.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSpriteRenderer.RenderingTag">
            <summary>
            Special rendering tag - this component will be rendered only by the camera with the same rendering tag.
            <see cref="T:AtomicTorch.CBND.GameApi.ServicesClient.Components.Camera.ICamera2D" />.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSpriteRenderer.Scale">
            <summary>
            Gets or sets the scale to apply during draw.
            <br />For example, (1,1) means draw as-is, (2,2) will increase both width and height twice.
            Please note: it's overridden by the Size parameter.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSpriteRenderer.Size">
            <summary>
            Size (in virtual pixels, i.e. one world tile is 128x128).
            If set, the Scale property will be calculated automatically during the rendering.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSpriteRenderer.SpritePivotPoint">
            <summary>
            Gets or sets the draw origin, normalized.
            <br />This is used to specify relative point from which the texture will be drawn.
            <br />For X: 0==left, 0.5==center, 1==right
            <br />For Y: 0==bottom, 0.5==center, 1==top.
            <br />Please note: default draw origin is at bottom-left (X=0, Y=0).
            <br />Please note: if you want to draw from center use (X=0.5, Y=0.5).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSpriteRenderer.TextureResource">
            <summary>
            Gets or sets the texture resource to draw.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.ServicesClient.Components.DrawMode">
            <summary>
            Draw mode (of sprite or skeleton animation).
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.ServicesClient.Components.DrawMode.Default">
            <summary>
            Default draw mode. No extra modifications will be applied during rendering.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.ServicesClient.Components.DrawMode.FlipHorizontally">
            <summary>
            Flip horizontally.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.ServicesClient.Components.DrawMode.FlipVertically">
            <summary>
            Flip vertically.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.ServicesClient.Components.DrawMode.FlipHorizontallyAndVertically">
            <summary>
            Flip both horizontally and vertically (bitwise OR: FlipHorizontally | FlipVertically).
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.Components.EffectParameters.#ctor">
            <summary>
            You cannot create instances of this class. Use <see cref="M:AtomicTorch.CBND.GameApi.ServicesClient.Components.EffectParameters.Create" />.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.Components.RenderingMaterial.#ctor">
            <summary>
            You cannot create this class instances. Use <see cref="M:AtomicTorch.CBND.GameApi.ServicesClient.Components.RenderingMaterial.Create(AtomicTorch.CBND.GameApi.Resources.EffectResource)" />.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.RenderingMaterial.EffectParameters">
            <summary>
            Gets or sets the effect parameters to apply during draw (shader parameters).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.RenderingMaterial.EffectResource">
            <summary>
            Gets or sets effect resource used for rendering (shader).
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSoundEmitter">
            <summary>
            Sound emitter component.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSoundEmitter.IsLooped">
            <summary>
            Gets or sets the flag determining if the sound should be played in loop (auto-restart after end).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSoundEmitter.NextSoundResource">
            <summary>
            Gets os sets the sound resource which will be played next (after current sound completed).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSoundEmitter.Pitch">
            <summary>
            Pitch value. Default: 1.0.
            Use 0.5 for half pitch, 2.0 for double pitch.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSoundEmitter.Radius">
            <summary>
            Radius for sound emitter (in 3D).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSoundEmitter.SoundResource">
            <summary>
            Gets or sets the sound resource to play.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSoundEmitter.Volume">
            <summary>
            Gets or sets the sound volume.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.ServicesClient.Rendering.TextureFilter.Linear">
            <summary>
            Linear filtering (trilinear if texture has mip-maps, otherwise bilinear).
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.ServicesClient.Rendering.TextureFilter.Point">
            <summary>
            Point filtering (neighert neigbbor). Ideal for pixel-perfect rendering.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.ServicesClient.IAudioClientService">
            <summary>
            Provides methods for creating audio-related components and operating with music playlists.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.ServicesClient.ICharactersClientService">
            <summary>
            Provides methods for working with characters.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.ICharactersClientService.CurrentPlayerCharacter">
            <summary>
            Gets current player character.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.ServicesClient.IClientApi">
            <summary>
            Provides properties to access the client API services (available only on Client-side).
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.ServicesClient.ICoreClientService">
            <summary>
            Provides methods and properties for accessing core features of the game.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.ICoreClientService.ClientRealTime">
            <summary>
            Gets current real time (in seconds) since the game started.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.ICoreClientService.EditorShowOpenFileDialog(System.String,System.Action{System.String})">
            <summary>
            Displays file opening dialogue.
            </summary>
            <param name="filter">
            Filter in special format. For example: "Image files (*.png;*.jpeg)|*.png;*.jpeg|All files
            (*.*)|*.*";
            </param>
            <param name="onPathSelected">
            Callback to execute when the user selected a path and closed dialog with the success
            result.
            </param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.ICoreClientService.EditorShowSaveFileDialog(System.String,System.Action{System.String},System.String)">
            <summary>
            Displays file saving dialogue.
            </summary>
            <param name="fileName">File name (can be changed by the user).</param>
            ///
            <param name="filter">
            Filter in special format. For example: "Image files (*.png;*.jpeg)|*.png;*.jpeg|All files
            (*.*)|*.*";
            </param>
            <param name="onPathSelected">
            Callback to execute when the user selected a path and closed dialog with the success
            result.
            </param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.ICoreClientService.OpenFileEditor(System.String,System.Int32)">
            <summary>
            Opens file editor for provided file path. For CS-files it will use Visual Studio 2015 (if available).
            </summary>
            <param name="filePath">Real file system path.</param>
            <param name="lineNumber">Line number of the file to focus on (unsupported for some file types and editors)</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.ICoreClientService.ParseLogEntrySource(System.String)">
            <summary>
            Extract cleaned-up log entry data if it contains any source information.
            </summary>
            <param name="message">Log message.</param>
            <returns>
            Cleaned up log entry with source information or null - if there message doesn't contain any source
            information.
            </returns>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.ICurrentGameService.ServerFrameNumber">
            <summary>
            Gets the current server frame number (currently processed by client, actual server frame number is ahead).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.ICurrentGameService.ServerFramerate">
            <summary>
            Server framerate (FPS). Please note that the server has a constant framerate.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.ICurrentGameService.ServerFrameTimeRounded">
            <summary>
            Gets the current server timestamp (collected frames total time) in seconds
            (currently processed by client, actual server time is ahead).
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.ServicesClient.IInputClientService">
            <summary>
            Provides methods and properties for accessing keyboard and mouse input.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.IInputClientService.MousePointedTilePosition">
            <summary>
            Gets mouse pointed tile position.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.IInputClientService.MouseScreenPosition">
            <summary>
            Gets mouse screen position (in screen pixels).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.IInputClientService.MouseWorldPosition">
            <summary>
            Gets mouse world position (in world units).
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.IInputClientService.IsKeyDown(AtomicTorch.CBND.GameApi.ServicesClient.InputKey,System.Boolean)">
            <summary>
            Checks if a key was just pressed (in current frame).
            <br />Please note: if it was pressed some time before (in previous frames) and it still held, it will return false.
            Use the method <see cref="M:AtomicTorch.CBND.GameApi.ServicesClient.IInputClientService.IsKeyHeld(AtomicTorch.CBND.GameApi.ServicesClient.InputKey,System.Boolean)" /> if you want to check if a key is just pressed or held.
            </summary>
            <param name="key">Key.</param>
            <param name="evenIfHandled">Return if a key is down even if it was marked as handled.</param>
            <returns>True if a key was just pressed (in current frame).</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.IInputClientService.IsKeyHeld(AtomicTorch.CBND.GameApi.ServicesClient.InputKey,System.Boolean)">
            <summary>
            Checks if a key is held or just pressed.
            </summary>
            <param name="key">Key.</param>
            <param name="evenIfHandled">Return if a key is held or pressed even if it was marked as handled.</param>
            <returns>True if a key is held or was just pressed.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.IInputClientService.IsKeyUp(AtomicTorch.CBND.GameApi.ServicesClient.InputKey,System.Boolean)">
            <summary>
            Checks if a key is just released (in current frame).
            </summary>
            <param name="key">Key.</param>
            <param name="evenIfHandled">Return if a key is just released even if it was marked as handled.</param>
            <returns>True if a key was just released (in current frame).</returns>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.ServicesClient.IItemsClientService">
            <summary>
            Provides methods and properties for accessing and manipulating items and containers.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.IItemsClientService.MoveOrSwapItem(AtomicTorch.CBND.GameApi.Data.Items.IItem,AtomicTorch.CBND.GameApi.Data.Items.IItemsContainer,System.Nullable{System.Byte},System.Nullable{System.UInt16},System.Boolean,System.Boolean)">
            <summary>
            Moves the item into the container.
            <br />Please note: you can specify a specific slot. If the item is available at this slotId, it will be swapped
            with the specified item.
            </summary>
            <param name="item">Item.</param>
            <param name="toContainer">Destination container.</param>
            <param name="slotId">(optional) Slot id into which the item should be placed. Can be null.</param>
            <param name="countToMove">
            (optional) (only for stackable items) Count to move from item. Should be greater than 0 and
            lower than "item.Count".
            </param>
            <param name="isLogErrors">
            (optional) Determines if the game should write an error to the log when the item cannot be
            moved or swapped.
            </param>
            <returns>True if operation is successful.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.IItemsClientService.SetCount(AtomicTorch.CBND.GameApi.Data.Items.IItem,System.Int32)">
            <summary>
            Sets item count. The count must not exceed MaxItemsPerStack of its item type.
            <br />Please note: if count is zero, the item will be destroyed. You cannot change countToDestroy of the item after
            that.
            <br />Please note: this is special Client-side method. It overrides item count (but server may send proper count
            if something incorrect happens). Use it only when you need to change instant count on the Client-side and will do the
            same operation on the Server-side also (like reloading weapon).
            </summary>
            <param name="item">Item.</param>
            <param name="count">
            New count for item. It must not exceed MaxItemsPerStack of its item type (an exception will be
            thrown).
            </param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.IItemsClientService.StackItems(AtomicTorch.CBND.GameApi.Data.Items.IItem,AtomicTorch.CBND.GameApi.Data.Items.IItem,System.Int32)">
            <summary>
            Removes count from the first item and adds it to the second item.
            <br />Applicable only for stackable items of the same type.
            <br />Please note that if you specify "count==itemFrom.Count" it will destroy "itemFrom" completely!
            <br />Please note if you don't specify count (or specify 0), this method will move as much as possible.
            </summary>
            <param name="itemFrom">Item to remove count.</param>
            <param name="itemTo">Item to add count.</param>
            <param name="count">Count to move (if 0 - move as much as possible).</param>
            <returns>True if operation is successful.</returns>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.ServicesClient.InputKey">
            <summary>
            Input keys (and mouse buttons) enumeration.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.ServicesClient.IRenderingClientService">
            <summary>
            Provides methods for creating rendering-related components.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.IRenderingClientService.FrameRateLimit">
            <summary>
            Frame rate limit.
            Special values: null means the frame rate is unlimited, 0 means the frame rate matches the screen refresh rate.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.IRenderingClientService.GpuVramBudget">
            <summary>
            Current GPU VRAM budget (in bytes).
            Please note: it's available only in DX12. Will return VRAM Dedicated amount if not available.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.IRenderingClientService.GpuVramDedicatedAmount">
            <summary>
            GPU VRAM Dedicated amount (in bytes).
            Please note that this will be very low for integrated GPUs as they're usually using RAM for video memory.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.IRenderingClientService.GpuVramWithSharedRamAmount">
            <summary>
            GPU VRAM plus shared RAM amount (in bytes).
            In case of integrated GPUs that's the correct way of measuring the available video memory.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.IRenderingClientService.GpuVramUsage">
            <summary>
            Current GPU VRAM usage (in bytes).
            Please note: it's available only in DX12. Will return 0 if not available.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.IRenderingClientService.WorldCameraWorldOffset">
            <summary>
            World camera offset.
            Useful for camera shakes and similar effects.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.IRenderingClientService.CreateSkeletonRenderer(AtomicTorch.CBND.GameApi.Data.World.IWorldObject,System.Collections.Generic.IReadOnlyCollection{AtomicTorch.CBND.GameApi.Resources.SkeletonResource},AtomicTorch.CBND.GameApi.Resources.SkeletonResource,System.String,AtomicTorch.GameEngine.Common.Primitives.Vector2D,AtomicTorch.CBND.GameApi.ServicesClient.Components.DrawOrder,System.Double,System.Double,System.SByte)">
            <summary>
            Creates skeleton animation renderer for world object.
            </summary>
            <param name="worldObject">World object to attach to this renderer.</param>
            <param name="skeletonResources">Skeleton animation resources.</param>
            <param name="defaultSkeleton">
            Default skeleton animation resource. Please note that
            <paramref name="skeletonResources" /> must contain it.
            </param>
            <param name="defaultLoopedAnimationName">
            Default animation name. Please note that this animation should be looped (like
            regular idle animation).
            </param>
            <param name="positionOffset">
            (optional) Draw offset in world units (if you want to render this skeleton
            offsetted on +1 on axis X, -1 on axis Y, use "(1,-1)").
            </param>
            <param name="drawOrder">(optional) Draw order. Use it if you need to render this skeleton over other objects.</param>
            <param name="worldScale">(optional) Skeleton world scale.</param>
            <param name="speedMultiplier">
            (optional) Time scale - allows slowing down/speeding up animation. For example, "0.5" will slow
            down twice, "2" will speed up twice.
            </param>
            <returns>
            Instance of skeleton animations manager (component attached to the scene object which is attached to the world
            object).
            </returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.IRenderingClientService.CreateSkeletonRenderer(AtomicTorch.CBND.GameApi.Scripting.IClientSceneObject,System.Collections.Generic.IReadOnlyCollection{AtomicTorch.CBND.GameApi.Resources.SkeletonResource},AtomicTorch.CBND.GameApi.Resources.SkeletonResource,System.String,AtomicTorch.GameEngine.Common.Primitives.Vector2D,AtomicTorch.CBND.GameApi.ServicesClient.Components.DrawOrder,System.Double,System.Double,System.SByte)">
            <summary>
            Creates skeleton animation renderer for world object.
            </summary>
            <param name="sceneObject">Scene object to attach this render.</param>
            <param name="skeletonResources">Skeleton animation resources.</param>
            <param name="defaultSkeleton">
            Default skeleton animation resource. Please note that
            <paramref name="skeletonResources" /> must contain it.
            </param>
            <param name="defaultLoopedAnimationName">
            Default animation name. Please note that this animation should be looped (like
            regular idle animation).
            </param>
            <param name="positionOffset">
            (optional) Draw offset in world units (if you want to render this skeleton
            offsetted on +1 on axis X, -1 on axis Y, use "(1,-1)").
            </param>
            <param name="drawOrder">(optional) Draw order. Use it if you need to render this skeleton over other objects.</param>
            <param name="worldScale">(optional) Skeleton world scale.</param>
            <param name="spriteQualityOffset"></param>
            <param name="speedMultiplier">
            (optional) Time scale - allows slowing down/speeding up animation. For example, "0.5" will slow
            down twice, "2" will speed up twice.
            </param>
            <returns>
            Instance of skeleton animations manager (component attached to the scene object which is attached to the world
            object).
            </returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.IRenderingClientService.CreateSpriteRenderer(AtomicTorch.CBND.GameApi.Data.World.IWorldObject,AtomicTorch.CBND.GameApi.Resources.ITextureResource,AtomicTorch.CBND.GameApi.ServicesClient.Components.DrawOrder,System.Nullable{AtomicTorch.GameEngine.Common.Primitives.Vector2D},System.Nullable{AtomicTorch.GameEngine.Common.Primitives.Vector2D},System.Nullable{AtomicTorch.GameEngine.Common.Primitives.Size2F},System.Double,System.Object)">
            <summary>
            Creates sprite renderer for world object.
            </summary>
            <param name="worldObject">World object to attach to this renderer.</param>
            <param name="textureResource">Texture resource.</param>
            <param name="drawOrder">(optional) Draw order. Use it if you need to render this skeleton over other objects.</param>
            <param name="positionOffset">
            (optional) Draw offset in world units (if you want to render this skeleton
            offsetted on +1 on axis X, -1 on axis Y, use "(1,-1)").
            </param>
            <param name="spritePivotPoint">
            <see cref="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSpriteRenderer.SpritePivotPoint" />
            </param>
            <param name="scale"></param>
            <param name="rotationAngleRad">(optional) Rotation angle (in radians).</param>
            <param name="renderingTag">
            Special rendering tag - this component will be rendered only by the camera with the same rendering tag.
            <see cref="T:AtomicTorch.CBND.GameApi.ServicesClient.Components.Camera.ICamera2D" />.
            </param>
            <returns>Instance of sprite renderer (component attached to the scene object which is attached to the world object).</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.IRenderingClientService.CreateSpriteRenderer(AtomicTorch.CBND.GameApi.Scripting.IClientSceneObject,AtomicTorch.CBND.GameApi.Resources.ITextureResource,AtomicTorch.CBND.GameApi.ServicesClient.Components.DrawOrder,System.Nullable{AtomicTorch.GameEngine.Common.Primitives.Vector2D},System.Nullable{AtomicTorch.GameEngine.Common.Primitives.Vector2D},System.Nullable{AtomicTorch.GameEngine.Common.Primitives.Size2F},System.Double,System.Object)">
            <summary>
            Creates sprite renderer for scene object.
            </summary>
            <param name="sceneObject">Scene object to attach this render.</param>
            <param name="textureResource">Texture resource.</param>
            <param name="drawOrder">(optional) Draw order. Use it if you need to render this skeleton over other objects.</param>
            <param name="positionOffset">
            (optional) Draw offset in world units (if you want to render this skeleton
            offsetted on +1 on axis X, -1 on axis Y, use "(1,-1)").
            </param>
            <param name="spritePivotPoint">
            <see cref="P:AtomicTorch.CBND.GameApi.ServicesClient.Components.IComponentSpriteRenderer.SpritePivotPoint" />
            </param>
            <param name="scale"></param>
            <param name="rotationAngleRad">(optional) Rotation angle (in radians).</param>
            <param name="renderingTag">
            Special rendering tag - this component will be rendered only by the camera with the same rendering tag.
            <see cref="T:AtomicTorch.CBND.GameApi.ServicesClient.Components.Camera.ICamera2D" />.
            </param>
            <returns>Instance of sprite renderer (component attached to the scene object).</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.IRenderingClientService.PreloadTextureAsync(AtomicTorch.CBND.GameApi.Resources.ITextureResource)">
            <summary>
            Loads texture (asynchronously) into cache. Useful to ensure the further use of this texture resource will
            not skip the first frames due to the texture loading.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.ServicesClient.ISceneClientService">
            <summary>
            Provides methods for accessing, creating and manipulating client scene objects.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.ISceneClientService.CreateSceneObject(System.String,System.Nullable{AtomicTorch.GameEngine.Common.Primitives.Vector2D})">
            <summary>
            Creates scene object.
            </summary>
            <param name="name">Name of the scene object.</param>
            <param name="position">(optional) Position if the scene object.</param>
            <returns>Created instance of scene object.</returns>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.ServicesClient.IUIClientService">
            <summary>
            Provides methods for creating and manipulating UI-related components.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.IUIClientService.LoadResourceDictionary(System.String)">
            <summary>
            Load any ResourceDictionary XAML file directly.
            </summary>
            <param name="xamlPath">The path to XAML file, for example "UI/Styles/MyDictionary.xaml".</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.IUIClientService.CalculateRenderingSize(System.Windows.FrameworkElement)">
            <summary>
            Calculates rendering size of the element. It takes into account all the rendering transforms applied (including during
            animation). It returns size of the control as player sees it.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.IUIClientService.AttachControl(AtomicTorch.CBND.GameApi.Data.World.IWorldObject,System.Windows.FrameworkElement,AtomicTorch.GameEngine.Common.Primitives.Vector2D,System.Boolean,System.Boolean)">
            <summary>
            Creates attached control component.
            </summary>
            <param name="worldObject">World object to attach UI element to.</param>
            <param name="uiElement">UI element.</param>
            <param name="positionOffset">Draw offset.</param>
            <param name="isFocusable">Is this UI element focusable?</param>
            <param name="isScaleWithCameraZoom"></param>
            <returns>
            Instance of "attached UI element" component (component attached to the scene object which is attached to the world
            object).
            </returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.IUIClientService.AttachControl(AtomicTorch.CBND.GameApi.Scripting.IClientSceneObject,System.Windows.FrameworkElement,AtomicTorch.GameEngine.Common.Primitives.Vector2D,System.Boolean,System.Boolean)">
            <summary>
            Creates attached control component.
            </summary>
            <param name="sceneObject">Scene object to attach UI element to.</param>
            <param name="uiElement">UI element.</param>
            <param name="positionOffset">Draw offset.</param>
            ///
            <param name="isFocusable">Is this UI element focusable?</param>
            <param name="isScaleWithCameraZoom"></param>
            <returns>
            Instance of "attached UI element" component (component attached to the scene object).
            </returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.IUIClientService.GetTextureBrush(AtomicTorch.CBND.GameApi.Resources.ITextureResource,System.Windows.Media.Stretch)">
            <summary>
            Loads the texture to the texture brush in background.
            </summary>
            <param name="textureResource">Texture resource.</param>
            <param name="stretchMode">Texture stretch mode.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.IUIClientService.GetScreenScaleCoefficient">
            <summary>
            Screen scale coefficient - ration between the actual screen resolution and one unit in UI.
            Please note that it's already including Scale.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.ServicesClient.IWorldClientService">
            <summary>
            Provides methods for accessing world objects on the Client-side.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesClient.IWorldClientService.TileAtCurrentMousePosition">
            <summary>
            Gets the tile at current mouse position.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesClient.IWorldClientService.GetGameObjectsOfProto``2">
            <summary>
            Please note - this method is not available during Bootstrapper execution.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.ServicesServer.CreateItemResult">
            <summary>
            Item creation API call result.
            </summary>
        </member>
        <member name="F:AtomicTorch.CBND.GameApi.ServicesServer.CreateItemResult.ItemAmounts">
            <summary>
            Dictionary of updated items (their count were increased to accomodate requested count).
            The dictionary format is simple pair - key is IItem, value is on how much it was increased (NOT a new count!).
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.CreateItemResult.#ctor">
            <summary>
            Initializer.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.CreateItemResult.#ctor(System.Collections.Generic.Dictionary{AtomicTorch.CBND.GameApi.Data.Items.IItem,System.UInt16},System.UInt32)">
            <summary>
            Initializer. You should never call it yourself.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesServer.CreateItemResult.TotalCreatedCount">
            <summary>
            Total created count.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.CreateItemResult.Rollback">
            <summary>
            Revert the operation completely - all the created items will be destroyed, all the updated existings items will be
            restored to their previous count.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.ServicesServer.ICharactersServerService">
            <summary>
            Provides methods for working with characters.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.ServicesServer.IDatabaseService">
            <summary>
            Provides methods for getting and setting key-based database fields.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IDatabaseService.Set``1(System.String,System.String,``0)">
            <summary>
            Stores/associated the value in the server database dictionary with the provided key.
            If you're storing an non-immutable object (such as list of something), you can do this only once.
            Please note that this action DOESN'T do any serialization on call.
            The serialization occurs only on the world snapshot generation.
            That's why you don't need to call Set() every time you want to "update" your list in database. It's already set.
            However, for a non-immutable objects you need to call Set() to commit the changed value for the provided key.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IDatabaseService.TryGet``1(System.String,System.String,``0@)">
            <summary>
            Loads the value from the server database dictionary.
            Please note that this action DOESN'T do any deserialization on call.
            The serialization occurs only on the world snapshot loading.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesServer.IGameServerService.FrameNumber">
            <summary>
            Gets the current server frame number.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesServer.IGameServerService.FrameRate">
            <summary>
            Gets the current server frame rate (tickrate).
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesServer.IGameServerService.FrameTime">
            <summary>
            Gets the current server timestamp (collected frames total time) in seconds.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.ServicesServer.IItemsServerService">
            <summary>
            Provides methods and properties for accessing and manipulating items and containers.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IItemsServerService.CanCreateItem(AtomicTorch.CBND.GameApi.Data.Items.IItemsContainerProvider,AtomicTorch.CBND.GameApi.Data.Items.IProtoItem,System.UInt32)">
            <summary>
            Checks if an item could be created.
            </summary>
            <param name="container">Container.</param>
            <param name="itemType">Item type.</param>
            <param name="count">(optional, default "1") Desired count. Should be greater than zero. Can exceed MaxItemsPerStack.</param>
            <returns>True if such item can be created.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IItemsServerService.CreateContainer(AtomicTorch.CBND.GameApi.Data.IGameObjectWithProto,AtomicTorch.CBND.GameApi.Data.Items.IProtoItemsContainer,System.Byte)">
            <summary>
            Creates container (with specific container type).
            </summary>
            <param name="owner">World object - owner of the container.</param>
            <param name="itemsContainerType">Items container type.</param>
            <param name="slotsCount">Required slots count.</param>
            <returns>Created container instance.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IItemsServerService.CreateContainer``1(AtomicTorch.CBND.GameApi.Data.IGameObjectWithProto,System.Byte)">
            <summary>
            Creates container (with specific container type).
            </summary>
            <typeparam name="TProtoItemsContainer">Items container type.</typeparam>
            <param name="owner">Owner of the container.</param>
            <param name="slotsCount">Required slots count.</param>
            <returns>Created container instance.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IItemsServerService.CreateContainer(AtomicTorch.CBND.GameApi.Data.IGameObjectWithProto,System.Byte)">
            <summary>
            Creates container (with default container type).
            </summary>
            <param name="owner">Owner of the container.</param>
            <param name="slotsCount">Required slots count.</param>
            <returns>Created container instance.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IItemsServerService.CreateItem``1(AtomicTorch.CBND.GameApi.Data.Items.IItemsContainer,System.UInt32,System.Nullable{System.Byte},System.Boolean)">
            <summary>
            Creates item (or add count to an available item stacks of this item type if possible).
            </summary>
            <typeparam name="TProtoItem">Type of item.</typeparam>
            <param name="container">Items container to store a item.</param>
            <param name="count">(optional, default is "1") Desired count.</param>
            <param name="slotId">(optional, if null - will find any empty slot) Desired slot id to accomodate the item.</param>
            <param name="onlyToExistingStacks">
            (optional) Add to existing stacks only. If true, it will never create new item
            instance(s).
            </param>
            <returns>
            Create item result. Please note that it could create a few items - and/or change count of some already
            available item stacks.
            </returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IItemsServerService.CreateItem(AtomicTorch.CBND.GameApi.Data.Items.IProtoItem,AtomicTorch.CBND.GameApi.Data.Items.IItemsContainerProvider,System.UInt32,System.Nullable{System.Byte},System.Boolean)">
            <summary>
            Creates item (or add count to an available item stacks of this item type if possible).
            </summary>
            <param name="protoItem">Type of item.</param>
            <param name="container">Items container to store a item.</param>
            <param name="count">(optional, default is "1") Desired count.</param>
            <param name="slotId">(optional, if null - will find any empty slot) Desired slot id to accomodate the item.</param>
            <param name="onlyAddToExistingStacks">
            (optional) Add to existing stacks only. If true, it will never create new item
            instance(s).
            </param>
            <returns>
            Create item result. Please note that it could create a few items - and/or change count of some already
            available item stacks.
            </returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IItemsServerService.DestroyItem(AtomicTorch.CBND.GameApi.Data.Items.IItem)">
            <summary>
            Destroys item (equals to setting its count to zero).
            </summary>
            <param name="item">Item.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IItemsServerService.DestroyItemsOfType(AtomicTorch.CBND.GameApi.Data.Items.IItemsContainerProvider,AtomicTorch.CBND.GameApi.Data.Items.IProtoItem,System.UInt32,System.UInt32@)">
            <summary>
            Destroys provided count of provided item type in the items container.
            </summary>
            <param name="container">Container.</param>
            <param name="itemType">Item type.</param>
            <param name="countToDestroy">Count to destroy.</param>
            <param name="destroyedCount">Destroyed count (can be less than countToDestroy).</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IItemsServerService.DestroyItemsOfType(AtomicTorch.CBND.GameApi.Data.Characters.ICharacter,AtomicTorch.CBND.GameApi.Data.Items.IProtoItem,System.UInt32,System.UInt32@)">
            <summary>
            Destroys provided count of provided item type in the character inventory/hotbar/equipment items containers.
            </summary>
            <param name="character">Character.</param>
            <param name="itemType">Item type.</param>
            <param name="countToDestroy">Count to destroy.</param>
            <param name="destroyedCount">Destroyed count (can be less than countToDestroy).</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IItemsServerService.MoveOrSwapItem(AtomicTorch.CBND.GameApi.Data.Items.IItem,AtomicTorch.CBND.GameApi.Data.Items.IItemsContainerProvider,System.UInt16@,System.Nullable{System.Byte},System.Nullable{System.UInt16},AtomicTorch.CBND.GameApi.Data.Characters.ICharacter,System.Boolean)">
            <summary>
            Moves the item into the container.
            <br />Please note: you can specify a specific slot. If the item is available at this slotId, it will be swapped
            with the specified item.
            </summary>
            <param name="item">Item.</param>
            <param name="containers">Container to accomodate the item.</param>
            <param name="movedCount"></param>
            <param name="slotId">(optional) Slot id into which the item should be placed. Can be null.</param>
            <param name="countToMove">
            (optional) (only for stackable items) Count to move from item. Should be greater than 0 and
            lower than "item.Count".
            </param>
            <param name="byCharacter">Character (who invokes this operation).</param>
            <param name="sendUpdateToCharacter"></param>
            <returns>True if operation is successful.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IItemsServerService.SetContainerType(AtomicTorch.CBND.GameApi.Data.Items.IItemsContainer,AtomicTorch.CBND.GameApi.Data.Items.IProtoItemsContainer)">
            <summary>
            Sets container type for container.
            </summary>
            <param name="itemsContainer">Container.</param>
            <param name="protoItemsContainer">Container prototype instance.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IItemsServerService.SetContainerType``1(AtomicTorch.CBND.GameApi.Data.Items.IItemsContainer)">
            <summary>
            Sets container type for container.
            </summary>
            <param name="itemsContainer">Container.</param>
            <typeparam name="TProtoContainer">Container prototype.</typeparam>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IItemsServerService.SetCount(AtomicTorch.CBND.GameApi.Data.Items.IItem,System.Int32,AtomicTorch.CBND.GameApi.Data.Characters.ICharacter,System.Boolean)">
            <summary>
            Sets item count. The count must not exceed MaxItemsPerStack of its item type.
            <br />Please note: if count is zero, the item will be destroyed. You cannot change countToDestroy of the item after
            that.
            </summary>
            <param name="item">Item.</param>
            <param name="count">
            New count for item. It must not exceed MaxItemsPerStack of its item type (an exception will be
            thrown).
            </param>
            <param name="byCharacter">Character (who invokes this operation).</param>
            <param name="isSendingUpdatesToPlayer">If true, the update command will be sent to the provided character.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IItemsServerService.StackItems(AtomicTorch.CBND.GameApi.Data.Items.IItem,AtomicTorch.CBND.GameApi.Data.Items.IItem,System.Int32)">
            <summary>
            Removes count from the first item and adds it to the second item.
            <br />Applicable only for stackable items of the same type.
            <br />Please note that if you specify "count==itemFrom.Count" it will destroy "itemFrom" completely!
            <br />Please note if you don't specify count (or specify 0), this method will move as much as possible.
            </summary>
            <param name="itemFrom">Item to remove count.</param>
            <param name="itemTo">Item to add count.</param>
            <param name="count">Count to move (if 0 - move as much as possible).</param>
            <returns>True if operation is successful.</returns>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.ServicesServer.IServerApi">
            <summary>
            Provides properties to access the server API services (available only on Server-side).
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldService.GetStaticWorldObjectsOfProto``1">
            <summary>
            Please note - this method is not available during Bootstrapper execution.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldService.GetTile(AtomicTorch.GameEngine.Common.Primitives.Vector2Ushort,System.Boolean)">
            <summary>
            Gets the tile for specified tile position.
            </summary>
            <param name="tilePosition">Tile position.</param>
            <param name="logOutOfBounds"></param>
            <returns>Tile.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldService.GetWorldObjectsOfProto``1">
            <summary>
            Please note - this method is not available during Bootstrapper execution.
            </summary>
        </member>
        <member name="T:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService">
            <summary>
            Provides methods for accessing and manipulating world objects.
            </summary>
        </member>
        <member name="P:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService.WorldBounds">
            <summary>
            Gets world bounds.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService.CreateDynamicWorldObject(AtomicTorch.CBND.GameApi.Data.World.IProtoDynamicWorldObject,AtomicTorch.GameEngine.Common.Primitives.Vector2D)">
            <summary>
            Creates dynamic world object of provided type at provided tile position.
            </summary>
            <param name="protoDynamicWorldObject">Static world object type.</param>
            <param name="position">World position.</param>
            <returns>Built static world object or null.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService.CreateDynamicWorldObject``1(AtomicTorch.GameEngine.Common.Primitives.Vector2D)">
            <summary>
            Creates dynamic world object of provided type at provided tile position.
            </summary>
            <typeparam name="TDynamicWorldObjectType">Static world object type.</typeparam>
            <param name="position">World position</param>
            <returns>Built static world object or null.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService.CreateStaticWorldObject(AtomicTorch.CBND.GameApi.Data.World.IProtoStaticWorldObject,AtomicTorch.GameEngine.Common.Primitives.Vector2Ushort)">
            <summary>
            Creates static world object of provided type at provided tile position.
            </summary>
            <param name="protoStaticWorldObject">Static world object type.</param>
            <param name="tilePosition">Tile position.</param>
            <returns>Built static world object or null.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService.CreateStaticWorldObject``1(AtomicTorch.GameEngine.Common.Primitives.Vector2Ushort)">
            <summary>
            Creates static world object of provided type at provided tile position.
            </summary>
            <typeparam name="TStaticWorldObjectType">Static world object type.</typeparam>
            <param name="tilePosition">Tile position.</param>
            <returns>Built static world object or null.</returns>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService.DestroyObject(AtomicTorch.CBND.GameApi.Data.World.IWorldObject)">
            <summary>
            Destroys world object (static or dynamic).
            </summary>
            <param name="abstractWorldObject">World object.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService.EnterPrivateScope(AtomicTorch.CBND.GameApi.Data.Characters.ICharacter,AtomicTorch.CBND.GameApi.Data.IGameObject)">
            <summary>
            Adds object into player character private scope.
            </summary>
            <param name="who"></param>
            <param name="gameObject"></param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService.FixMapTilesAll">
            <summary>
            Fix whole map. No updates will be sent to the players - use it ONLY during initialization of the game, when there are
            no
            players connected.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService.FixMapTilesRecentlyModified">
            <summary>
            Fix recently modified map tiles and their neighbors.
            Also updates will be sent to the players.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService.GetCharactersInView(AtomicTorch.CBND.GameApi.Data.Characters.ICharacter,System.Collections.Generic.IList{AtomicTorch.CBND.GameApi.Data.Characters.ICharacter},System.Boolean)">
            <summary>
            Populates list of characters in view of the character.
            </summary>
            <param name="character">Owner of the view.</param>
            <param name="result">Temporary list of characters to store the result</param>
            <param name="onlyPlayerCharacters">
            Set to true if the result should contain only the player characters (NPC's are
            excluded).
            </param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService.GetGameObjectsOfProto``2">
            <summary>
            Please note - this method is not available during Bootstrapper execution.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService.GetInViewScopeByPlayers(AtomicTorch.CBND.GameApi.Data.World.IWorldObject,System.Collections.Generic.List{AtomicTorch.CBND.GameApi.Data.Characters.ICharacter})">
            <summary>
            Gets hashset of characters observing the object directly.
            If the world object is character, this method will exclude this character from the result.
            This method is equivalent to <see cref="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService.GetScopedByCharacters(AtomicTorch.CBND.GameApi.Data.IGameObjectWithProto,System.Collections.Generic.List{AtomicTorch.CBND.GameApi.Data.Characters.ICharacter},System.Boolean)" /> with onlyPlayerCharacters==true.
            </summary>
            <param name="worldObject">Any world object.</param>
            <param name="result"></param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService.GetScopedByCharacters(AtomicTorch.CBND.GameApi.Data.IGameObjectWithProto,System.Collections.Generic.List{AtomicTorch.CBND.GameApi.Data.Characters.ICharacter},System.Boolean)">
            <summary>
            Gets hashset of characters observing the object (including spectator characters).
            If the world object is character, this method will exclude this character from the result.
            </summary>
            <param name="worldObject">Any world object.</param>
            <param name="result"></param>
            <param name="onlyPlayerCharacters">
            Determines whether only player characters should be contained in the result.
            If false, NPCs will be also included.
            </param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService.GetScopedByPlayers(AtomicTorch.CBND.GameApi.Data.IGameObjectWithProto,System.Collections.Generic.List{AtomicTorch.CBND.GameApi.Data.Characters.ICharacter})">
            <summary>
            Gets hashset of characters observing the object (including spectator characters).
            If the world object is character, this method will exclude this character from the result.
            This method is equivalent to <see cref="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService.GetScopedByCharacters(AtomicTorch.CBND.GameApi.Data.IGameObjectWithProto,System.Collections.Generic.List{AtomicTorch.CBND.GameApi.Data.Characters.ICharacter},System.Boolean)" /> with onlyPlayerCharacters==true.
            </summary>
            <param name="worldObject">Any world object.</param>
            <param name="result"></param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService.GetScopedByPlayers(AtomicTorch.CBND.GameApi.Data.IGameObjectWithProto,AtomicTorch.GameEngine.Common.DataStructures.ITempList{AtomicTorch.CBND.GameApi.Data.Characters.ICharacter})">
            <summary>
            Gets hashset of characters observing the object (including spectator characters).
            If the world object is character, this method will exclude this character from the result.
            This method is equivalent to <see cref="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService.GetScopedByCharacters(AtomicTorch.CBND.GameApi.Data.IGameObjectWithProto,System.Collections.Generic.List{AtomicTorch.CBND.GameApi.Data.Characters.ICharacter},System.Boolean)" /> with onlyPlayerCharacters==true.
            </summary>
            <param name="worldObject">Any world object.</param>
            <param name="result"></param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService.GetStaticWorldObjects(AtomicTorch.GameEngine.Common.DataStructures.ITempList{AtomicTorch.CBND.GameApi.Data.World.IStaticWorldObject})">
            <summary>
            Adds all the static world objects into the list.
            Very slow and should be not used as is unless very necessary!
            It's better to use GetStaticWorldObjectsAsync though it doesn't guarantee the correct results.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService.GetStaticWorldObjectsAsync(System.Collections.Generic.List{AtomicTorch.CBND.GameApi.Data.World.IStaticWorldObject})">
            <summary>
            Adds all the static world objects into the list (spread across multiple frames).
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService.GetStaticWorldObjectsInView(AtomicTorch.CBND.GameApi.Data.Characters.ICharacter,System.Collections.Generic.IList{AtomicTorch.CBND.GameApi.Data.World.IStaticWorldObject},System.Boolean)">
            <summary>
            Populates list of static world objects in view of the character.
            </summary>
            <param name="character">Owner of the view.</param>
            <param name="result">Temporary list of static world objects to store the result.</param>
            <param name="sortByDistance">If true, the result will be sorted by distance.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService.GetStaticWorldObjectsOfProtoInBounds``1(AtomicTorch.GameEngine.Common.Primitives.RectangleInt)">
            <summary>
            Please note—this method might return the same object several times. Be sure to filter such duplicates.
            </summary>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService.GetWorldObjectsInView(AtomicTorch.CBND.GameApi.Data.Characters.ICharacter,System.Collections.Generic.IList{AtomicTorch.CBND.GameApi.Data.World.IWorldObject},System.Boolean)">
            <summary>
            Populates list of world objects (static and dynamic) in view of the character.
            </summary>
            <param name="character">Owner of the view.</param>
            <param name="result">Temporary list of world objects to store the result.</param>
            <param name="sortByDistance">If true, the result will be sorted by distance.</param>
        </member>
        <member name="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService.ScheduleFixTileHeight(AtomicTorch.GameEngine.Common.Primitives.Vector2Ushort)">
            <summary>
            Schedules fixing tile height - it will be called during the next <see cref="M:AtomicTorch.CBND.GameApi.ServicesServer.IWorldServerService.FixMapTilesRecentlyModified" /> call.
            </summary>
        </member>
    </members>
</doc>
