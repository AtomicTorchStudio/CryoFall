<!-- ReSharper disable CanExtractXamlLocalizableStringXaml -->
<base:BaseUserControl
    x:Class="AtomicTorch.CBND.CoreMod.UI.Controls.Core.DebugTools.DebugToolsOverlay"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:base="clr-namespace:AtomicTorch.GameEngine.Common.Client.MonoGame.UI;assembly=AtomicTorch.CBND.GameApi.WPF.Stubs"
    xmlns:data="clr-namespace:AtomicTorch.CBND.CoreMod.UI.Controls.Core.DebugTools"
    xmlns:core="clr-namespace:AtomicTorch.CBND.CoreMod.UI.Controls.Core"
    mc:Ignorable="d"
    d:DesignHeight="1280" d:DesignWidth="800"
    d:DataContext="{d:DesignInstance data:ViewModelDebugToolsOverlay, IsDesignTimeCreatable=True}"
    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
    Background="#55000000"
    x:Name="Overlay">

    <base:BaseUserControl.Resources>
        <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
            <Setter Property="Margin" Value="5" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="FontFamily" Value="{StaticResource CondensedFontFamily}" />
        </Style>
    </base:BaseUserControl.Resources>

    <!-- A small hack - we put everything into a button - it will catch mouse clicks and prevent closing of overlay if you click inside border -->
    <Button Style="{x:Null}">
        <Button.Template>
            <ControlTemplate>
                <ContentPresenter />
            </ControlTemplate>
        </Button.Template>

        <Border HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Background="#55000000"
                CornerRadius="5"
                Padding="5">
            <StackPanel Orientation="Vertical">
                <CheckBox Content="Stats overlay"
                          IsChecked="{Binding IsStatsOverlayEnabled}" />

                <Control Style="{StaticResource ControlHorizontalSeparator}" />

                <CheckBox Content="Grid"
                          IsChecked="{Binding IsGridEnabled}" />

                <CheckBox Content="Guides"
                          IsChecked="{Binding IsGuidesEnabled}" />

                <Control Style="{StaticResource ControlHorizontalSeparator}" />

                <CheckBox Content="Post-effects"
                          IsChecked="{Binding IsPostEffectsEnabled}"
                          Visibility="{Binding IsPostEffectsCheckBoxVisible, Converter={StaticResource BoolToVisibilityConverter}}" />

                <CheckBox Content="Terrain blending"
                          IsChecked="{Binding IsTerrainBlendingEnabled}" />

                <CheckBox Content="Terrain decals"
                          IsChecked="{Binding IsTerrainDecalsEnabled}" />

                <Control Style="{StaticResource ControlHorizontalSeparator}" />

                <CheckBox Content="Physics visualizer"
                          IsChecked="{Binding IsPhysicsSpaceVisualizerEnabled}" />

                <CheckBox Content="Lag prediction"
                          IsChecked="{Binding IsClientLagPredictionEnabled}" />

                <CheckBox Content="Lag prediction visualizer"
                          IsChecked="{Binding IsClientLagPredictionVisualizerEnabled}"
                          IsEnabled="{Binding IsClientLagPredictionEnabled}">
                    <base:ToolTipServiceExtend.ToolTip>
                        <core:FormattedTextBlock>
                            [b]Legend:[/b]
                            [*]Green - your position
                            [*]Red - predicted position
                            [*]White - received server position
                        </core:FormattedTextBlock>
                    </base:ToolTipServiceExtend.ToolTip>
                </CheckBox>
            </StackPanel>
        </Border>
    </Button>
</base:BaseUserControl>