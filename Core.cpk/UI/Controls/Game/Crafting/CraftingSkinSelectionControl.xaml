<base:BaseUserControl x:Class="AtomicTorch.CBND.CoreMod.UI.Controls.Game.Crafting.CraftingSkinSelectionControl"
                      x:Name="UserControl"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:local="clr-namespace:AtomicTorch.CBND.CoreMod.UI.Controls.Game.Crafting"
                      xmlns:base="clr-namespace:AtomicTorch.GameEngine.Common.Client.MonoGame.UI;assembly=AtomicTorch.CBND.GameApi.WPF.Stubs"
                      xmlns:core="clr-namespace:AtomicTorch.CBND.CoreMod.UI.Controls.Core"
                      xmlns:data="clr-namespace:AtomicTorch.CBND.CoreMod.UI.Controls.Game.Crafting.Data"
                      xmlns:loc="clr-namespace:AtomicTorch.CBND.CoreMod.UI"
                      mc:Ignorable="d"
                      d:DesignHeight="300" d:DesignWidth="300"
                      d:DataContext="{d:DesignInstance data:ViewModelCraftingSkinSelectionControl}">
    <Grid
        Visibility="{Binding DataContext.IsVisible, Converter={StaticResource BoolToVisibilityConverter}, ElementName=LayoutRoot}">
        <core:WidgetPanel InnerGlowSize="7"
                          VisibilityBackgroundImage="Collapsed"
                          WidgetBackground="{StaticResource WindowBackgroundBrush}" />

        <Grid x:Name="LayoutRoot"
              HorizontalAlignment="Stretch"
              Width="224"
              Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <local:CraftingSkinPreviewControl
                Grid.Row="0"
                Width="224"
                Height="250"
                IsActive="{Binding IsVisible}"
                ProtoItemToApply="{Binding SelectedSkin}" />

            <TextBlock Grid.Row="1"
                       Text="{x:Static loc:CoreStrings.Skins_SelectSkin}"
                       Foreground="{StaticResource BrushColor6}"
                       FontFamily="{StaticResource CondensedFontFamily}"
                       FontSize="13"
                       FontWeight="Bold"
                       Margin="3,10,0,0" />

            <ListBox Grid.Row="2"
                     VerticalAlignment="Stretch"
                     HorizontalAlignment="Stretch"
                     ItemsSource="{Binding Skins}"
                     SelectedValue="{Binding SelectedSkin}"
                     SelectedValuePath="ProtoItemSkin"
                     Margin="0,3,0,0">
                <ListBox.Template>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <ItemsPresenter />
                    </ControlTemplate>
                </ListBox.Template>

                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>

                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="core:SoundUI.ClickSound" Value="{StaticResource SoundListElementClick}" />
                        <Setter Property="core:SoundUI.EnterSound" Value="{StaticResource SoundListElementEnter}" />
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush Opacity="0.4" StartPoint="0,0" EndPoint="1,1">
                                    <GradientStop Color="#FF003F57" Offset="0.5" />
                                    <GradientStop Color="#00003F57" Offset="1" />
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Foreground" Value="{StaticResource BrushColor7}" />
                        <Setter Property="BorderBrush" Value="{x:Null}" />
                        <Setter Property="BorderThickness" Value="0,0,0,3" />
                        <Setter Property="Margin" Value="2" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border x:Name="Border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="3,3,0,0"
                                            Padding="2,1,2,0"
                                            d:DataContext="{d:DesignInstance data:ViewModelCraftingMenuRecipeDetails}">
                                        <!-- Icon -->
                                        <Rectangle
                                            Fill="{Binding Icon}"
                                            Width="48"
                                            Height="48" />

                                        <!-- Tooltip -->
                                        <base:ToolTipServiceExtend.ToolTip>
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.ColumnSpan="2"
                                                           Text="{Binding Title}"
                                                           FontWeight="Bold"
                                                           Margin="0,0,0,3" />

                                                <Control Grid.Row="1"
                                                         Grid.Column="0"
                                                         Visibility="{Binding HasSkinCustomEffects, Converter={StaticResource BoolToVisibilityConverter}}"
                                                         Style="{StaticResource ControlInfoPointStyle}"
                                                         VerticalAlignment="Top" />
                                                <core:FormattedTextBlock Grid.Row="1"
                                                                         Grid.Column="1"
                                                                         Text="{x:Static loc:CoreStrings.Skin_HasDecorativeEffects}"
                                                                         Visibility="{Binding HasSkinCustomEffects, Converter={StaticResource BoolToVisibilityConverter}}"
                                                                         Foreground="{StaticResource BrushColorAltLabelForeground}"
                                                                         MaxWidth="240"
                                                                         Margin="4,0,0,0" />
                                            </Grid>
                                        </base:ToolTipServiceExtend.ToolTip>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsAvailable}" Value="False">
                                <Setter Property="Background" Value="{StaticResource ItemBackgroundRedBrush}" />
                            </DataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsAvailable}" Value="True" />
                                    <Condition
                                        Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background"
                                        Value="{StaticResource ItemBackgroundNormalHoverBrush}" />
                                <Setter Property="BorderBrush"
                                        Value="{StaticResource ItemBorderNormalHoverBrush}" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsAvailable}" Value="True" />
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                               Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background"
                                        Value="{StaticResource ItemBackgroundNormalActiveBrush}" />
                                <Setter Property="BorderBrush"
                                        Value="{StaticResource ItemBorderNormalActiveBrush}" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsAvailable}" Value="False" />
                                    <Condition
                                        Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background"
                                        Value="{StaticResource ItemBackgroundRedHoverBrush}" />
                                <Setter Property="BorderBrush" Value="{StaticResource ItemBorderRedHoverBrush}" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsAvailable}" Value="False" />
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                               Value="True" />
                                </MultiDataTrigger.Conditions>

                                <Setter Property="Background"
                                        Value="{StaticResource ItemBackgroundRedActiveBrush}" />
                                <Setter Property="BorderBrush"
                                        Value="{StaticResource ItemBorderRedActiveBrush}" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>

            <ContentControl Grid.Row="3"
                            Visibility="{Binding IsEditor, Converter={StaticResource BoolToVisibilityConverter}}"
                            Margin="3,10,0,0">
                <Grid
                    Visibility="{Binding ViewModelSelectedSkin, Converter={StaticResource NullToVisibilityConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0"
                               Grid.Column="0"
                               Grid.ColumnSpan="3"
                               Text="Editor data"
                               FontWeight="Bold"
                               FontSize="11" />

                    <TextBlock Grid.Row="1"
                               Grid.Column="0"
                               Text="ID:"
                               FontSize="11" />
                    <TextBlock Grid.Row="1"
                               Grid.Column="2"
                               Text="{Binding ViewModelSelectedSkin.SkinId}"
                               FontSize="11" />

                    <TextBlock Grid.Row="2"
                               Grid.Column="0"
                               Text="Name:"
                               FontSize="11" />
                    <TextBlock Grid.Row="2"
                               Grid.Column="2"
                               Text="{Binding ViewModelSelectedSkin.SkinIdName}"
                               FontSize="11"
                               TextWrapping="Wrap" />

                    <TextBlock Grid.Row="3"
                               Grid.Column="0"
                               Text="Pool:"
                               FontSize="11" />
                    <TextBlock Grid.Row="3"
                               Grid.Column="2"
                               Text="{Binding ViewModelSelectedSkin.SkinsPool}"
                               FontSize="11" />
                </Grid>
            </ContentControl>
        </Grid>
    </Grid>
</base:BaseUserControl>