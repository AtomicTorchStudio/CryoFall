<base:BaseUserControl
    x:Class="AtomicTorch.CBND.CoreMod.UI.Controls.Game.WorldObjects.Special.DangerAreaControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:base="clr-namespace:AtomicTorch.GameEngine.Common.Client.MonoGame.UI;assembly=AtomicTorch.CBND.GameApi.WPF.Stubs"
    mc:Ignorable="d"
    Focusable="False"
    IsHitTestVisible="False">

    <base:BaseUserControl.Resources>

        <Storyboard x:Key="StoryboardAnimationStart"
                    AutoReverse="False">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1" />
            </DoubleAnimationUsingKeyFrames>

            <DoubleAnimationUsingKeyFrames
                Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                Storyboard.TargetName="LayoutRoot">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:1.0" Value="1" />
            </DoubleAnimationUsingKeyFrames>

            <DoubleAnimationUsingKeyFrames
                Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                Storyboard.TargetName="LayoutRoot">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:1.0" Value="1" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="StoryboardAnimationCircle"
                    AutoReverse="False"
                    RepeatBehavior="Forever">
            <DoubleAnimationUsingKeyFrames
                Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                Storyboard.TargetName="Ellipse">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="360" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </base:BaseUserControl.Resources>

    <base:BaseUserControl.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource StoryboardAnimationCircle}" />
            <BeginStoryboard Storyboard="{StaticResource StoryboardAnimationStart}" />
        </EventTrigger>
    </base:BaseUserControl.Triggers>

    <Grid x:Name="LayoutRoot"
          RenderTransformOrigin="0.5,0.5">
        <Grid.RenderTransform>
            <ScaleTransform />
        </Grid.RenderTransform>

        <!-- Inner static ellipse (to outer stroke is done as a separate ellipse) -->
        <Ellipse Stretch="Fill"
                 RenderTransformOrigin="0.5,0.5">
            <Ellipse.Fill>
                <RadialGradientBrush>
                    <GradientStop
                        Color="{Binding Source={StaticResource ColorRed5}, Converter={StaticResource ColorAlphaConverter}, ConverterParameter=0x00}"
                        Offset="0.5" />
                    <GradientStop
                        Color="{Binding Source={StaticResource ColorRed5}, Converter={StaticResource ColorAlphaConverter}, ConverterParameter=0x33}"
                        Offset="1" />
                </RadialGradientBrush>
            </Ellipse.Fill>
        </Ellipse>

        <!-- Rotating ellipse with outer stroke -->
        <Ellipse x:Name="Ellipse"
                 Stretch="Fill"
                 Width="128"
                 Height="128"
                 RenderTransformOrigin="0.5,0.5"
                 StrokeThickness="2.5"
                 StrokeDashArray="1.5,1.5">
            <Ellipse.Stroke>
                <SolidColorBrush
                    Color="{Binding Source={StaticResource ColorRed5}, Converter={StaticResource ColorAlphaConverter}, ConverterParameter=0x80}" />
            </Ellipse.Stroke>
            <Ellipse.RenderTransform>
                <RotateTransform />
            </Ellipse.RenderTransform>
        </Ellipse>
    </Grid>

</base:BaseUserControl>