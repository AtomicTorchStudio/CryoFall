<base:BaseUserControl
    x:Class="AtomicTorch.CBND.CoreMod.UI.Controls.Game.HUD.HUDStatusEffectsBar"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:base="clr-namespace:AtomicTorch.GameEngine.Common.Client.MonoGame.UI;assembly=AtomicTorch.CBND.GameApi.WPF.Stubs"
    xmlns:data="clr-namespace:AtomicTorch.CBND.CoreMod.UI.Controls.Game.HUD.Data"
    mc:Ignorable="d"
    d:DesignHeight="300" d:DesignWidth="300"
    d:DataContext="{d:DesignInstance data:ViewModelHUDStatusEffectsBar, IsDesignTimeCreatable=True}"
    xmlns:loc="clr-namespace:AtomicTorch.CBND.CoreMod.UI">
    <ItemsControl ItemsSource="{Binding CurrentStatusEffects}" HorizontalAlignment="Center">
        <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
                <!-- max width calculated to fit 4 icons -->
                <WrapPanel Orientation="Horizontal" MaxWidth="275" />
            </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>

        <ItemsControl.ItemTemplate>
            <DataTemplate>
                <Border
                    Width="50"
                    Height="50"
                    Padding="3"
                    Margin="0,0,5,5"
                    Background="{Binding BackgroundBrush}"
                    CornerRadius="5"
                    Visibility="{Binding Visibility}"
                    RenderTransformOrigin="0.5,0.5">
                    <Border.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform />
                            <SkewTransform />
                            <RotateTransform />
                            <TranslateTransform />
                        </TransformGroup>
                    </Border.RenderTransform>

                    <Border.Resources>
                        <Storyboard x:Key="StoryboardFlicker">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.667" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.75" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.25" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.9" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1.1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1" />
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.75" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.25" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.9" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1.1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </Border.Resources>

                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsFlickering}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource StoryboardFlicker}" />
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>

                    <Grid>
                        <Rectangle Fill="{Binding Icon}" UseLayoutRounding="True" />

                        <!-- Percents display right over the icon.
                             We decided to remove this as it's distracting players too much. -->
                        <!--<TextBlock Text="{Binding IntensityPercentText}"
                                   FontFamily="{StaticResource DigitsFontFamily}"
                                   FontWeight="Bold"
                                   FontSize="15"
                                   Foreground="White"
                                   noesis:Text.Stroke="Black"
                                   noesis:Text.StrokeThickness="1"
                                   VerticalAlignment="Bottom"
                                   HorizontalAlignment="Right"
                                   Margin="0,0,3,0" />-->
                    </Grid>
                    <base:ToolTipServiceExtend.ToolTip>
                        <StackPanel Orientation="Vertical" MinWidth="150" MaxWidth="275">
                            <TextBlock Text="{Binding Title}"
                                       TextWrapping="Wrap"
                                       FontWeight="Bold" />

                            <StackPanel Visibility="{Binding VisibilityIntensityPercent}"
                                        Orientation="Horizontal"
                                        Margin="0,2">
                                <!-- Text: Intensity -->
                                <TextBlock Text="{x:Static loc:CoreStrings.StatusEffect_TitleIntensity}" />
                                <TextBlock Text=": " />
                                <TextBlock Text="{Binding IntensityPercent}" FontWeight="Bold" />
                                <TextBlock Text="%" FontWeight="Bold" />
                            </StackPanel>

                            <TextBlock Text="{Binding Description}"
                                       TextWrapping="Wrap" />
                        </StackPanel>
                    </base:ToolTipServiceExtend.ToolTip>
                </Border>
            </DataTemplate>
        </ItemsControl.ItemTemplate>

    </ItemsControl>
</base:BaseUserControl>