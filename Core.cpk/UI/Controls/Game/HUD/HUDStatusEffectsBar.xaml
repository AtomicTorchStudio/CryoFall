<base:BaseUserControl
    x:Class="AtomicTorch.CBND.CoreMod.UI.Controls.Game.HUD.HUDStatusEffectsBar"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:base="clr-namespace:AtomicTorch.GameEngine.Common.Client.MonoGame.UI;assembly=AtomicTorch.CBND.GameApi.WPF.Stubs"
    xmlns:data="clr-namespace:AtomicTorch.CBND.CoreMod.UI.Controls.Game.HUD.Data"
    mc:Ignorable="d"
    d:DesignHeight="300" d:DesignWidth="300"
    d:DataContext="{d:DesignInstance data:ViewModelHUDStatusEffectsBar, IsDesignTimeCreatable=True}"
    xmlns:loc="clr-namespace:AtomicTorch.CBND.CoreMod.UI"
    xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=AtomicTorch.CBND.GameApi.WPF.Stubs"
    xmlns:statModificationDisplay="clr-namespace:AtomicTorch.CBND.CoreMod.UI.Controls.Game.Other.StatModificationDisplay">

    <ItemsControl ItemsSource="{Binding CurrentStatusEffects}"
                  HorizontalAlignment="Center">
        <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
                <!-- max width calculated to fit 4 icons -->
                <WrapPanel Orientation="Horizontal"
                           MaxWidth="280"
                           RenderTransformOrigin="0.5,0.5" />
            </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>

        <ItemsControl.ItemTemplate>
            <DataTemplate>
                <Border
                    Width="50"
                    Height="65"
                    Padding="0"
                    Margin="0,0,5,5"
                    BorderThickness="0"
                    CornerRadius="5"
                    Visibility="{Binding Visibility}"
                    RenderTransformOrigin="0.5,0.5">
                    <Border.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform />
                        </TransformGroup>
                    </Border.RenderTransform>

                    <Border.Resources>
                        <Storyboard x:Key="StoryboardFlicker">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.667" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.75" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.25" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.9" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1.1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1" />
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.75" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.25" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.9" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1.1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </Border.Resources>

                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsFlickerScheduled}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource StoryboardFlicker}" />
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>

                    <Grid>
                        <Border CornerRadius="3" Style="{StaticResource WidgetBorderShadowStyle}" />
                        <Border CornerRadius="3" Background="{StaticResource WidgetBackgroundBlueBrush}" />
                        <Border CornerRadius="3" Background="{StaticResource WidgetBackgroundImageTexture}" />
                        <Border VerticalAlignment="Top" Height="10" CornerRadius="3"
                                Background="{StaticResource WidgetBackgroundGradientHorizontal}" />
                        <Border VerticalAlignment="Bottom" Height="10" CornerRadius="3"
                                Background="{StaticResource WidgetBackgroundGradientHorizontal}"
                                RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleY="-1" />
                            </Border.RenderTransform>
                        </Border>
                        <Border HorizontalAlignment="Left" Width="10" CornerRadius="3"
                                Background="{StaticResource WidgetBackgroundGradientVertical}" />
                        <Border HorizontalAlignment="Right" Width="10" CornerRadius="3"
                                Background="{StaticResource WidgetBackgroundGradientVertical}"
                                RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="-1" />
                            </Border.RenderTransform>
                        </Border>
                        <Border Style="{StaticResource WidgetBorderStyle}" />

                        <Rectangle Fill="{Binding ColorizedIcon}"
                                   UseLayoutRounding="True"
                                   VerticalAlignment="Top"
                                   HorizontalAlignment="Center"
                                   Width="44"
                                   Height="44"
                                   Margin="0,3,0,0">
                            <Rectangle.Effect>
                                <DropShadowEffect
                                    BlurRadius="7"
                                    Direction="0"
                                    ShadowDepth="0"
                                    Opacity="1"
                                    Color="Black" />
                            </Rectangle.Effect>
                        </Rectangle>

                        <Grid HorizontalAlignment="Center"
                              VerticalAlignment="Bottom"
                              Margin="0,0,0,1">
                            <Grid.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontWeight" Value="Bold" />
                                    <Setter Property="FontSize" Value="13" />
                                    <Setter Property="Foreground" Value="{StaticResource BrushColorAltLabelForeground}" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="Margin" Value="0" />
                                    <Setter Property="noesis:Text.Stroke" Value="Black" />
                                    <Setter Property="noesis:Text.StrokeThickness" Value="2" />
                                    <!-- In order to correctly draw the stroke ensure there is enough width -->
                                    <Setter Property="TextAlignment" Value="Center" />
                                    <Setter Property="Width" Value="50" />
                                </Style>
                            </Grid.Resources>

                            <TextBlock Text="{Binding TimeRemains}"
                                       Visibility="{Binding IsIconTimeRemainsVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                                       FontFamily="{StaticResource CondensedFontFamily}"
                                       FontSize="14"
                                       FontWeight="Normal" />

                            <TextBlock Text="{Binding IntensityPercent, StringFormat={}{0}% }"
                                       Visibility="{Binding IsIconIntensityPercentVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                                       FontFamily="{StaticResource DigitsFontFamily}" />

                            <TextBlock Text=" — "
                                       Visibility="{Binding IsIconPlaceholderVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                                       FontFamily="{StaticResource DigitsFontFamily}" />

                        </Grid>
                    </Grid>
                    <base:ToolTipServiceExtend.ToolTip>
                        <StackPanel Orientation="Vertical" MinWidth="150" MaxWidth="275">
                            <TextBlock Text="{Binding Title}"
                                       TextWrapping="Wrap"
                                       FontWeight="Bold" />

                            <StackPanel Orientation="Vertical"
                                        Margin="0,2">
                                <StackPanel.Visibility>
                                    <MultiBinding Converter="{StaticResource AnyBoolToVisibilityMultiConverter}">
                                        <Binding Path="IsTooltipIntensityPercentVisible" FallbackValue="False" />
                                        <Binding Path="IsTooltipTimeRemainsVisible" FallbackValue="False" />
                                    </MultiBinding>
                                </StackPanel.Visibility>

                                <StackPanel Orientation="Horizontal">
                                    <StackPanel.Visibility>
                                        <MultiBinding Converter="{StaticResource AllBoolToVisibilityMultiConverter}">
                                            <Binding Path="IsTooltipIntensityPercentVisible" FallbackValue="False" />
                                            <Binding Path="IsTooltipTimeRemainsVisible" FallbackValue="False" />
                                        </MultiBinding>
                                    </StackPanel.Visibility>

                                    <!-- Text: Intensity -->
                                    <TextBlock Text="{x:Static loc:CoreStrings.StatusEffect_TitleIntensity}" />
                                    <TextBlock Text=": " />
                                    <TextBlock Text="{Binding IntensityPercent}" FontWeight="Bold" />
                                    <TextBlock Text="%" FontWeight="Bold" />

                                    <!-- Text: Time remains -->
                                    <Image Source="/UI/Images/Icons/Clock.png"
                                           UseLayoutRounding="True"
                                           VerticalAlignment="Center"
                                           Margin="10,0,1,-1"
                                           Width="15"
                                           Height="15" />
                                    <TextBlock Text="{Binding TimeRemains}"
                                               FontWeight="Bold" />
                                </StackPanel>

                                <StackPanel Orientation="Vertical">
                                    <StackPanel.Visibility>
                                        <MultiBinding Converter="{StaticResource AnyBoolToVisibilityMultiConverter}"
                                                      ConverterParameter="Reverse">
                                            <Binding Path="IsTooltipIntensityPercentVisible" FallbackValue="False" />
                                            <Binding Path="IsTooltipTimeRemainsVisible" FallbackValue="False" />
                                        </MultiBinding>
                                    </StackPanel.Visibility>

                                    <StackPanel
                                        Visibility="{Binding IsTooltipIntensityPercentVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                                        Orientation="Horizontal">
                                        <!-- Text: Intensity -->
                                        <TextBlock Text="{x:Static loc:CoreStrings.StatusEffect_TitleIntensity}" />
                                        <TextBlock Text=": " />
                                        <TextBlock Text="{Binding IntensityPercent}" FontWeight="Bold" />
                                        <TextBlock Text="%" FontWeight="Bold" />
                                    </StackPanel>

                                    <StackPanel
                                        Visibility="{Binding IsTooltipTimeRemainsVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                                        Orientation="Horizontal">
                                        <Image Source="/UI/Images/Icons/Clock.png"
                                               UseLayoutRounding="True"
                                               VerticalAlignment="Center"
                                               Margin="0,0,1,-1"
                                               Width="15"
                                               Height="15" />
                                        <TextBlock Text="{Binding TimeRemains}"
                                                   FontWeight="Bold" />
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>

                            <TextBlock Text="{Binding Description}"
                                       TextWrapping="Wrap"
                                       FontSize="12"
                                       LineHeight="13.5"
                                       LineStackingStrategy="BlockLineHeight"
                                       Margin="0,2,0,0" />

                            <statModificationDisplay:StatModificationDisplay
                                StatsDictionary="{Binding StatsDictionary}"
                                Margin="0,2,0,-1" />

                            <ItemsControl
                                Visibility="{Binding InfoControls, Converter={StaticResource NullToVisibilityConverter}}"
                                ItemsSource="{Binding InfoControls}"
                                Margin="0,5,-100,0"
                                HorizontalAlignment="Stretch">
                                <ItemsControl.Template>
                                    <ControlTemplate>
                                        <ItemsPresenter />
                                    </ControlTemplate>
                                </ItemsControl.Template>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Vertical" Margin="0,-1" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <ContentControl Content="{Binding}" Margin="0,1" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </base:ToolTipServiceExtend.ToolTip>
                </Border>
            </DataTemplate>
        </ItemsControl.ItemTemplate>
    </ItemsControl>

</base:BaseUserControl>