<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    mc:Ignorable="d"
    xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
    xmlns:common="clr-namespace:AtomicTorch.GameEngine.Common.Client.MonoGame.UI;assembly=AtomicTorch.CBND.GameApi.WPF.Stubs"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:core="clr-namespace:AtomicTorch.CBND.CoreMod.UI.Controls.Core"
    xmlns:controls="clr-namespace:AtomicTorch.CBND.CoreMod.UI.Controls.Game.Items.Controls"
    xmlns:player="clr-namespace:AtomicTorch.CBND.CoreMod.UI.Controls.Game.Player"
    xmlns:services="clr-namespace:AtomicTorch.CBND.CoreMod.UI.Services"
    xmlns:other="clr-namespace:AtomicTorch.CBND.CoreMod.UI.Controls.Game.Other.ClockProgressIndicator"
    xmlns:loc="clr-namespace:AtomicTorch.CBND.CoreMod.UI"
    xmlns:helpers="clr-namespace:AtomicTorch.CBND.CoreMod.UI.Helpers">

    <helpers:EmptyStringToVisibilityConverter x:Key="EmptyStringToVisibilityConverter" />

    <!-- Constants -->
    <Thickness x:Key="DefaultWindowPadding">10</Thickness>
    <system:Single x:Key="DefaultWindowWidth">400</system:Single>
    <system:Single x:Key="GameMenuStandardWindowWidth">552</system:Single>
    <system:Single x:Key="GameMenuStandardWindowHeight">502</system:Single>
    <system:Single x:Key="GameMenuBigWindowWidth">800</system:Single>
    <system:Single x:Key="GameMenuBigWindowHeight">550</system:Single>

    <system:Double x:Key="DefaultScrollbarWidth">6</system:Double>

    <CornerRadius x:Key="DefaultScrollbarThumbCornerRadius">3</CornerRadius>

    <CornerRadius x:Key="ControlCornerRadius">2</CornerRadius>

    <!-- Fonts -->
    <FontFamily x:Key="DefaultFontFamily">
        <FontFamily.FamilyNames>
            <x:Static Member="loc:LanguageFonts.FontDefault" />
        </FontFamily.FamilyNames>
    </FontFamily>

    <FontFamily x:Key="CondensedFontFamily">
        <FontFamily.FamilyNames>
            <x:Static Member="loc:LanguageFonts.FontCondensed" />
        </FontFamily.FamilyNames>
    </FontFamily>

    <FontFamily x:Key="DialogueFontFamily">
        <FontFamily.FamilyNames>
            <x:Static Member="loc:LanguageFonts.FontPlayerDialogue" />
        </FontFamily.FamilyNames>
    </FontFamily>

    <FontFamily x:Key="MonospacedFontFamily">/UI/Fonts/#Ubuntu Mono</FontFamily>
    <FontFamily x:Key="DigitsFontFamily">
        <FontFamily.FamilyNames>
            <x:Static Member="loc:LanguageFonts.FontDigits" />
        </FontFamily.FamilyNames>
    </FontFamily>
    <FontFamily x:Key="AsianFontFamily">/UI/Fonts/#Source Han Sans</FontFamily>
    <FontFamily x:Key="WesternDefaultFontFamily">/UI/Fonts/#Roboto</FontFamily>
    <FontFamily x:Key="WesternCondensedFontFamily">/UI/Fonts/#Roboto Condensed</FontFamily>

    <!-- Colors -->
    <Color x:Key="Color0">#FF473400</Color>
    <Color x:Key="Color1">#FF573F00</Color>
    <Color x:Key="Color2">#FF7F5C00</Color>
    <Color x:Key="Color3">#FF996F00</Color>
    <Color x:Key="Color4">#FFA87A00</Color>
    <Color x:Key="Color5">#FFCC9400</Color>
    <Color x:Key="Color6">#FFFFBC0A</Color>
    <Color x:Key="Color7">#FFFFDC80</Color>

    <Color x:Key="ColorAlt0">#FF003447</Color>
    <Color x:Key="ColorAlt1">#FF003F57</Color>
    <Color x:Key="ColorAlt2">#FF005C7F</Color>
    <Color x:Key="ColorAlt3">#FF006F99</Color>
    <Color x:Key="ColorAlt4">#FF007AA8</Color>
    <Color x:Key="ColorAlt5">#FF0094CC</Color>
    <Color x:Key="ColorAlt6">#FF0ABCFF</Color>
    <Color x:Key="ColorAlt7">#FF80DCFF</Color>

    <Color x:Key="ColorRed0">#FF470512</Color>
    <Color x:Key="ColorRed1">#FF570716</Color>
    <Color x:Key="ColorRed2">#FF7F0A20</Color>
    <Color x:Key="ColorRed3">#FF990C26</Color>
    <Color x:Key="ColorRed4">#FFA80D2A</Color>
    <Color x:Key="ColorRed5">#FFCC0F33</Color>
    <Color x:Key="ColorRed6">#FFEE123B</Color>
    <Color x:Key="ColorRed7">#FFFF143B</Color>

    <Color x:Key="ColorGreen0">#FF053617</Color>
    <Color x:Key="ColorGreen1">#FF06451E</Color>
    <Color x:Key="ColorGreen2">#FF0A6E30</Color>
    <Color x:Key="ColorGreen3">#FF0C873B</Color>
    <Color x:Key="ColorGreen4">#FF0E9642</Color>
    <Color x:Key="ColorGreen5">#FF11BA52</Color>
    <Color x:Key="ColorGreen6">#FF14DB60</Color>
    <Color x:Key="ColorGreen7">#FF15EE6A</Color>

    <Color x:Key="ColorLabelForeground">White</Color>
    <Color x:Key="ColorAltLabelForeground">#FF99DCFF</Color>

    <!-- Liquid colors -->
    <Color x:Key="LiquidColorEmpty">#FF999999</Color>
    <Color x:Key="LiquidColorWater">#FF0C8AD3</Color>
    <Color x:Key="LiquidColorWaterStale">#FF558866</Color>
    <Color x:Key="LiquidColorGasoline">#FF59A353</Color>
    <Color x:Key="LiquidColorMineralOil">#FFBCAE2F</Color>
    <Color x:Key="LiquidColorPetroleum">#FF8E2A2A</Color>

    <SolidColorBrush x:Key="LiquidBrushEmpty" Color="{StaticResource LiquidColorEmpty}" />
    <SolidColorBrush x:Key="LiquidBrushWater" Color="{StaticResource LiquidColorWater}" />
    <SolidColorBrush x:Key="LiquidBrushWaterStale" Color="{StaticResource LiquidColorWaterStale}" />
    <SolidColorBrush x:Key="LiquidBrushGasoline" Color="{StaticResource LiquidColorGasoline}" />
    <SolidColorBrush x:Key="LiquidBrushMineralOil" Color="{StaticResource LiquidColorMineralOil}" />
    <SolidColorBrush x:Key="LiquidBrushPetroleum" Color="{StaticResource LiquidColorPetroleum}" />

    <Color x:Key="ColorFuel">#FFFF9900</Color>
    <SolidColorBrush x:Key="BrushFuel" Color="{StaticResource ColorFuel}" />

    <!-- Liquid icons -->
    <!-- Also see class LiquidColorIconHelper -->
    <ImageBrush x:Key="LiquidIconWater" Stretch="Uniform"
                ImageSource="/Content/Textures/Icons/Liquids/IconLiquidWater.png" />
    <ImageBrush x:Key="LiquidIconWaterStale" Stretch="Uniform"
                ImageSource="/Content/Textures/Icons/Liquids/IconLiquidWaterStale.png" />
    <ImageBrush x:Key="LiquidIconGasoline" Stretch="Uniform"
                ImageSource="/Content/Textures/Icons/Liquids/IconLiquidGasoline.png" />
    <ImageBrush x:Key="LiquidIconMineralOil" Stretch="Uniform"
                ImageSource="/Content/Textures/Icons/Liquids/IconLiquidMineralOil.png" />
    <ImageBrush x:Key="LiquidIconPetroleum" Stretch="Uniform"
                ImageSource="/Content/Textures/Icons/Liquids/IconLiquidPetroleum.png" />
    <ImageBrush x:Key="IconLithium" Stretch="Uniform"
                ImageSource="/Content/Textures/Icons/IconLithium.png" />

    <!-- Fuel and etc colors -->
    <Color x:Key="ColorElectricity">#FFD4C939</Color>
    <Color x:Key="ColorElectricityDarker">#FFAA8F00</Color>
    <Color x:Key="ColorOrganic">#FF664433</Color>
    <Color x:Key="ColorFuelOil">#FFFF8800</Color>
    <Color x:Key="ColorFuelRefined">#FFFF6666</Color>
    <Color x:Key="ColorFuelSolid">#FFFF0000</Color>
    <Color x:Key="ColorVehicleEnergy">#FF22AAFF</Color>
    <Color x:Key="ColorVehicleArmor">#FFCCCCCC</Color>

    <SolidColorBrush x:Key="BrushElectricity" Color="{StaticResource ColorElectricity}" />
    <SolidColorBrush x:Key="BrushElectricityDarker" Color="{StaticResource ColorElectricityDarker}" />
    <SolidColorBrush x:Key="BrushOrganic" Color="{StaticResource ColorOrganic}" />
    <SolidColorBrush x:Key="BrushFuelOil" Color="{StaticResource ColorFuelOil}" />
    <SolidColorBrush x:Key="BrushFuelRefined" Color="{StaticResource ColorFuelRefined}" />
    <SolidColorBrush x:Key="BrushFuelSolid" Color="{StaticResource ColorFuelSolid}" />
    <SolidColorBrush x:Key="BrushVehicleEnergy" Color="{StaticResource ColorVehicleEnergy}" />
    <SolidColorBrush x:Key="BrushVehicleArmor" Color="{StaticResource ColorVehicleArmor}" />

    <!-- Fuel icons -->
    <!-- Also see class ProtoItemFuelIconColorHelper -->
    <ImageBrush x:Key="IconElectricity" Stretch="Uniform"
                ImageSource="/Content/Textures/Icons/IconElectricity.png" />
    <ImageBrush x:Key="IconFuelOil" Stretch="Uniform"
                ImageSource="/Content/Textures/Icons/Fuels/IconFuelOil.png" />
    <ImageBrush x:Key="IconFuelRefined" Stretch="Uniform"
                ImageSource="/Content/Textures/Icons/Fuels/IconFuelRefined.png" />
    <ImageBrush x:Key="IconFuelSolid" Stretch="Uniform"
                ImageSource="/Content/Textures/Icons/Fuels/IconFuelSolid.png" />

    <!-- Brushes -->
    <SolidColorBrush x:Key="BrushColor0" Color="{StaticResource Color0}" />
    <SolidColorBrush x:Key="BrushColor1" Color="{StaticResource Color1}" />
    <SolidColorBrush x:Key="BrushColor2" Color="{StaticResource Color2}" />
    <SolidColorBrush x:Key="BrushColor3" Color="{StaticResource Color3}" />
    <SolidColorBrush x:Key="BrushColor4" Color="{StaticResource Color4}" />
    <SolidColorBrush x:Key="BrushColor5" Color="{StaticResource Color5}" />
    <SolidColorBrush x:Key="BrushColor6" Color="{StaticResource Color6}" />
    <SolidColorBrush x:Key="BrushColor7" Color="{StaticResource Color7}" />

    <SolidColorBrush x:Key="BrushColorAlt0" Color="{StaticResource ColorAlt0}" />
    <SolidColorBrush x:Key="BrushColorAlt1" Color="{StaticResource ColorAlt1}" />
    <SolidColorBrush x:Key="BrushColorAlt2" Color="{StaticResource ColorAlt2}" />
    <SolidColorBrush x:Key="BrushColorAlt3" Color="{StaticResource ColorAlt3}" />
    <SolidColorBrush x:Key="BrushColorAlt4" Color="{StaticResource ColorAlt4}" />
    <SolidColorBrush x:Key="BrushColorAlt5" Color="{StaticResource ColorAlt5}" />
    <SolidColorBrush x:Key="BrushColorAlt6" Color="{StaticResource ColorAlt6}" />
    <SolidColorBrush x:Key="BrushColorAlt7" Color="{StaticResource ColorAlt7}" />

    <SolidColorBrush x:Key="BrushColorRed0" Color="{StaticResource ColorRed0}" />
    <SolidColorBrush x:Key="BrushColorRed1" Color="{StaticResource ColorRed1}" />
    <SolidColorBrush x:Key="BrushColorRed2" Color="{StaticResource ColorRed2}" />
    <SolidColorBrush x:Key="BrushColorRed3" Color="{StaticResource ColorRed3}" />
    <SolidColorBrush x:Key="BrushColorRed4" Color="{StaticResource ColorRed4}" />
    <SolidColorBrush x:Key="BrushColorRed5" Color="{StaticResource ColorRed5}" />
    <SolidColorBrush x:Key="BrushColorRed6" Color="{StaticResource ColorRed6}" />
    <SolidColorBrush x:Key="BrushColorRed7" Color="{StaticResource ColorRed7}" />

    <SolidColorBrush x:Key="BrushColorGreen0" Color="{StaticResource ColorGreen0}" />
    <SolidColorBrush x:Key="BrushColorGreen1" Color="{StaticResource ColorGreen1}" />
    <SolidColorBrush x:Key="BrushColorGreen2" Color="{StaticResource ColorGreen2}" />
    <SolidColorBrush x:Key="BrushColorGreen3" Color="{StaticResource ColorGreen3}" />
    <SolidColorBrush x:Key="BrushColorGreen4" Color="{StaticResource ColorGreen4}" />
    <SolidColorBrush x:Key="BrushColorGreen5" Color="{StaticResource ColorGreen5}" />
    <SolidColorBrush x:Key="BrushColorGreen6" Color="{StaticResource ColorGreen6}" />
    <SolidColorBrush x:Key="BrushColorGreen7" Color="{StaticResource ColorGreen7}" />

    <SolidColorBrush x:Key="BrushColorLabelForeground" Color="{StaticResource ColorLabelForeground}" />
    <SolidColorBrush x:Key="BrushColorAltLabelForeground" Color="{StaticResource ColorAltLabelForeground}" />
    <SolidColorBrush x:Key="BrushColorLabelForegroundDisabled" Color="{StaticResource ColorLabelForeground}"
                     Opacity="0.85" />

    <SolidColorBrush x:Key="LabelActionControlColor" Color="#DDFFBC0A" />
    <SolidColorBrush x:Key="LabelActionControlBackground" Color="#30FFBC0A" />

    <SolidColorBrush x:Key="DisabledBackground" Color="Black" Opacity="0.35" />

    <SolidColorBrush x:Key="ButtonForeground" Color="White" />

    <SolidColorBrush x:Key="BrushCraftingProgressBarBackground" Color="Black" Opacity="0.33333" />

    <LinearGradientBrush x:Key="ButtonBackgroundNormal" StartPoint="0.5,0" EndPoint="0.5,1"
                         MappingMode="RelativeToBoundingBox"
                         Opacity="0.5">
        <GradientStop Offset="0" Color="#FF00AAEE" />
        <GradientStop Offset="0.15" Color="#FF000000" />
        <GradientStop Offset="0.85" Color="#FF000000" />
        <GradientStop Offset="1" Color="#FF00AAEE" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonBackgroundActive" StartPoint="0.5,0" EndPoint="0.5,1"
                         MappingMode="RelativeToBoundingBox"
                         Opacity="0.5">
        <GradientStop Offset="0" Color="#FFCCAA88" />
        <GradientStop Offset="0.15" Color="#FF000000" />
        <GradientStop Offset="0.85" Color="#FF000000" />
        <GradientStop Offset="1" Color="#FFCCAA88" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ButtonBackgroundMouseOverHighlight" Color="{StaticResource Color5}" Opacity="0.35" />
    <SolidColorBrush x:Key="ButtonBackgroundFocusedHighlight" Color="{StaticResource Color5}" Opacity="0.35" />
    <SolidColorBrush x:Key="ButtonBackgroundPressedHighlight" Color="{StaticResource Color5}" Opacity="0.5" />
    <SolidColorBrush x:Key="ButtonBorderNormal" Color="{StaticResource ColorAlt5}" Opacity="1" />
    <SolidColorBrush x:Key="ButtonBorderMouseOver" Color="{StaticResource Color6}" Opacity="1" />
    <SolidColorBrush x:Key="ButtonBorderFocused" Color="{StaticResource Color5}" Opacity="1" />
    <SolidColorBrush x:Key="ButtonBorderPressed" Color="{StaticResource Color7}" Opacity="1" />

    <SolidColorBrush x:Key="ButtonSmallBackgroundMouseOverHighlight" Color="{StaticResource Color5}" Opacity="0.4" />
    <SolidColorBrush x:Key="ButtonSmallBackgroundFocusedHighlight" Color="{StaticResource Color5}" Opacity="0.4" />
    <SolidColorBrush x:Key="ButtonSmallBackgroundPressedHighlight" Color="{StaticResource Color5}" Opacity="0.6" />

    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#D4000000" />
    <SolidColorBrush x:Key="WindowBackgroundLessTransparentBrush" Color="#E8000000" />
    <SolidColorBrush x:Key="WindowForeground" Color="White" />
    <SolidColorBrush x:Key="WindowTitleForeground" Color="{StaticResource Color6}" />

    <SolidColorBrush x:Key="ScrollBarBackground" Color="{StaticResource ColorAlt6}" Opacity="0.1" />
    <SolidColorBrush x:Key="ScrollBarForeground" Color="{StaticResource ColorAlt6}" Opacity="0.5" />
    <SolidColorBrush x:Key="ScrollBarForegroundMouseOver" Color="{StaticResource ColorAlt6}" Opacity="0.75" />
    <SolidColorBrush x:Key="ScrollBarForegroundPressed" Color="{StaticResource ColorAlt6}" />

    <Brush x:Key="TooltipForegroundBrush">#FFFFE5A2</Brush>
    <Brush x:Key="TooltipForegroundBrushDark">#FFCAB373</Brush>
    <Brush x:Key="TooltipForegroundBrushDark2">#FF968144</Brush>
    <Thickness x:Key="TooltipBorderThickness">0.75</Thickness>
    <Brush x:Key="TooltipBackgroundBrush">#EE1A1300</Brush>
    <LinearGradientBrush x:Key="TooltipBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0.75">
        <GradientStop Color="{StaticResource Color7}" Offset="0.1" />
        <GradientStop Color="{StaticResource Color6}" Offset="0.7" />
    </LinearGradientBrush>

    <Color x:Key="WidgetBackgroundColor">#B4000000</Color>
    <Color x:Key="WidgetBackgroundGradientColorOpaque">#A0005C7F</Color>
    <Color x:Key="WidgetBackgroundGradientColorNonOpaque">#00005C7F</Color>

    <LinearGradientBrush x:Key="WidgetBackgroundGradientHorizontal" EndPoint="0.5,1" StartPoint="0.5,0" Opacity="1">
        <GradientStop Color="{StaticResource WidgetBackgroundGradientColorOpaque}" Offset="0" />
        <GradientStop Color="{StaticResource WidgetBackgroundGradientColorNonOpaque}" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="WidgetBackgroundGradientVertical" EndPoint="1,0.5" StartPoint="0,0.5" Opacity="1">
        <GradientStop Color="{StaticResource WidgetBackgroundGradientColorOpaque}" Offset="0" />
        <GradientStop Color="{StaticResource WidgetBackgroundGradientColorNonOpaque}" Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="WidgetBorderBrush" Color="{StaticResource ColorAlt5}" />
    <SolidColorBrush x:Key="WidgetBackgroundBrush" Color="{StaticResource WidgetBackgroundColor}" />
    <SolidColorBrush x:Key="WidgetBackgroundBlueBrush" Color="{StaticResource ColorAlt0}" Opacity="0.7" />
    <SolidColorBrush x:Key="WidgetShadowBrush" Color="Black" Opacity="0.5" />

    <SolidColorBrush x:Key="BrushCanInteract" Color="{StaticResource Color6}" />
    <SolidColorBrush x:Key="BrushCannotInteract" Color="#FFBBBBBB" />

    <LinearGradientBrush x:Key="ItemBackgroundNormalBrush" Opacity="0.4" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="{StaticResource ColorAlt1}"
                      Offset="0.667" />
        <GradientStop
            Color="{Binding Source={StaticResource ColorAlt1}, Converter={StaticResource ColorAlphaConverter}, ConverterParameter=0}"
            Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ItemBackgroundNormalHoverBrush" Color="{StaticResource ColorAlt3}" Opacity="0.4" />
    <SolidColorBrush x:Key="ItemBackgroundNormalActiveBrush" Color="{StaticResource ColorAlt4}" Opacity="0.4" />

    <LinearGradientBrush x:Key="ItemBackgroundRedBrush" Opacity="0.4" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="{StaticResource ColorRed1}"
                      Offset="0.667" />
        <GradientStop
            Color="{Binding Source={StaticResource ColorRed1}, Converter={StaticResource ColorAlphaConverter}, ConverterParameter=0}"
            Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ItemBackgroundRedHoverBrush" Color="{StaticResource ColorRed3}" Opacity="0.4" />
    <SolidColorBrush x:Key="ItemBackgroundRedActiveBrush" Color="{StaticResource ColorRed4}" Opacity="0.4" />

    <LinearGradientBrush x:Key="ItemBorderNormalBrush" Opacity="0.4" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="{StaticResource ColorAlt5}"
                      Offset="0.667" />
        <GradientStop
            Color="{Binding Source={StaticResource ColorAlt5}, Converter={StaticResource ColorAlphaConverter}, ConverterParameter=0}"
            Offset="1" />
    </LinearGradientBrush>
    <StaticResource x:Key="ItemBorderNormalHoverBrush" ResourceKey="BrushColorAlt5" />
    <StaticResource x:Key="ItemBorderNormalActiveBrush" ResourceKey="BrushColorAlt6" />

    <LinearGradientBrush x:Key="ItemBorderRedBrush" Opacity="0.4" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="{StaticResource ColorRed5}"
                      Offset="0.667" />
        <GradientStop
            Color="{Binding Source={StaticResource ColorRed5}, Converter={StaticResource ColorAlphaConverter}, ConverterParameter=0}"
            Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ItemBorderRedHoverBrush" Color="{StaticResource ColorRed5}" />
    <SolidColorBrush x:Key="ItemBorderRedActiveBrush" Color="{StaticResource ColorRed6}" />

    <Style x:Key="TextBlockItemTitleStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="LineHeight" Value="11" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
        <Setter Property="FontFamily" Value="{StaticResource CondensedFontFamily}" />
        <Setter Property="Foreground" Value="{StaticResource BrushColor6}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Thickness x:Key="WidgetShadowMargin">1.5,1.5,-1,-1</Thickness>
    <Thickness x:Key="WidgetShadowMarginThin">1.5,1.5,-0.75,-0.75</Thickness>

    <Style TargetType="{x:Type core:WidgetPanel}" BasedOn="{StaticResource {x:Type UserControl}}">
        <Setter Property="WidgetBackground" Value="{StaticResource WidgetBackgroundBrush}" />
    </Style>

    <Style x:Key="WidgetBackgroundBorder" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource WidgetBackgroundBrush}" />
        <Setter Property="CornerRadius" Value="3" />
    </Style>

    <Style x:Key="WidgetBorderStyle" TargetType="Border">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource WidgetBorderBrush}" />
        <Setter Property="CornerRadius" Value="3" />
    </Style>

    <!-- Drop shadow effect alternative -->
    <Style x:Key="WidgetBorderShadowStyle" TargetType="Border">
        <Setter Property="BorderThickness" Value="0,0,1.5,1.5" />
        <Setter Property="BorderBrush" Value="{StaticResource WidgetShadowBrush}" />
        <Setter Property="CornerRadius" Value="3" />
        <Setter Property="Margin" Value="{StaticResource WidgetShadowMargin}" />
    </Style>

    <ImageBrush x:Key="WidgetBackgroundImageTexture"
                ImageSource="/UI/Images/Backgrounds/WidgetBackground.png"
                TileMode="Tile"
                Viewport="6.75,4.75,5.5,5.5"
                ViewportUnits="Absolute" />

    <Brush x:Key="MenuBackgroundBrush">#88000000</Brush>

    <LinearGradientBrush x:Key="MenuBackgroundHorizontalGradientBrush" EndPoint="0.5,1" StartPoint="0.5,0"
                         Opacity="0.65">
        <GradientStop Color="{StaticResource WidgetBackgroundGradientColorOpaque}" Offset="0" />
        <GradientStop Color="{StaticResource WidgetBackgroundGradientColorNonOpaque}" Offset="0.33" />
    </LinearGradientBrush>

    <Geometry x:Key="CheckboxGeometry">M 100,14.270347 C 95.243217,9.5135647 90.486435,4.7567823 85.729652,0 69.61874,16.110912 53.507828,32.221824 37.396916,48.332736 29.68806,40.623879 21.979204,32.915023 14.270348,25.206166 9.5135653,29.962949 4.7567827,34.719731 0,39.476514 12.465639,51.9302 24.931277,64.383886 37.396916,76.837572 58.263115,55.980335 79.114103,35.107869 100,14.270347 Z</Geometry>

    <!-- Apply default font settings for all root elements -->
    <Style x:Key="DefaultStyleForRoot" TargetType="{x:Type UserControl}"
           BasedOn="{StaticResource {x:Type UserControl}}">
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Foreground" Value="{StaticResource BrushColorLabelForeground}" />
    </Style>

    <!-- Label style -->
    <Style TargetType="{x:Type Label}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground"
                Value="{Binding (TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Hyperlink style -->
    <Style x:Key="{x:Type Hyperlink}" TargetType="{x:Type Hyperlink}">
        <Setter Property="Foreground" Value="{StaticResource BrushColorAlt6}" />
        <Setter Property="TextDecorations" Value="Underline" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource BrushColor7}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource BrushColorAlt4}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Textbox style-->
    <ControlTemplate x:Key="DefaultTextBoxScrollViewerControlTemplate"
                     TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Rectangle x:Name="Corner" Grid.Column="1" Grid.Row="1" Fill="{StaticResource DisabledBackground}" />
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Column="0" Grid.Row="0"
                                    Margin="{TemplateBinding Padding}"
                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Content="{TemplateBinding Content}" />
            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="1" Grid.Row="0"
                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                       Maximum="{TemplateBinding ScrollableHeight}" Minimum="0"
                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                       ViewportSize="{TemplateBinding ViewportHeight}" />
            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="0" Grid.Row="1"
                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                       Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal"
                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                       ViewportSize="{TemplateBinding ViewportWidth}" />
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="CaretBrush" Value="{StaticResource BrushColor7}" />
        <Setter Property="Foreground" Value="{StaticResource BrushColorLabelForeground}" />
        <Setter Property="Background" Value="#CC000000" />
        <Setter Property="BorderBrush" Value="{StaticResource WidgetBorderBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SelectionBrush" Value="{StaticResource BrushColor7}" />
        <Setter Property="SelectionOpacity" Value="0.5" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="4,2" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ContextMenu">
            <Setter.Value>
                <!-- No context menu -->
                <ContextMenu IsEnabled="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="ReadOnly" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Opacity)"
                                            Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame Value="0.6" KeyTime="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Opacity)"
                                            Storyboard.TargetName="FocusedBorder">
                                            <EasingDoubleKeyFrame Value="1" KeyTime="0" />
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Opacity)"
                                            Storyboard.TargetName="FocusedBackground">
                                            <EasingDoubleKeyFrame Value="0.15" KeyTime="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="1">
                            <Grid>
                                <Rectangle x:Name="FocusedBackground">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{StaticResource Color6}" Opacity="0" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <ScrollViewer x:Name="PART_ContentHost"
                                              Padding="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Foreground="{TemplateBinding Foreground}"
                                              Template="{StaticResource DefaultTextBoxScrollViewerControlTemplate}" />
                            </Grid>
                        </Border>

                        <Border x:Name="MouseOverBorder"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource Color6}" Opacity="0" />
                            </Border.BorderBrush>
                        </Border>

                        <Border x:Name="FocusedBorder"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource Color6}" Opacity="0" />
                            </Border.BorderBrush>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SelectableReadonlyTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="CaretBrush" Value="{StaticResource BrushColor7}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SelectionBrush" Value="{StaticResource BrushColor7}" />
        <Setter Property="SelectionOpacity" Value="0.5" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ContextMenu">
            <Setter.Value>
                <!-- No context menu -->
                <ContextMenu IsEnabled="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost"
                                  Padding="{TemplateBinding Padding}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  Foreground="{TemplateBinding Foreground}"
                                  Template="{StaticResource DefaultTextBoxScrollViewerControlTemplate}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Margin" Value="-3" />
        <Setter Property="Padding" Value="3" />
    </Style>

    <!-- Checkmark control style -->
    <Style x:Key="CheckmarkControlStyle" TargetType="Control">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}" />
        <Setter Property="Width" Value="{Binding (TextElement.FontSize), RelativeSource={RelativeSource Self}}" />
        <Setter Property="Height" Value="{Binding (TextElement.FontSize), RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Path Fill="{TemplateBinding Foreground}"
                          Data="m 20.530599,15.532552 c -4.487523,0.0029 -6.700048,5.457879 -3.482422,8.585937 L 32.473247,37.787024 69.118489,2.9518227 C 74.026748,-1.760721 66.760721,-9.0267485 62.048177,-4.1184895 L 32.5,25.429688 24.118489,17.048177 c -0.941972,-0.969354 -2.23624,-1.516089 -3.58789,-1.515625 z"
                          Stretch="Uniform" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Cross (X) control style -->
    <Style x:Key="CrossControlStyle" TargetType="Control">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}" />
        <Setter Property="Width" Value="{Binding (TextElement.FontSize), RelativeSource={RelativeSource Self}}" />
        <Setter Property="Height" Value="{Binding (TextElement.FontSize), RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Path Fill="{TemplateBinding Foreground}"
                          Data="M 9.9472656,4.9492187 A 5.0005,5.0005 0 0 0 6.4648438,13.535156 L 25.429688,32.5 6.4648438,51.464844 a 5.0005,5.0005 0 1 0 7.0703122,7.070312 L 32.5,39.570312 51.464844,58.535156 a 5.0005,5.0005 0 1 0 7.070312,-7.070312 L 39.570312,32.5 58.535156,13.535156 A 5.0005,5.0005 0 1 0 51.464844,6.4648438 L 32.5,25.429688 13.535156,6.4648438 A 5.0005,5.0005 0 0 0 9.9472656,4.9492187 Z"
                          Stretch="Uniform" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Geometry x:Key="PathPencilGeometry">m 162.848,467.187 243.5,-243.5 c 6.7,-6.7 6.7,-17.6 0,-24.3 -6.7,-6.7 -17.6,-6.7 -24.3,0 l -239.3,239.5 -105.6,14.2 14.2,-105.6 228.6,-228.6 c 6.7,-6.7 6.7,-17.6 0,-24.3 -6.7,-6.7 -17.6,-6.7 -24.3,0 l -232.6,232.8 c -2.7,2.7 -4.4,6.1 -4.9,9.8 l -18,133.6 c -0.7,5.3 1.1,10.6 4.9,14.4 3.2,3.2 7.6,5 12.1,5 0.8,0 1.5,-0.1 2.3,-0.2 l 133.6,-18 c 3.7,-0.4 7.2,-2.1 9.8,-4.8 z m 268.3,-275.3 c 4.4,0 8.8,-1.7 12.1,-5 l 25.2,-25.2 c 29.1,-29.1 29.1,-76.4 0,-105.4 l -34.4,-34.4 c -14.1,-14.1 -32.8,-21.8 -52.7,-21.8 -19.9,0 -38.6,7.8 -52.7,21.8 l -25.2,25.2 c -6.7,6.7 -6.7,17.6 0,24.3 l 115.6,115.6 c 3.3,3.2 7.7,4.9 12.1,4.9 z m -78.2,-145.9 c 7.6,-7.6 17.7,-11.8 28.5,-11.8 10.7,0 20.9,4.2 28.5,11.8 l 34.4,34.4 c 15.7,15.7 15.7,41.2 0,56.9 l -13.2,13.2 -91.4,-91.4 z m -39.4,106.4 -230.8,230.9 c -6.7,6.7 -6.7,17.6 0,24.3 3.3,3.3 7.7,5 12.1,5 4.4,0 8.8,-1.7 12.1,-5 l 230.8,-230.8 c 6.7,-6.7 6.7,-17.6 0,-24.3 -6.6,-6.8 -17.5,-6.8 -24.2,-0.1 z</Geometry>

    <Style x:Key="EditPencilControlStyle" TargetType="Control">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource BrushColor4}" />
        <Setter Property="Width" Value="{Binding (TextElement.FontSize), RelativeSource={RelativeSource Self}}" />
        <Setter Property="Height" Value="{Binding (TextElement.FontSize), RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Path Fill="{TemplateBinding Foreground}"
                          Data="{StaticResource PathPencilGeometry}"
                          Stretch="Uniform" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button style -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="core:SoundUI.ClickSound" Value="{StaticResource SoundButtonMouseClick}" />
        <Setter Property="core:SoundUI.EnterSound" Value="{StaticResource SoundButtonMouseEnter}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,7" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="FontFamily" Value="{StaticResource CondensedFontFamily}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundNormal}" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderNormal}" />
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="Border"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{StaticResource ControlCornerRadius}">
                        <Border x:Name="BackgroundHighlight">
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="BackgroundHighlight" Property="Background"
                                    Value="{StaticResource ButtonBackgroundFocusedHighlight}" />
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{StaticResource ButtonBorderFocused}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="BackgroundHighlight" Property="Background"
                                    Value="{StaticResource ButtonBackgroundMouseOverHighlight}" />
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{StaticResource ButtonBorderMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="BackgroundHighlight" Property="Background"
                                    Value="{StaticResource ButtonBackgroundPressedHighlight}" />
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{StaticResource ButtonBorderPressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#ADADAD" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundActive}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundActive}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundActive}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DefaultButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}" />

    <Style x:Key="MainMenuButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontSize" Value="17" />
    </Style>

    <Style x:Key="SmallButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Foreground" Value="#CCFFFFFF" />
        <Setter Property="Background" Value="#66666666" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinWidth" Value="22" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Padding" Value="4,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="Border"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource ButtonSmallBackgroundFocusedHighlight}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource ButtonSmallBackgroundMouseOverHighlight}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource ButtonSmallBackgroundPressedHighlight}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity"
                                    Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- RepeatButton style -->
    <Style TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Interval" Value="100" />
        <Setter Property="Delay" Value="300" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="core:SoundUI.ClickSound" Value="{StaticResource SoundButtonMouseClick}" />
        <Setter Property="core:SoundUI.EnterSound" Value="{StaticResource SoundButtonMouseEnter}" />
        <!--<Setter Property="BorderThickness" Value="2" />-->
        <!--<Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />-->
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,7" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="MinHeight" Value="30" />
        <!--<Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="16" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                          MinWidth="{TemplateBinding MinWidth}"
                          MinHeight="{TemplateBinding MinHeight}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundNormal}" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderNormal}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundMouseOverHighlight}" />
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderMouseOver}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundFocusedHighlight}" />
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderFocused}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundPressedHighlight}" />
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderPressed}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#ADADAD" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- Checkbox style -->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="core:SoundUI.ClickSound" Value="{StaticResource SoundCheckboxClick}" />
        <Setter Property="core:SoundUI.EnterSound" Value="{StaticResource SoundCheckboxEnter}" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="4,0,0,0" />
        <Setter Property="Margin" Value="0,0,6,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator VerticalAlignment="Bottom" Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="20" Height="20">
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="{StaticResource ControlCornerRadius}" />

                                <Grid x:Name="ToggleCheck" Width="10" Height="10" HorizontalAlignment="Center"
                                      VerticalAlignment="Center" Visibility="Visible">
                                    <Path Data="{StaticResource CheckboxGeometry}"
                                          Stretch="Fill"
                                          Fill="{TemplateBinding Foreground}" />
                                </Grid>
                                <!--<Rectangle x:Name="ToggleIndeterminate" Margin="4" Fill="{TemplateBinding BorderBrush}"
                               Visibility="Collapsed"
                               StrokeThickness="0" />-->
                                <Rectangle x:Name="BackgroundDisabled" Margin="2"
                                           Fill="{StaticResource DisabledBackground}"
                                           StrokeThickness="0" Visibility="Collapsed" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          UseLayoutRounding="{TemplateBinding UseLayoutRounding}" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsThreeState" Value="True">
                <Setter TargetName="ToggleIndeterminate" Property="Visibility" Value="Visible" />
            </Trigger>-->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="BackgroundDisabled" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="ToggleCheck" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundNormal}" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderNormal}" />
        <!--<Setter Property="Foreground" Value="{StaticResource BrushColorLabelForeground}" />-->
        <Setter Property="Foreground" Value="{StaticResource BrushColorLabelForeground}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundMouseOverHighlight}" />
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderMouseOver}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundFocusedHighlight}" />
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderFocused}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundPressedHighlight}" />
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderMouseOver}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource BrushColorLabelForegroundDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Radiobutton style -->
    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="core:SoundUI.ClickSound" Value="{StaticResource SoundCheckboxClick}" />
        <Setter Property="core:SoundUI.EnterSound" Value="{StaticResource SoundCheckboxEnter}" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="4,0,0,0" />
        <Setter Property="Margin" Value="0,0,6,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Center">
                        <BulletDecorator.Bullet>
                            <Grid Width="20" Height="20">
                                <Ellipse Fill="{TemplateBinding Background}"
                                         Stroke="{TemplateBinding BorderBrush}"
                                         StrokeThickness="1"
                                         HorizontalAlignment="Stretch"
                                         VerticalAlignment="Stretch" />
                                <Grid x:Name="ToggleCheck" Width="10" Height="10" HorizontalAlignment="Center"
                                      VerticalAlignment="Center" Visibility="Visible">
                                    <Path Data="{StaticResource CheckboxGeometry}"
                                          Stretch="Fill"
                                          Fill="{TemplateBinding Foreground}" />
                                </Grid>
                                <!--<Rectangle x:Name="BackgroundDisabled" Margin="2"
                                           Fill="{StaticResource DisabledBackground}"
                                           StrokeThickness="0" Visibility="Collapsed" />-->
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          UseLayoutRounding="{TemplateBinding UseLayoutRounding}" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsEnabled" Value="false">                            
                            <Setter TargetName="BackgroundDisabled" Property="Visibility" Value="Visible" />
                        </Trigger>-->
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="ToggleCheck" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundNormal}" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderNormal}" />
        <Setter Property="Foreground" Value="{StaticResource BrushColorLabelForeground}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundMouseOverHighlight}" />
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderMouseOver}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundFocusedHighlight}" />
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderFocused}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundPressedHighlight}" />
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderMouseOver}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource BrushColorLabelForegroundDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- HyperlinkControl style -->
    <Style TargetType="{x:Type core:HyperlinkControl}">
        <Setter Property="core:SoundUI.ClickSound" Value="{StaticResource SoundButtonMouseClick}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource BrushColor6}" />
        <Setter Property="ForegroundMouseOver" Value="{StaticResource BrushColor7}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type core:HyperlinkControl}">
                    <ContentControl x:Name="Wrapper"
                                    Foreground="{TemplateBinding Foreground}"
                                    Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="ContentPresenter" />
                    </ContentControl>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Wrapper" Property="Foreground"
                                    Value="{Binding ForegroundMouseOver, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{Binding ForegroundMouseOver, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <!-- GameWindow style -->
    <!-- Please note that all the durations should match
         the transition durations of DefaultBackgroundOverlayControlTemplate from RequiredStyles.xaml -->
    <KeyTime x:Key="WindowOpenDuration">0:0:0.15</KeyTime>
    <KeyTime x:Key="WindowCloseDuration">0:0:0.1</KeyTime>
    <CubicEase x:Key="WindowOpenEasingFunction" EasingMode="EaseOut" />
    <CubicEase x:Key="WindowCloseEasingFunction" EasingMode="EaseOut" />

    <Style TargetType="{x:Type core:GameWindow}">
        <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}" />
        <!--<Setter Property="BorderBrush" Value="{StaticResource WidgetBorderBrush}" />-->
        <Setter Property="Foreground" Value="{StaticResource WindowForeground}" />
        <Setter Property="SoundOpening" Value="{StaticResource SoundWindowOpening}" />
        <Setter Property="SoundClosing" Value="{StaticResource SoundWindowClosing}" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="{StaticResource DefaultWindowPadding}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Width" Value="{StaticResource DefaultWindowWidth}" />
        <!-- Commented out: height is detected automatically by default -->
        <!--<Setter Property="Height" Value="{StaticResource DefaultWindowHeight}" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type core:GameWindow}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="StoryboardOpen">
                            <BooleanAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.IsHitTestVisible)"
                                Storyboard.TargetName="LayoutRoot"
                                FillBehavior="Stop">
                                <!-- disable hit test until the window is opened
                                    (it's important to keep the window non-interactable until it's completely opened -->
                                <DiscreteBooleanKeyFrame Value="False"
                                                         KeyTime="0" />
                            </BooleanAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                Storyboard.TargetName="WindowChrome">
                                <EasingDoubleKeyFrame Value="0.15"
                                                      KeyTime="0" />
                                <EasingDoubleKeyFrame Value="1"
                                                      KeyTime="{StaticResource WindowOpenDuration}"
                                                      EasingFunction="{StaticResource WindowOpenEasingFunction}" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                Storyboard.TargetName="WindowChrome">
                                <EasingDoubleKeyFrame Value="0.15"
                                                      KeyTime="0" />
                                <EasingDoubleKeyFrame Value="1"
                                                      KeyTime="{StaticResource WindowOpenDuration}"
                                                      EasingFunction="{StaticResource WindowOpenEasingFunction}" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                           Storyboard.TargetName="WindowChrome">
                                <EasingDoubleKeyFrame Value="0"
                                                      KeyTime="0" />
                                <EasingDoubleKeyFrame Value="1"
                                                      KeyTime="{StaticResource WindowOpenDuration}"
                                                      EasingFunction="{StaticResource WindowOpenEasingFunction}" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardClose">
                            <BooleanAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.IsHitTestVisible)"
                                Storyboard.TargetName="LayoutRoot"
                                FillBehavior="HoldEnd">
                                <!-- Disable hit test -->
                                <DiscreteBooleanKeyFrame Value="False"
                                                         KeyTime="0" />
                            </BooleanAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                Storyboard.TargetName="WindowChrome">
                                <EasingDoubleKeyFrame Value="1.075"
                                                      KeyTime="{StaticResource WindowCloseDuration}"
                                                      EasingFunction="{StaticResource WindowCloseEasingFunction}" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                Storyboard.TargetName="WindowChrome">
                                <EasingDoubleKeyFrame Value="1.075"
                                                      KeyTime="{StaticResource WindowCloseDuration}"
                                                      EasingFunction="{StaticResource WindowCloseEasingFunction}" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                           Storyboard.TargetName="WindowChrome">
                                <EasingDoubleKeyFrame Value="0"
                                                      KeyTime="{StaticResource WindowCloseDuration}"
                                                      EasingFunction="{StaticResource WindowCloseEasingFunction}" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <ContentControl x:Name="WindowChrome" RenderTransformOrigin="0.5,0.25">
                        <ContentControl.RenderTransform>
                            <ScaleTransform />
                        </ContentControl.RenderTransform>

                        <Grid x:Name="LayoutRoot" Background="Transparent">
                            <core:WidgetPanel InnerGlowSize="10"
                                              WidgetBackground="{TemplateBinding Background}"
                                              VisibilityBackgroundImage="Collapsed" />

                            <Border BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid x:Name="ContentChromeGrid"
                                      Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      RenderTransformOrigin="0.5,0.5">
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Grid.RenderTransform>

                                    <ContentPresenter KeyboardNavigation.TabNavigation="Cycle" />
                                </Grid>
                            </Border>

                            <Canvas HorizontalAlignment="Right"
                                    Margin="0,0,-6,0">
                                <StackPanel x:Name="ExtensionsPanel"
                                            Orientation="Vertical" />
                            </Canvas>
                        </Grid>
                    </ContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Dialog window style -->
    <Style TargetType="{x:Type core:DialogWindow}">
        <Setter Property="TitleFontSize" Value="14" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type core:DialogWindow}">
                    <core:GameWindow x:Name="Window"
                                     Background="{StaticResource WindowBackgroundLessTransparentBrush}"
                                     ZIndexOffset="10000">
                        <Grid MinWidth="240">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <core:FormattedTextBlock
                                Text="{TemplateBinding WindowTitle}"
                                Visibility="{Binding WindowTitle, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyStringToVisibilityConverter}, ConverterParameter=Reverse}"
                                FontWeight="Bold"
                                Foreground="{StaticResource WindowTitleForeground}"
                                FontSize="{TemplateBinding TitleFontSize}"
                                HorizontalAlignment="Center"
                                Margin="0,0,0,5" />

                            <ContentPresenter
                                Grid.Row="1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="{TemplateBinding Padding}" />

                            <StackPanel
                                Grid.Row="2"
                                Orientation="Horizontal"
                                HorizontalAlignment="Center"
                                MaxHeight="36"
                                Margin="0,10,0,0">
                                <Button x:Name="BtnOk" Content="{x:Static loc:CoreStrings.Button_OK}"
                                        Margin="5,0" />
                                <Button x:Name="BtnCancel" Content="{x:Static loc:CoreStrings.Button_Cancel}"
                                        Margin="5,0" />
                            </StackPanel>
                        </Grid>
                    </core:GameWindow>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Tooltip style -->
    <Style TargetType="{x:Type common:SmartTooltip}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="{StaticResource TooltipForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TooltipBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource TooltipBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource TooltipBorderThickness}" />
        <Setter Property="Padding" Value="5,3" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type common:SmartTooltip}">
                    <Popup x:Name="PopupControl"
                           AllowsTransparency="True"
                           Placement="Absolute"
                           IsHitTestVisible="{TemplateBinding IsHitTestVisible}">
                        <ContentControl x:Name="PopupContentHolder"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        IsHitTestVisible="False">
                            <core:ScreenScalePanel>
                                <core:UIScalePanel>
                                    <Grid>
                                        <Border BorderBrush="{StaticResource WidgetShadowBrush}"
                                                CornerRadius="3"
                                                BorderThickness="0,0,0.75,0.75"
                                                Margin="{StaticResource WidgetShadowMarginThin}" />

                                        <Border Background="{TemplateBinding Background}"
                                                CornerRadius="3" />

                                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="3" />

                                        <Border CornerRadius="3">
                                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                                              UseLayoutRounding="{TemplateBinding UseLayoutRounding}" />
                                        </Border>
                                    </Grid>
                                </core:UIScalePanel>
                            </core:ScreenScalePanel>
                        </ContentControl>
                    </Popup>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Scroll viewer and scroll bars -->
    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Height" Value="8" />
        <Setter Property="Delay" Value="200" />
        <Setter Property="Interval" Value="50" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Margin="1,0" Background="Transparent">
                        <Path Data="M0,3 L3,0 L6,3 z"
                              Fill="{TemplateBinding Foreground}"
                              Stretch="Fill" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource ScrollBarForeground}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource ScrollBarForegroundMouseOver}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource ScrollBarForegroundPressed}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource BrushColorLabelForegroundDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Delay" Value="200" />
        <Setter Property="Interval" Value="50" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                               Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Margin="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{StaticResource ScrollBarBackground}"
                            BorderBrush="{TemplateBinding Foreground}"
                            BorderThickness="1"
                            CornerRadius="{StaticResource DefaultScrollbarThumbCornerRadius}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource ScrollBarForeground}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource ScrollBarForegroundMouseOver}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource ScrollBarForegroundPressed}" />
            </Trigger>
            <!-- It doesn't work as intended -->
            <!--<Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground}" />
            </Trigger>-->
        </Style.Triggers>
    </Style>

    <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                               Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="{StaticResource DefaultScrollbarWidth}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <!--<RepeatButton Margin="0,1,0,2" Command="ScrollBar.LineUpCommand"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Style="{StaticResource ScrollBarButton}"
                                      Height="{TemplateBinding Width}" />-->
                        <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true"
                               IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageUpCommand"
                                              Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageDownCommand"
                                              Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}" />
                            </Track.Thumb>
                        </Track>
                        <!--<RepeatButton Grid.Row="2" Margin="0,2,0,1"
                                      Command="ScrollBar.LineDownCommand" IsEnabled="{TemplateBinding IsMouseOver}"
                                      Style="{StaticResource ScrollBarButton}"
                                      Height="{TemplateBinding Width}"
                                      RenderTransformOrigin="0.5,0.5">
                            <RepeatButton.RenderTransform>
                                <RotateTransform Angle="180" />
                            </RepeatButton.RenderTransform>
                        </RepeatButton>-->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Border Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"
                                Padding="{TemplateBinding Padding}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}" />
                        <Border Grid.Column="0" Grid.Row="0"
                                BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{x:Null}">
                            <ScrollContentPresenter Content="{TemplateBinding Content}"
                                                    Margin="{TemplateBinding Padding}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}" />
                        </Border>

                        <!-- The visibility of the ScrollBars is controlled by the implementation for the control -->
                        <Border Grid.Column="1"
                                Grid.Row="0"
                                Margin="{TemplateBinding BorderThickness}"
                                BorderBrush="{x:Null}">
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                       Margin="1,1,1,1"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Orientation="Vertical"
                                       Minimum="0"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       ViewportSize="{TemplateBinding ViewportHeight}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- ComboBoxToggleButton control template (used for ComboBox) -->
    <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.05" />
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                Storyboard.TargetName="Arrow">
                                <EasingDoubleKeyFrame Value="0" KeyTime="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                Storyboard.TargetName="Arrow">
                                <EasingDoubleKeyFrame Value="-180" KeyTime="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="{TemplateBinding Background}"
                    CornerRadius="{StaticResource ControlCornerRadius}" />
            <Border
                x:Name="BackgroundDisabled"
                Grid.ColumnSpan="1"
                Background="{StaticResource DisabledBackground}"
                Visibility="Collapsed"
                CornerRadius="{StaticResource ControlCornerRadius}" />
            <Border
                x:Name="Border"
                Margin="0"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{StaticResource ControlCornerRadius}" />

            <!-- Vertical line before arrow -->
            <Border
                HorizontalAlignment="Right"
                Width="{TemplateBinding ActualHeight}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="1,0,0,0" />

            <Grid x:Name="Arrow" Width="{TemplateBinding ActualHeight}" HorizontalAlignment="Right"
                  RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                    <RotateTransform />
                </Grid.RenderTransform>
                <Path
                    x:Name="ArrowFill"
                    Grid.Column="0"
                    Width="8"
                    Height="8"
                    Margin="0,1,0,0"
                    Stretch="Fill"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M0,0 L3,6 6,0z"
                    Stroke="{TemplateBinding BorderBrush}"
                    StrokeThickness="1"
                    d:LayoutOverrides="GridBox" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="False" />
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledBackground}" />
                <Setter TargetName="BackgroundDisabled" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="NoesisComboBoxTextBoxTemplate" TargetType="{x:Type TextBox}">
        <Border x:Name="Border" Background="{TemplateBinding Background}" Focusable="False">
            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" />
        </Border>
    </ControlTemplate>

    <Style x:Key="NoesisComboBoxTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template" Value="{StaticResource NoesisComboBoxTextBoxTemplate}" />
    </Style>


    <!-- ComboBoxItem template and style -->
    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="4,2" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1">
                            <ContentPresenter x:Name="ContentSite" Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource BrushColorAlt1}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource ColorAlt4}" Opacity="0.4" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource Color4}" Opacity="0.6" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource Color6}" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderThickness" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- ComboBox Style -->
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="core:SoundUI.ClickSound" Value="{StaticResource SoundDropdownClick}" />
        <Setter Property="core:SoundUI.EnterSound" Value="{StaticResource SoundDropdownEnter}" />
        <!--<Setter Property="services:PopupsManagerService.Registered" Value="True" />-->
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="Padding" Value="6,4" />
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}" />
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundNormal}" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderNormal}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="MaxDropDownHeight" Value="300" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Popup
                            x:Name="PART_Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="None">
                            <Grid x:Name="DropDown"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        Margin="0,1,0,0"
                                        BorderThickness="1"
                                        BorderBrush="{StaticResource BrushColorAlt5}"
                                        CornerRadius="1">
                                    <Border.Background>
                                        <SolidColorBrush Color="{StaticResource ColorAlt0}" Opacity="0.975" />
                                    </Border.Background>
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="4"
                                                          ShadowDepth="2"
                                                          Direction="-45"
                                                          Opacity="0.75"
                                                          Color="Black" />
                                    </Border.Effect>
                                </Border>

                                <ScrollViewer Margin="1" HorizontalScrollBarVisibility="Auto"
                                              VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                    <StackPanel Margin="1" IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="2" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="BackgroundDisabled" Grid.ColumnSpan="2"
                                    Background="{StaticResource DisabledBackground}"
                                    Visibility="Collapsed" />
                            <ToggleButton
                                x:Name="DropDownButton"
                                Grid.ColumnSpan="3"
                                ClickMode="Press"
                                Focusable="False"
                                Template="{StaticResource ComboBoxToggleButtonTemplate}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ContentPresenter
                                x:Name="ContentSite"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                ContentSource="SelectionBoxItem"
                                IsHitTestVisible="False">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                            <TextBox
                                x:Name="PART_EditableTextBox"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Focusable="True"
                                IsReadOnly="{TemplateBinding IsReadOnly}"
                                Style="{StaticResource NoesisComboBoxTextBoxStyle}"
                                Visibility="Collapsed"
                                Background="Transparent"
                                Foreground="{TemplateBinding Foreground}"
                                CaretBrush="{TemplateBinding Foreground}"
                                SelectionBrush="{TemplateBinding BorderBrush}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource ButtonBackgroundMouseOverHighlight}" />
                            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Background" Value="{StaticResource ButtonBackgroundFocusedHighlight}" />
                            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderFocused}" />
                        </Trigger>
                        <!--<Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource ButtonBackgroundPressedHighlight}" />
                            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderPressed}" />
                        </Trigger>-->
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="DropDownButton" Property="Grid.Column" Value="1" />
                            <Setter TargetName="DropDownButton" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="DropDownButton" Property="IsTabStop" Value="False" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource BrushColorAlt1}" />
                            <Setter TargetName="BackgroundDisabled" Property="Visibility" Value="Visible" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush x:Key="HUDValueBrush">#FF0082CC</SolidColorBrush>
    <SolidColorBrush x:Key="HUDValueBorderBrush">#FF0082CC</SolidColorBrush>

    <Style TargetType="{x:Type core:ValueBarControl}">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="Foreground" Value="{StaticResource BrushColorAlt7}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type core:ValueBarControl}">
                    <Grid x:Name="LayoutRoot">
                        <Border x:Name="Border"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}" />
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Left" />
                        <TextBlock x:Name="TextBlockValueDisplay"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Text="100%"
                                   Foreground="{TemplateBinding Foreground}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontWeight="{TemplateBinding FontWeight}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DefaultContentTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Fill="{Binding BarBrush}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="DefaultFormattedTextBlockTemplate"
                     TargetType="{x:Type core:FormattedTextBlock}">
        <TextBlock x:Name="TextBlock"
                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                   Foreground="{TemplateBinding Foreground}"
                   TextTrimming="{TemplateBinding TextTrimming}"
                   TextAlignment="{TemplateBinding TextAlignment}"
                   TextWrapping="{TemplateBinding TextWrapping}"
                   LineStackingStrategy="{TemplateBinding LineStackingStrategy}"
                   LineHeight="{TemplateBinding LineHeight}"
                   FontSize="{TemplateBinding FontSize}"
                   FontFamily="{TemplateBinding FontFamily}"
                   FontWeight="{TemplateBinding FontWeight}"
                   noesis:Text.Stroke="{TemplateBinding Property=noesis:Text.Stroke}"
                   noesis:Text.StrokeThickness="{TemplateBinding Property=noesis:Text.StrokeThickness}" />
    </ControlTemplate>

    <Style TargetType="{x:Type core:FormattedTextBlock}">
        <Setter Property="Template" Value="{StaticResource DefaultFormattedTextBlockTemplate}" />
    </Style>

    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="core:SoundUI.ClickSound" Value="{StaticResource SoundListElementClick}" />
        <Setter Property="core:SoundUI.EnterSound" Value="{StaticResource SoundListElementEnter}" />
        <Setter Property="Background" Value="{StaticResource ItemBackgroundNormalBrush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0,0,0,2" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="5,7" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid>
                        <Border Padding="{TemplateBinding Padding}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource BrushColorAlt0}" />
                <Setter Property="BorderBrush" Value="{StaticResource BrushColorAlt5}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{StaticResource BrushColorAlt1}" />
                <Setter Property="BorderBrush" Value="{StaticResource BrushColorAlt6}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="DefaultListBoxTemplate" TargetType="{x:Type ListBox}">
        <Grid Background="{TemplateBinding Background}">
            <ScrollViewer Focusable="false"
                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                <ItemsPresenter Margin="{TemplateBinding Padding}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </ScrollViewer>
            <Border x:Name="Border"
                    Background="{x:Null}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}" />
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="Template" Value="{StaticResource DefaultListBoxTemplate}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel IsItemsHost="True"
                                Orientation="Vertical" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="core:SoundUI.ClickSound" Value="{StaticResource SoundTabSwitched}" />
        <Setter Property="core:SoundUI.EnterSound" Value="{StaticResource SoundTabEnter}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="2,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="Border"
                            Background="Transparent"
                            BorderThickness="0,0,0,2"
                            CornerRadius="1,1,0,0">
                        <Grid x:Name="HeaderGroup">
                            <ContentPresenter x:Name="HeaderPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              ContentSource="Header" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="Border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#FF557799" Opacity="0.3" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush"
                                    TargetName="Border"
                                    Value="{StaticResource BrushColor6}" />
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="Border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#FF557799" Opacity="0.45" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush"
                                    TargetName="Border"
                                    Value="{StaticResource BrushColorAlt6}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="Border"
                                    Value="{StaticResource BrushColor7}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItemCompactStyle"
           TargetType="{x:Type TabItem}">
        <Setter Property="core:SoundUI.ClickSound" Value="{StaticResource SoundTabSwitched}" />
        <Setter Property="core:SoundUI.EnterSound" Value="{StaticResource SoundTabEnter}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0,0,0,2" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="7,5" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Visibility" Value="{Binding Visibility}" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
        <Setter Property="Header" Value="{Binding Title}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="LayoutRoot">
                        <Border x:Name="Border"
                                Padding="{TemplateBinding Padding}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />

                        <ContentPresenter x:Name="HeaderContentPresenter"
                                          ContentSource="Header"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          TextElement.Foreground="{StaticResource BrushColorAlt6}"
                                          TextElement.FontSize="14"
                                          TextElement.FontWeight="Bold"
                                          TextElement.FontFamily="{StaticResource CondensedFontFamily}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#FF557799" Opacity="0.3" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush"
                                    TargetName="Border"
                                    Value="{StaticResource BrushColor6}" />
                            <Setter Property="TextElement.Foreground"
                                    TargetName="HeaderContentPresenter"
                                    Value="{StaticResource BrushColor6}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background"
                                    TargetName="Border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#FF557799" Opacity="0.45" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush"
                                    TargetName="Border"
                                    Value="{StaticResource BrushColorAlt6}" />
                            <Setter Property="TextElement.Foreground"
                                    TargetName="HeaderContentPresenter"
                                    Value="{StaticResource BrushColorAlt6}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity"
                                    TargetName="LayoutRoot"
                                    Value="0.33" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="Border"
                                    Value="{StaticResource BrushColor7}" />
                            <Setter Property="TextElement.Foreground"
                                    TargetName="HeaderContentPresenter"
                                    Value="{StaticResource BrushColor7}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabControlCompactStyle" TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel IsItemsHost="True"
                                Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid KeyboardNavigation.TabNavigation="Local"
                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel IsItemsHost="true"
                                  Panel.ZIndex="1" />
                        <ContentPresenter Grid.Row="1"
                                          ContentSource="SelectedContent" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type TabItem}"
                   BasedOn="{StaticResource TabItemCompactStyle}" />
        </Style.Resources>
    </Style>

    <Style TargetType="{x:Type TabControl}"
           BasedOn="{StaticResource TabControlCompactStyle}" />

    <Style x:Key="TabControlCompactStyleTabsOnly"
           BasedOn="{StaticResource TabControlCompactStyle}"
           TargetType="{x:Type TabControl}">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <StackPanel IsItemsHost="True"
                                Orientation="Horizontal" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type TabItem}"
                   BasedOn="{StaticResource TabItemCompactStyle}" />
        </Style.Resources>
    </Style>

    <Style x:Key="TabControlCachedCompactStyle" TargetType="{x:Type core:TabControlCached}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel IsItemsHost="True"
                                Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type core:TabControlCached}">
                    <Grid KeyboardNavigation.TabNavigation="Local"
                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="5" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ItemsPresenter Grid.Row="0"
                                        KeyboardNavigation.TabIndex="1"
                                        VerticalAlignment="Stretch"
                                        HorizontalAlignment="Stretch"
                                        Panel.ZIndex="1" />
                        <Grid x:Name="ContentGrid"
                              Grid.Row="2"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type TabItem}"
                   BasedOn="{StaticResource TabItemCompactStyle}" />
        </Style.Resources>
    </Style>

    <Style TargetType="{x:Type core:TabControlCached}"
           BasedOn="{StaticResource TabControlCachedCompactStyle}" />

    <Style x:Key="TabItemSpacerStyle" TargetType="{x:Type TabItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Width" Value="24" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border Width="{TemplateBinding Width}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Slider styles and templates -->
    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Border Name="OuterBorder"
                                Height="26" Width="26" Opacity="1" BorderThickness="1" CornerRadius="13">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource Color7}" Opacity="0.3" />
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource Color6}" Opacity="0.3" />
                            </Border.Background>
                        </Border>
                        <Border Name="InnerBorder"
                                Background="{StaticResource BrushColor6}"
                                Height="10" Width="10" CornerRadius="5" Opacity="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="InnerBorder" Property="Background"
                                    Value="{StaticResource BrushColorAlt6}" />
                            <Setter TargetName="OuterBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="OuterBorder" Property="Background" Value="#55ACACAC" />
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="#55ACACAC" />
                            <Setter TargetName="InnerBorder" Property="Width" Value="4" />
                            <Setter TargetName="InnerBorder" Property="Height" Value="4" />
                            <Setter TargetName="InnerBorder" Property="CornerRadius" Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="SliderHorizontalTemplate" TargetType="{x:Type Slider}">
        <Grid Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TickBar x:Name="TopTick" Visibility="Collapsed"
                     Fill="{StaticResource BrushColorAlt5}"
                     Placement="Top"
                     SnapsToDevicePixels="True"
                     Height="4"
                     Margin="0,0,0,-4" />
            <Border x:Name="TrackBackground"
                    Grid.Row="1"
                    Margin="10,0"
                    Height="6"
                    Background="{TemplateBinding Background}"
                    VerticalAlignment="Center"
                    CornerRadius="3" />
            <Track x:Name="PART_Track" Grid.Row="1">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="Slider.DecreaseLarge" Style="{StaticResource SliderRepeatButtonStyle}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="Slider.IncreaseLarge" Style="{StaticResource SliderRepeatButtonStyle}" />
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="Thumb" Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
            </Track>
            <TickBar x:Name="BottomTick" Grid.Row="2" Visibility="Collapsed"
                     Fill="{StaticResource BrushColorAlt5}"
                     Placement="Bottom"
                     SnapsToDevicePixels="True"
                     Height="4"
                     Margin="0,0,0,-4" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SliderVerticalTemplate" TargetType="{x:Type Slider}">
        <Grid Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinWidth}" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TickBar x:Name="TopTick"
                     Visibility="Collapsed"
                     Fill="{StaticResource BrushColorAlt5}"
                     Placement="Left"
                     SnapsToDevicePixels="True"
                     Width="4" Margin="0,0,2,0" />
            <Border x:Name="TrackBackground"
                    Grid.Column="1"
                    Margin="0,10"
                    Width="6"
                    Background="{TemplateBinding Background}"
                    HorizontalAlignment="Center"
                    CornerRadius="3" />
            <Track x:Name="PART_Track" Grid.Column="1">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="Slider.DecreaseLarge" Style="{StaticResource SliderRepeatButtonStyle}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="Slider.IncreaseLarge" Style="{StaticResource SliderRepeatButtonStyle}" />
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="Thumb" Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
            </Track>
            <TickBar x:Name="BottomTick" Grid.Column="2"
                     Visibility="Collapsed"
                     Fill="{StaticResource BrushColorAlt5}"
                     Placement="Right"
                     Width="4" Margin="2,0,0,0" SnapsToDevicePixels="True" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource ColorAlt4}" Opacity="0.75" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinWidth" Value="120" />
                <Setter Property="MinHeight" Value="20" />
                <Setter Property="Template" Value="{StaticResource SliderHorizontalTemplate}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="MinWidth" Value="20" />
                <Setter Property="MinHeight" Value="120" />
                <Setter Property="Template" Value="{StaticResource SliderVerticalTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Item slot styles and templates -->
    <ControlTemplate x:Key="ItemSlotDelimiterVerticalControlTemplate">
        <Rectangle Width="1.5" VerticalAlignment="Stretch" Stretch="Fill" SnapsToDevicePixels="False">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0.75">
                    <GradientStop Color="#00F2C37A" Offset="0" />
                    <GradientStop Color="#99F2C37A" Offset="0.5" />
                    <GradientStop Color="#00F2C37A" Offset="1" />
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
    </ControlTemplate>

    <ControlTemplate x:Key="ItemSlotDelimiterAltVerticalControlTemplate">
        <Rectangle Width="1.5" VerticalAlignment="Stretch" Stretch="Fill" SnapsToDevicePixels="False">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0.75">
                    <GradientStop Color="#00007AA8" Offset="0" />
                    <GradientStop Color="#FF007AA8" Offset="0.5" />
                    <GradientStop Color="#00007AA8" Offset="1" />
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
    </ControlTemplate>

    <ControlTemplate x:Key="ItemSlotDelimiterHorizontalControlTemplate">
        <Rectangle Height="1.5" HorizontalAlignment="Stretch" Stretch="Fill" SnapsToDevicePixels="False">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                    <GradientStop Color="#00F2C37A" Offset="0" />
                    <GradientStop Color="#99F2C37A" Offset="0.5" />
                    <GradientStop Color="#00F2C37A" Offset="1" />
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
    </ControlTemplate>

    <ControlTemplate x:Key="ItemSlotDelimiterAltHorizontalControlTemplate">
        <Rectangle Height="1.5" HorizontalAlignment="Stretch" Stretch="Fill" SnapsToDevicePixels="False">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                    <GradientStop Color="#00007AA8" Offset="0" />
                    <GradientStop Color="#99007AA8" Offset="0.5" />
                    <GradientStop Color="#00007AA8" Offset="1" />
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
    </ControlTemplate>

    <Style TargetType="{x:Type core:WindowMenuWithInventory}">
        <Setter Property="SoundOpening" Value="{StaticResource SoundWindowOpening}" />
        <Setter Property="SoundClosing" Value="{StaticResource SoundWindowClosing}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type core:WindowMenuWithInventory}">
                    <core:GameWindow x:Name="GameWindow"
                                     Width="{StaticResource GameMenuStandardWindowWidth}"
                                     Height="{StaticResource GameMenuStandardWindowHeight}"
                                     FocusOnControl="{Binding ElementName=GameWindow}"
                                     Padding="{TemplateBinding Padding}"
                                     SoundOpening="{TemplateBinding SoundOpening}"
                                     SoundClosing="{TemplateBinding SoundClosing}">
                        <Grid>
                            <Grid
                                d:DataContext="{d:DesignInstance player:ViewModelWindowInventory, IsDesignTimeCreatable=True}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="274" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />

                                <controls:ItemsContainerControl x:Name="ContainerInventoryControl"
                                                                Grid.Row="1"
                                                                Grid.Column="0"
                                                                Container="{Binding ContainerInventory}"
                                                                VerticalAlignment="Top"
                                                                HorizontalAlignment="Left"
                                                                Margin="10,5,0,0"
                                                                DesignTimeSlotsCount="40"
                                                                Padding="0" />

                                <Line Grid.Row="0"
                                      Grid.Column="0"
                                      X1="0"
                                      X2="1"
                                      StrokeThickness="1"
                                      Margin="-1,0"
                                      Stroke="{StaticResource WidgetBorderBrush}"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Bottom"
                                      Stretch="Fill" />
                            </Grid>
                        </Grid>
                    </core:GameWindow>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBlockMenuPlaceholderStyle" TargetType="{x:Type core:FormattedTextBlock}">
        <Setter Property="TextTrimming" Value="WordEllipsis" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="LineHeight" Value="13.5" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="{StaticResource CondensedFontFamily}" />
        <Setter Property="MaxWidth" Value="385" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{StaticResource BrushColor7}" />
    </Style>

    <Style TargetType="{x:Type core:PanningPanel}">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Canvas.Left" Value="{Binding Path=(Canvas.Left)}" />
                    <Setter Property="Canvas.Top" Value="{Binding Path=(Canvas.Top)}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type core:PanningPanel}">
                    <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}">
                        <Canvas x:Name="CanvasContentWrapper" Background="Transparent">
                            <Canvas x:Name="CanvasContent" RenderTransformOrigin="0.5,0.5">
                                <Canvas x:Name="CanvasContentItems" Background="Transparent" IsItemsHost="True" />
                            </Canvas>
                        </Canvas>
                        <Slider x:Name="SliderScale"
                                Height="130"
                                Margin="0,10,10,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Panel.ZIndex="3"
                                Value="0.5"
                                Orientation="Vertical"
                                LargeChange="0.2"
                                Maximum="{TemplateBinding MaxZoom}"
                                Minimum="{TemplateBinding MinZoom}"
                                Visibility="{TemplateBinding VisibilityZoomSlider}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBlockStyleCraftingCaption" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="LineHeight" Value="11.5" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="0,5,0,0" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <LinearGradientBrush Opacity="0.4"
                         x:Key="BrushWindowArrow">
        <GradientStop Color="{StaticResource ColorAlt4}" />
        <GradientStop Color="{StaticResource ColorAlt6}" Offset="1" />
    </LinearGradientBrush>

    <ControlTemplate x:Key="ControlTemplateArrow">
        <Path Data="m15,0 L30,15 L20,15 L20,30 L10,30 L10,15 L0,15z"
              RenderTransformOrigin="0.5,0.5"
              Stretch="Uniform"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Fill="{StaticResource BrushWindowArrow}">
            <Path.RenderTransform>
                <ScaleTransform ScaleY="-1" ScaleX="1.1" />
            </Path.RenderTransform>
        </Path>
    </ControlTemplate>

    <Style x:Key="VerticalScrollWideRepeatButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Delay" Value="200" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Interval" Value="50" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="StoryboardFlash" RepeatBehavior="Forever"
                                    AutoReverse="True">
                            <ColorAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                Storyboard.TargetName="path">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="{StaticResource ColorAlt4}" />
                                <EasingColorKeyFrame KeyTime="0:0:0.5"
                                                     Value="{StaticResource ColorAlt6}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ContentControl x:Name="border">
                        <ContentControl.Background>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Color="#FF000000" />
                                <GradientStop Color="#DD000000" Offset="0.33" />
                                <GradientStop Color="#00000000" Offset="1" />
                            </LinearGradientBrush>
                        </ContentControl.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                            Storyboard.TargetName="Hover">
                                            <EasingColorKeyFrame Value="#21FFFFFF" KeyTime="0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                            Storyboard.TargetName="Hover">
                                            <EasingColorKeyFrame Value="#33FFFFFF" KeyTime="0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid IsHitTestVisible="False" Width="20" Height="8"
                              HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Path x:Name="path"
                                  Data="M0,3 L3,0 L6,3 z"
                                  Stretch="Fill"
                                  Fill="#FFA3E6FF" />
                            <Path x:Name="Hover"
                                  Data="M0,3 L3,0 L6,3 z"
                                  Stretch="Fill"
                                  Fill="#00000000" />
                        </Grid>
                    </ContentControl>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded" SourceName="border">
                            <BeginStoryboard Storyboard="{StaticResource StoryboardFlash}" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalScrollWideRepeatButtonNoArrow" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Interval" Value="50" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="StoryboardFlash" RepeatBehavior="Forever"
                                    AutoReverse="True">
                            <ColorAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                Storyboard.TargetName="path">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="{StaticResource ColorAlt4}" />
                                <EasingColorKeyFrame KeyTime="0:0:0.5"
                                                     Value="{StaticResource ColorAlt6}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ContentControl x:Name="border">
                        <ContentControl.Background>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Color="#FF000000" />
                                <GradientStop Color="#00000000" Offset="1" />
                            </LinearGradientBrush>
                        </ContentControl.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                            Storyboard.TargetName="Hover">
                                            <EasingColorKeyFrame Value="#21FFFFFF" KeyTime="0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                            Storyboard.TargetName="Hover">
                                            <EasingColorKeyFrame Value="#33FFFFFF" KeyTime="0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid IsHitTestVisible="False" Width="20" Height="8"
                              HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </ContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalWideButtonScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="services:ScrollViewerWithButtonsService.IsEnabled" Value="True" />
        <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
        <Setter Property="CanContentScroll" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="Transparent">
                        <ScrollContentPresenter
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            CanContentScroll="{TemplateBinding CanContentScroll}" />

                        <RepeatButton
                            VerticalAlignment="Top"
                            Command="{Binding CommandScrollUp}"
                            Visibility="{Binding VisibilityScrollUp}"
                            IsEnabled="{TemplateBinding IsMouseOver}"
                            Style="{StaticResource VerticalScrollWideRepeatButton}"
                            Background="{TemplateBinding Background}" />

                        <RepeatButton
                            VerticalAlignment="Bottom"
                            Command="{Binding CommandScrollDown}"
                            Visibility="{Binding VisibilityScrollDown}"
                            IsEnabled="{TemplateBinding IsMouseOver}"
                            Style="{StaticResource VerticalScrollWideRepeatButton}"
                            Background="{TemplateBinding Background}">
                            <RepeatButton.LayoutTransform>
                                <RotateTransform Angle="180" />
                            </RepeatButton.LayoutTransform>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalWideButtonScrollViewerWithScrollBarStyle" TargetType="ScrollViewer">
        <Setter Property="services:ScrollViewerWithButtonsService.IsEnabled" Value="True" />
        <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
        <Setter Property="CanContentScroll" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ScrollContentPresenter
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            CanContentScroll="{TemplateBinding CanContentScroll}" />

                        <RepeatButton
                            VerticalAlignment="Top"
                            Command="{Binding CommandScrollUp}"
                            Visibility="{Binding VisibilityScrollUp}"
                            IsEnabled="{TemplateBinding IsMouseOver}"
                            Style="{StaticResource VerticalScrollWideRepeatButton}"
                            Background="{TemplateBinding Background}" />

                        <RepeatButton
                            VerticalAlignment="Bottom"
                            Command="{Binding CommandScrollDown}"
                            Visibility="{Binding VisibilityScrollDown}"
                            IsEnabled="{TemplateBinding IsMouseOver}"
                            Style="{StaticResource VerticalScrollWideRepeatButton}"
                            Background="{TemplateBinding Background}">
                            <RepeatButton.LayoutTransform>
                                <RotateTransform Angle="180" />
                            </RepeatButton.LayoutTransform>
                        </RepeatButton>

                        <Border Grid.Column="1"
                                Margin="{TemplateBinding BorderThickness}"
                                BorderBrush="{x:Null}">
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                       Margin="1,1,1,1"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Orientation="Vertical"
                                       Minimum="0"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       ViewportSize="{TemplateBinding ViewportHeight}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalScrollViewerWithFadeStyle" TargetType="ScrollViewer">
        <Setter Property="services:ScrollViewerWithButtonsService.IsEnabled" Value="True" />
        <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
        <Setter Property="CanContentScroll" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ScrollContentPresenter
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            CanContentScroll="{TemplateBinding CanContentScroll}" />

                        <RepeatButton
                            VerticalAlignment="Top"
                            Command="{Binding CommandScrollUp}"
                            Visibility="{Binding VisibilityScrollUp}"
                            IsEnabled="{TemplateBinding IsMouseOver}"
                            Style="{StaticResource VerticalScrollWideRepeatButtonNoArrow}"
                            Background="{TemplateBinding Background}" />

                        <RepeatButton
                            VerticalAlignment="Bottom"
                            Command="{Binding CommandScrollDown}"
                            Visibility="{Binding VisibilityScrollDown}"
                            IsEnabled="{TemplateBinding IsMouseOver}"
                            Style="{StaticResource VerticalScrollWideRepeatButtonNoArrow}"
                            Background="{TemplateBinding Background}">
                            <RepeatButton.LayoutTransform>
                                <RotateTransform Angle="180" />
                            </RepeatButton.LayoutTransform>
                        </RepeatButton>

                        <Border Grid.Column="1"
                                Margin="{TemplateBinding BorderThickness}"
                                BorderBrush="{x:Null}">
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                       Margin="1,1,1,1"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Orientation="Vertical"
                                       Minimum="0"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       ViewportSize="{TemplateBinding ViewportHeight}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="BrushOptionsPopupButtonForeground"
                     Color="{StaticResource Color7}"
                     Opacity="0.65" />

    <SolidColorBrush x:Key="BrushOptionsPopupButtonForegroundOver"
                     Color="{StaticResource Color7}"
                     Opacity="0.9" />

    <Style x:Key="OptionsThreeDotsControlStyle" TargetType="Control">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="core:SoundUI.ClickSound" Value="{StaticResource SoundDropdownClick}" />
        <Setter Property="core:SoundUI.EnterSound" Value="{StaticResource SoundDropdownEnter}" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{StaticResource BrushOptionsPopupButtonForeground}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <ContentControl Padding="5,2,3,2"
                                    Background="Transparent"
                                    VerticalAlignment="Stretch">
                        <StackPanel Orientation="Vertical"
                                    VerticalAlignment="Center">
                            <Ellipse Width="3" Height="3" Fill="{TemplateBinding Foreground}" />
                            <Ellipse Width="3" Height="3" Fill="{TemplateBinding Foreground}"
                                     Margin="0,1" />
                            <Ellipse Width="3" Height="3" Fill="{TemplateBinding Foreground}" />
                        </StackPanel>
                    </ContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource BrushOptionsPopupButtonForegroundOver}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="OptionsThreeDotsButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Control Style="{StaticResource OptionsThreeDotsControlStyle}"
                             VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ImageBrush x:Key="ResistanceBarForegroundImageTexture"
                ImageSource="/UI/Images/Menus/Equipment/DamageResistanceBarForeground.png"
                TileMode="None"
                Stretch="Fill" />

    <ImageBrush x:Key="ResistanceBarBackgroundImageTexture"
                ImageSource="/UI/Images/Menus/Equipment/DamageResistanceBarBackground.png"
                TileMode="None"
                Stretch="Fill" />

    <ImageBrush x:Key="ResistanceBarBackgroundBrightImageTexture"
                ImageSource="/UI/Images/Menus/Equipment/DamageResistanceBarBackgroundBright.png"
                TileMode="None"
                Stretch="Fill" />

    <Style x:Key="DefenseStatBarStyle" TargetType="{x:Type core:ValueBarControl}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="PositionsCount" Value="40" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="214" />
        <Setter Property="Height" Value="18" />
        <Setter Property="Background" Value="{StaticResource ResistanceBarBackgroundImageTexture}" />
        <Setter Property="Padding" Value="32,0,0,0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="MaxValue" Value="1" />
        <Setter Property="IsValueInterpolated" Value="True" />
        <Setter Property="ValueInterpolationRate" Value="15" />
        <Setter Property="InterpolationMaxDifferenceFraction" Value="1" />
        <Setter Property="InterpolationMinDifferenceFraction" Value="0.025" />
        <Setter Property="IsDisplayLabel" Value="False" />
        <Setter Property="IsDisplayPercents" Value="False" />
        <Setter Property="IsDisplayTooltip" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type core:ValueBarControl}">
                    <ContentControl UseLayoutRounding="True"
                                    Background="Transparent">
                        <Grid x:Name="LayoutRoot"
                              Background="{TemplateBinding Background}"
                              Margin="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Left" />
                        </Grid>
                    </ContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DefaultContentTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Fill="{StaticResource ResistanceBarForegroundImageTexture}"
                               UseLayoutRounding="False" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TooltipStatBarStyle" TargetType="{x:Type core:ValueBarControl}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="PositionsCount" Value="40" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="120" />
        <Setter Property="Height" Value="13" />
        <Setter Property="Background" Value="{StaticResource ResistanceBarBackgroundBrightImageTexture}" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="MaxValue" Value="1" />
        <Setter Property="IsValueInterpolated" Value="True" />
        <Setter Property="ValueInterpolationRate" Value="15" />
        <Setter Property="InterpolationMaxDifferenceFraction" Value="1" />
        <Setter Property="InterpolationMinDifferenceFraction" Value="0.025" />
        <Setter Property="IsDisplayLabel" Value="False" />
        <Setter Property="IsDisplayPercents" Value="False" />
        <Setter Property="IsDisplayTooltip" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type core:ValueBarControl}">
                    <ContentControl UseLayoutRounding="True"
                                    Background="Transparent">
                        <Grid x:Name="LayoutRoot"
                              Background="{TemplateBinding Background}"
                              Margin="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Left" />
                        </Grid>
                    </ContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DefaultContentTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Fill="{StaticResource ResistanceBarForegroundImageTexture}"
                               UseLayoutRounding="False" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TooltipStatTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="0,1" />
    </Style>

    <LinearGradientBrush x:Key="BrushHorizontalSeparator" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Offset="0"
                      Color="{Binding Source={StaticResource ColorAlt5}, Converter={StaticResource ColorAlphaConverter}, ConverterParameter=0}" />
        <GradientStop Offset="0.5"
                      Color="{Binding Source={StaticResource ColorAlt5}, Converter={StaticResource ColorAlphaConverter}, ConverterParameter=0xCC}" />
        <GradientStop Offset="1.0"
                      Color="{Binding Source={StaticResource ColorAlt5}, Converter={StaticResource ColorAlphaConverter}, ConverterParameter=0}" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BrushVerticalSeparator" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Offset="0"
                      Color="{Binding Source={StaticResource ColorAlt5}, Converter={StaticResource ColorAlphaConverter}, ConverterParameter=0}" />
        <GradientStop Offset="0.5"
                      Color="{Binding Source={StaticResource ColorAlt5}, Converter={StaticResource ColorAlphaConverter}, ConverterParameter=0xCC}" />
        <GradientStop Offset="1.0"
                      Color="{Binding Source={StaticResource ColorAlt5}, Converter={StaticResource ColorAlphaConverter}, ConverterParameter=0}" />
    </LinearGradientBrush>

    <Style x:Key="ControlHorizontalSeparator" TargetType="Control">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="0,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Height="1"
                               HorizontalAlignment="Stretch"
                               Stretch="Fill"
                               SnapsToDevicePixels="False"
                               Fill="{StaticResource BrushHorizontalSeparator}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ControlVerticalSeparator" TargetType="Control">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Width="1.33"
                               VerticalAlignment="Stretch"
                               Stretch="Fill"
                               SnapsToDevicePixels="False"
                               Fill="{StaticResource BrushVerticalSeparator}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ControlVerticalSeparatorLeft" TargetType="Control"
           BasedOn="{StaticResource ControlVerticalSeparator}">
        <Setter Property="Grid.Column" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>

    <Style x:Key="ControlVerticalSeparatorRight"
           TargetType="Control" BasedOn="{StaticResource ControlVerticalSeparator}">
        <Setter Property="Grid.Column" Value="2" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style x:Key="WorldObjectValueBarControlStyle" TargetType="{x:Type core:ValueBarControl}">
        <!-- Always interpolate -->
        <Setter Property="InterpolationMaxDifferenceFraction" Value="1" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="MaxWidth" Value="120" />
        <Setter Property="MaxHeight" Value="13" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="IsDisplayLabel" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type core:ValueBarControl}">
                    <Grid x:Name="LayoutRoot"
                          UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <!-- Outer (dark) border -->
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                Margin="-1.5" />

                        <!-- Inner (bright) border -->
                        <Border x:Name="Border"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="2" />

                        <ContentPresenter Margin="{TemplateBinding Padding}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DefaultContentTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{Binding BarBrush}" CornerRadius="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource TooltipForegroundBrush}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="{StaticResource CondensedFontFamily}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border"
                            Background="{StaticResource TooltipBackgroundBrush}"
                            BorderBrush="{StaticResource TooltipBorderBrush}"
                            BorderThickness="{StaticResource TooltipBorderThickness}"
                            CornerRadius="3"
                            Padding="{TemplateBinding Padding}">
                        <StackPanel IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="core:SoundUI.ClickSound" Value="{StaticResource SoundButtonMouseClick}" />
        <Setter Property="core:SoundUI.EnterSound" Value="{StaticResource SoundButtonMouseEnter}" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="{StaticResource TooltipBorderThickness}" />
        <!--<Setter Property="Padding" Value="0" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="1"
                            CornerRadius="1"
                            UseLayoutRounding="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid x:Name="IconPanel" MinWidth="0">
                                <ContentPresenter Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center"
                                                  ContentSource="Icon" />
                            </Grid>
                            <Grid x:Name="GlyphPanel" MinWidth="17" Visibility="Collapsed">
                                <Path Margin="4,0,6,0" x:Name="Glyph" VerticalAlignment="Center"
                                      Fill="{TemplateBinding Foreground}"
                                      Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" />
                            </Grid>

                            <!--Margin="{TemplateBinding Padding}"-->
                            <ContentPresenter x:Name="HeaderHost"
                                              Grid.Column="1"
                                              Margin="2,0"
                                              ContentSource="Header" />

                            <TextBlock x:Name="InputGesture" Grid.Column="2" Text="{TemplateBinding InputGestureText}"
                                       Margin="37,0,3,0" VerticalAlignment="Center" />

                            <Grid x:Name="ArrowPanelPanel" Grid.Column="3" Width="14">
                                <Grid Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                    <Path x:Name="ArrowPanelPath" VerticalAlignment="Center"
                                          Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z" />
                                </Grid>
                            </Grid>

                            <Popup
                                x:Name="SubMenuPopup"
                                IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                Placement="Right"
                                Focusable="false"
                                AllowsTransparency="true"
                                VerticalOffset="-3"
                                HorizontalOffset="-3">
                                <Grid x:Name="SubMenu">
                                    <Border x:Name="SubMenuBorder"
                                            Background="{StaticResource TooltipBackgroundBrush}"
                                            BorderBrush="{StaticResource TooltipBorderBrush}"
                                            BorderThickness="1" />
                                    <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                Margin="2" />
                                </Grid>
                            </Popup>

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Margin" Value="0,1,0,1" />
                            <Setter Property="Padding" Value="6,3,6,3" />
                            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                            <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup" />
                            <Setter Property="VerticalOffset" Value="0" TargetName="SubMenuPopup" />
                            <Setter Property="HorizontalOffset" Value="0" TargetName="SubMenuPopup" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="InputGesture" />
                            <Setter Property="MinWidth" Value="0" TargetName="IconPanel" />
                            <Setter Property="Width" Value="0" TargetName="ArrowPanelPanel" />
                        </Trigger>

                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Margin" Value="0,1,0,1" />
                            <Setter Property="Padding" Value="6,3,6,3" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                        </Trigger>

                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="0,2,0,2" />
                            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                        </Trigger>

                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="0,2,0,2" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                        </Trigger>

                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                        </Trigger>

                        <Trigger Property="AllowsTransparency" SourceName="SubMenuPopup" Value="true">
                            <Setter Property="UseLayoutRounding" Value="true" TargetName="SubMenu" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource BrushColorAlt3}" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource ColorAlt4}" Opacity="0.4" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource ColorAlt4}" Opacity="0.6" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource ColorAlt6}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Expand style ("arrow" down). If a collapse style is needed, it can be flipped vertically with the scale transform Y=-1 -->
    <Style x:Key="ControlExpandCollapseStyle" TargetType="Control">
        <Setter Property="Width" Value="13" />
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Path Fill="{StaticResource BrushColorAlt2}"
                          Data="M0,2 10,13 20,2 18,0 10,9 2,0 z"
                          Stretch="Uniform" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ControlInfoPointStyle" TargetType="Control">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="14" />
        <Setter Property="Height" Value="14" />
        <Setter Property="FontSize" Value="9.5" />
        <Setter Property="Margin" Value="2,0,0,0" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Width="{TemplateBinding Width}"
                          Height="{TemplateBinding Height}"
                          UseLayoutRounding="False">
                        <Ellipse Width="{TemplateBinding Width}"
                                 Height="{TemplateBinding Height}"
                                 Fill="{StaticResource BrushColorAlt3}"
                                 UseLayoutRounding="False" />
                        <!-- ReSharper disable once CanExtractXamlLocalizableStringXaml -->
                        <TextBlock Text="i"
                                   FontWeight="Bold"
                                   Foreground="{StaticResource BrushColorAlt7}"
                                   UseLayoutRounding="False"
                                   FontSize="{TemplateBinding FontSize}"
                                   FontFamily="{StaticResource DigitsFontFamily}"
                                   TextAlignment="Center"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   noesis:Text.Stroke="Black"
                                   noesis:Text.StrokeThickness="1"
                                   Margin="0,-2,0,0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ControlInfoQuestionPointStyle" TargetType="Control">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="14" />
        <Setter Property="Height" Value="14" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="2,0,0,0" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Width="{TemplateBinding Width}"
                          Height="{TemplateBinding Height}"
                          UseLayoutRounding="False">
                        <Ellipse Width="{TemplateBinding Width}"
                                 Height="{TemplateBinding Height}"
                                 Fill="{StaticResource BrushColorAlt2}"
                                 Stroke="{StaticResource BrushColorAlt4}"
                                 StrokeThickness="1"
                                 UseLayoutRounding="False" />
                        <!-- ReSharper disable once CanExtractXamlLocalizableStringXaml -->
                        <TextBlock Text="?"
                                   FontWeight="Bold"
                                   Foreground="{StaticResource BrushColorAlt7}"
                                   UseLayoutRounding="False"
                                   FontSize="{TemplateBinding FontSize}"
                                   FontFamily="{StaticResource MonospacedFontFamily}"
                                   TextAlignment="Center"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   noesis:Text.Stroke="Black"
                                   noesis:Text.StrokeThickness="1"
                                   Margin="0.5,0,0,0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ControlExclamationPointStyle" TargetType="Control">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="14" />
        <Setter Property="Height" Value="14" />
        <Setter Property="Margin" Value="2,0,0,0" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Width="{TemplateBinding Width}"
                          Height="{TemplateBinding Height}"
                          UseLayoutRounding="False">
                        <Ellipse Width="{TemplateBinding Width}"
                                 Height="{TemplateBinding Height}"
                                 Fill="{StaticResource BrushColorRed2}"
                                 Stroke="{StaticResource BrushColorRed4}"
                                 StrokeThickness="1"
                                 UseLayoutRounding="False" />
                        <TextBlock Text="!"
                                   FontWeight="Bold"
                                   Foreground="{StaticResource BrushColorRed7}"
                                   UseLayoutRounding="False"
                                   FontSize="14"
                                   FontFamily="{StaticResource MonospacedFontFamily}"
                                   TextAlignment="Center"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   noesis:Text.Stroke="Black"
                                   noesis:Text.StrokeThickness="1"
                                   Margin="0.5,0,0,0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type other:ClockProgressIndicator}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type other:ClockProgressIndicator}">
                    <Grid x:Name="LayoutRootClock"
                          d:DataContext="{d:DesignInstance other:ViewModelClockProgressIndicator, IsDesignTimeCreatable=True}"
                          Clip="{Binding StreamGeometry}">
                        <ContentPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TODO: move these two styles to a separate XAML Resource Dictionary -->
    <Style x:Key="WorldMapMarkImagePinStyle" TargetType="Image">
        <Setter Property="Stretch" Value="Uniform" />
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Canvas.Left" Value="-16" />
        <!-- Offset is not -32 as there is a shadow on the most map markers so the bottom part is not used -->
        <Setter Property="Canvas.Top" Value="-31" />
    </Style>

    <Style x:Key="WorldMapMarkImageCenteredStyle" TargetType="Image"
           BasedOn="{StaticResource WorldMapMarkImagePinStyle}">
        <Setter Property="Canvas.Top" Value="-16" />
    </Style>

    <Style x:Key="TextBlockCoordinateStyle" TargetType="TextBlock">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Foreground" Value="{StaticResource BrushColorAltLabelForeground}" />
        <Setter Property="FontSize" Value="160" />
        <Setter Property="FontFamily" Value="{StaticResource DigitsFontFamily}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="noesis:Text.Stroke" Value="#CC000000" />
        <Setter Property="noesis:Text.StrokeThickness" Value="12" />
    </Style>

    <Style x:Key="TextBlockTabStyle" TargetType="TextBlock">
        <Setter Property="Foreground"
                Value="{Binding (TextElement.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorType=ContentPresenter}}" />
        <Setter Property="FontSize"
                Value="{Binding (TextElement.FontSize), RelativeSource={RelativeSource FindAncestor, AncestorType=ContentPresenter}}" />
        <Setter Property="FontWeight"
                Value="{Binding (TextElement.FontWeight), RelativeSource={RelativeSource FindAncestor, AncestorType=ContentPresenter}}" />
        <Setter Property="FontFamily"
                Value="{Binding (TextElement.FontFamily), RelativeSource={RelativeSource FindAncestor, AncestorType=ContentPresenter}}" />
    </Style>

    <Geometry x:Key="IconGeometryPathNewbie">m 1458.1522,267.49106 c 36.377,-0.76206 10.9914,47.92314 17.5515,70.96404 -8.523,192.52685 -6.2242,388.47456 -62.0472,574.90275 -59.8115,224.66965 -183.3609,432.48365 -352.1992,592.27175 -83.87984,73.1412 -168.51069,149.9748 -273.8286,190.5671 C 670.01794,1649.4319 575.8759,1560.1026 483.7588,1475.6749 323.96175,1312.9114 209.21626,1106.2136 155.90611,884.33098 104.783,705.15677 110.79565,517.13188 100.47199,332.78409 75.993898,261.26767 140.81431,259.12623 195.61198,254.87343 859.03581,142.11267 736.24773,143.30691 1458.1522,267.49106 Z</Geometry>
    <Geometry x:Key="IconGeometryPathDuelMode">m 229.239,805.123 -24.655,17.773 -13.768,-13.768 9.665,-12.342 -26.719,-26.719 -19.875,17.822 -11.672,-11.671 11.088,-13.798 c -3.288,-3.592 -10.399,-11.357 -19.318,-21.069 9.751,-10.592 20.126,-21.84 30.168,-32.688 10.318,9.477 18.632,17.091 22.382,20.524 l 13.798,-11.087 11.672,11.671 -17.819,19.872 26.72,26.719 12.337,-9.661 13.768,13.768 z m -124.542,-42.694 11.088,13.796 -11.672,11.669 -19.8755,-17.819 -26.7186,26.714 9.6651,12.341 -13.7681,13.766 -24.6545,-17.77 -17.7728,-24.651 13.7681,-13.766 12.3376,9.66 26.7194,-26.716 -17.8184,-19.868 11.6713,-11.669 13.7981,11.085 c 12.8464,-11.756 79.0363,-72.383 97.0133,-89.92 36.456,-35.566 51.008,-24.852 51.008,-24.852 0,0 10.716,14.55 -24.855,51.001 -17.54,17.974 -78.176,84.154 -89.934,96.999 z M 63.3686,665.406 C 27.7979,628.95 38.5134,614.398 38.5134,614.398 c 0,0 14.552,-10.715 51.0083,24.855 6.5708,6.411 19.5903,18.587 34.0843,32.022 -9.743,9.014 -19.764,18.255 -29.3069,27.039 C 81.2989,684.295 69.6057,671.799 63.3686,665.406 Z</Geometry>
    <Geometry x:Key="IconGeometryPathRefresh">m 43.227,51.746 c -3.179,1.786 -6.826,2.827 -10.726,2.827 -12.171,0 -22.073,-9.902 -22.073,-22.073 0,-2.739 0.524,-5.35 1.439,-7.771 L 7.136,21.878 C 5.761,25.149 5,28.736 5,32.5 5,47.664 17.336,60 32.5,60 c 5.406,0 10.434,-1.584 14.691,-4.289 l 5.758,5.759 V 45.358 H 36.838 Z M 32.5,4.999 c -5.405,0 -10.444,1.577 -14.699,4.282 l -5.75,-5.75 v 16.11 h 16.11 l -6.395,-6.395 c 3.18,-1.787 6.834,-2.82 10.734,-2.82 12.171,0 22.073,9.902 22.073,22.074 0,2.899 -0.577,5.664 -1.599,8.202 l 4.738,2.762 C 59.182,40.101 60,36.396 60,32.5 60,17.336 47.663,4.999 32.5,4.999 Z</Geometry>
    <Geometry x:Key="IconGeometryPathUndo">M 45.546875,13.345703 V 74.234375 H 106.43555 L 82.265625,50.064453 C 94.284523,43.310437 108.09383,39.40625 122.83398,39.40625 c 46.00063,0 83.42579,37.423325 83.42579,83.42773 0,46.00441 -37.42516,83.42969 -83.42579,83.42969 v 20.51172 c 57.30898,0 103.9375,-46.62865 103.9375,-103.94141 0,-57.312752 -46.62852,-103.939449 -103.9375,-103.939449 -20.42834,0 -39.472793,5.959972 -55.554683,16.183594 z</Geometry>
    <Geometry x:Key="IconGeometryPathStar">M4.99999984331992,0.5L6.06224730203582,3.93777866404501L9.49999966842804,3.93769414858025L6.71875233598545,6.06227369329452L7.78115268460533,9.50000012390973L4.99999984331992,7.37528383030091L2.21884700203453,9.50000012390973L3.2812473506544,6.06227369329452L0.500000018211808,3.93769414858025L3.93775238460403,3.93777866404501z</Geometry>
    <Geometry x:Key="IconGeometryPathSmallArrowUp">M0,4.5 L3,0 L6,4.5 z</Geometry>

    <Geometry x:Key="IconGeometryPathPowerOn">M 1295,1865 C 965,1561 694,1307 692,1302 c -1,-5 61,-38 139,-73 275,-123 344,-155 344,-161 0,-2 -139,-215 -310,-473 C 520,74 530,90 551,106 c 8,6 311,240 674,519 363,279 664,511 668,515 5,4 -102,74 -237,155 -135,81 -246,152 -246,158 0,6 101,207 224,446 258,504 267,521 264,521 -2,0 -273,-250 -603,-555 z</Geometry>
    <Geometry x:Key="IconGeometryPathPowerOff">m 677,1379 c -9,-5 -24,-23 -32,-39 -14,-27 -14,-33 0,-59 8,-17 20,-33 26,-36 6,-4 -42,-61 -115,-135 C 455,1007 423,968 397,913 367,849 365,838 365,735 365,635 368,620 392,570 L 420,515 280,375 140,235 l 58,-58 57,-57 140,140 139,139 30,-19 c 58,-35 143,-53 232,-48 126,7 187,41 343,194 l 126,122 24,-19 c 33,-27 73,-24 105,7 53,53 54,51 -312,417 -349,349 -356,354 -405,326 z m 1536,929 -122,-121 -63,29 c -57,26 -74,29 -168,29 -153,0 -201,-24 -369,-190 -114,-112 -130,-124 -142,-109 -46,56 -139,18 -139,-56 0,-13 26,-49 67,-91 l 67,-70 -147,-147 c -125,-126 -147,-152 -147,-178 0,-38 38,-76 76,-76 21,0 58,31 175,148 l 149,149 97,-98 98,-97 -149,-149 c -163,-163 -172,-180 -123,-228 48,-49 65,-39 228,123 l 148,148 70,-67 c 77,-75 102,-82 147,-44 34,30 37,79 6,110 l -22,21 125,127 c 165,168 190,216 190,369 0,95 -3,111 -29,168 l -29,63 121,122 122,122 -58,58 -57,57 z</Geometry>
    <Geometry x:Key="IconGeometryPathPowerOutage">m 1156.0137,739.35496 c -35,-53 -63,-99 -61,-101 5,-4 195,141 196,150 0,3 -16,15 -35,27 l -35,20 z m 158,1168.00004 c -46,-42 -83,-80 -83,-83 0,-3 109,-54 243,-113 133,-59 244,-109 246,-111 2,-2 -71,-117 -163,-256 l -166,-253 43,-22 c 23,-12 66,-31 95,-43 l 52,-20 231,177 230,177 -313,313 c -172,172 -317,313 -323,313 -5,-1 -47,-36 -92,-79 z m 538,494 c -110,-102 -201,-189 -201,-193 0,-4 145,-152 323,-330 l 323,-323 72,56 c 40,31 72,59 72,63 0,4 -105,69 -233,145 -127,76 -238,141 -246,146 -11,7 15,65 123,274 75,146 136,270 136,275 0,5 -26,21 -57,35 -110,49 -87,60 -312,-148 z m -251,476 c -157,-35 -260,-79 -390,-166 -105,-69 -231.00001,-193 -299.00001,-294 -63,-92 -128,-236 -158,-348 -24,-88 -27,-116 -27,-273 0,-159 2,-184 27,-275 84,-313 305.00001,-581.00004 592.00001,-720.00004 157,-75 297,-107 480,-107 301,0 549,101 767,310.00004 177,170 294,395 328,631 19,126 8,323 -25,441 -107,390 -405,685 -802,792 -114,30 -374,35 -493,9 z m 439,-252 c 256,-65 478,-258 579,-502 83,-198 83,-456 2,-651 -35,-83 -90,-176 -105,-176 -5,0 -278,268 -605,595 -565,565 -593,595 -575,610 43,32 173,94 241,114 145,44 314,48 463,10 z m -293,-917 598,-594 -24,-19 c -47,-37 -205,-109.00004 -285,-130.00004 -113,-30 -308,-30 -420,0 -265,71.00004 -481,258.00004 -583,504.00004 -83.00001,198 -83.00001,455 -1,652 33,80 97,188 109,183 4,-2 277,-270 606,-596 z m 624,1172 c -57,-53 -60,-59 -44,-71 10,-7 23,-13 30,-13 12,0 88,130 80,137 -2,2 -32,-22 -66,-53 z</Geometry>

    <Geometry x:Key="IconGeometryMouseInput">m 119.86329,-28.019292 -23.570998,0.488 c -49.964,4.668 -96.16000034,32.0520003 -96.16000034,80.327 V 188.30571 c 0,59.862 48.69800034,108.562 108.56399834,108.562 59.863,0 108.566,-48.7 108.566,-108.562 V 52.784708 c 0.003,-52.70299966 -49.032,-78.227 -97.399,-80.804 z m -99.291998,80.804 c 0,-35.833 38.898,-56.5809997 79.186,-60.0269997 V 117.73971 c -36.751,-1.85 -66.589,-10.222 -79.186,-14.309 z M 196.82829,188.29571 c 0,48.604 -39.537,88.133 -88.129,88.133 -48.589998,0 -88.127998,-39.529 -88.127998,-88.133 v -63.381 c 18.249,5.516 52.6,13.882 93.201998,13.882 26.003,0 54.556,-3.479 83.056,-13.286 v 62.785 z m 0,-84.521 c -25.844,9.883 -52.237,13.746 -76.635,14.271 V -7.5442917 c 39.407,2.363 76.635,21.2639997 76.635,60.3369997 z</Geometry>
    <Geometry x:Key="IconGeometryMouseInputLeftButton">M 31.269883,93.104623 C 50.511411,100.7182 70.161692,103.69417 88.32662,104.09861 V 7.347515 C 58.987098,9.1679055 31.269883,23.728716 31.269883,53.829485 Z</Geometry>
    <Geometry x:Key="IconGeometryMouseInputRightButton">M 187.28084,93.104623 C 168.0393,100.7182 148.38901,103.69417 130.22407,104.09861 V 7.347515 c 29.33954,1.8203905 57.05677,16.381201 57.05677,46.48197 z</Geometry>

    <Geometry x:Key="IconGeometrySupporterBadge">M 0.03515625 1096.3125 L 0.03515625 1102.7754 L 9.7617188 1102.7754 L 9.7617188 1096.3125 L 0.03515625 1096.3125 z M 12.910156 1096.3125 L 12.910156 1102.7754 L 22.638672 1102.7754 L 22.638672 1096.3125 L 12.910156 1096.3125 z M 11.337891 1100.9316 C 10.546722 1100.9316 8.4779593 1107.5604 7.8378906 1108.0254 C 7.1978223 1108.4905 0.25229687 1108.4096 0.0078125 1109.1621 C -0.23667187 1109.9145 5.4293456 1113.9331 5.6738281 1114.6855 C 5.9183122 1115.438 3.6958692 1122.0174 4.3359375 1122.4824 C 4.9760062 1122.9475 10.546722 1118.8008 11.337891 1118.8008 C 12.129059 1118.8008 17.701729 1122.9475 18.341797 1122.4824 C 18.981866 1122.0174 16.75942 1115.438 17.003906 1114.6855 C 17.248391 1113.9331 22.914404 1109.9145 22.669922 1109.1621 C 22.425437 1108.4096 15.479912 1108.4905 14.839844 1108.0254 C 14.199775 1107.5604 12.129059 1100.9316 11.337891 1100.9316 z</Geometry>

    <Geometry x:Key="IconGeometryFridgeSnowflake">m 35.37978,210.52267 v 10.7735 l -8.09459,-4.67982 -4.10931,7.09414 12.2039,7.06934 v 15.8998 l -13.70872,-7.92096 -0.0248,-14.16348 -8.20208,0.0165 0.0165,9.40925 L 4.10104,228.61352 0,235.71593 l 9.33483,5.39088 -8.10287,4.66328 4.08451,7.11068 12.22871,-7.03626 13.75833,7.94576 -13.70872,7.9127 -12.27832,-7.06107 -4.08451,7.11068 8.15248,4.69635 -9.35964,5.39916 4.10104,7.10241 9.33484,-5.39089 -0.0165,9.35137 8.20208,0.0165 0.0248,-14.1056 13.75833,-7.9375 v 15.82539 l -12.25351,7.10241 4.10931,7.09414 8.1442,-4.71289 V 297 h 8.20209 v -10.77351 l 8.09459,4.67982 4.10931,-7.09414 -12.2039,-7.06933 v -15.89981 l 13.70872,7.92096 0.0248,14.16348 8.20208,-0.0165 -0.0165,-9.40924 9.35964,5.40742 4.10104,-7.10241 -9.33483,-5.39089 8.10286,-4.66328 -4.0845,-7.11067 -12.22044,7.03626 -13.76661,-7.94577 13.717,-7.92096 12.27005,7.06933 4.0845,-7.11067 -8.15247,-4.69636 9.35964,-5.39915 -4.10105,-7.10241 -9.33483,5.39089 0.0165,-9.35137 -8.20208,-0.0165 -0.0248,14.1056 -13.75833,7.9375 V 230.8129 l 12.25351,-7.10241 -4.10931,-7.09414 -8.1442,4.71289 v -10.80657 z</Geometry>

    <Geometry x:Key="IconGeometryEye">m 50.451234,0.12186878 h -0.902462 c 0,0 -30.909411,-3.67962778 -49.548772,29.39910922 18.639361,33.009404 49.548772,29.416885 49.548772,29.416885 h 0.902462 c 0,0 30.909405,3.592519 49.548766,-29.416885 C 81.360639,-3.557759 50.451234,0.12186878 50.451234,0.12186878 Z m 0,13.67543522 c 5.328012,0 9.649425,4.373481 9.649425,9.753569 0,5.397404 -4.321413,9.753568 -9.649425,9.753568 -5.328012,0 -9.649424,-4.373481 -9.649424,-9.753568 0,-5.380088 4.321412,-9.753569 9.649424,-9.753569 z m 0.173562,35.317592 h -0.590084 c 0,0 -19.836865,2.32557 -31.794517,-18.517848 3.31482,-5.796609 7.237074,-9.770951 11.194033,-12.547743 -0.538002,1.909049 -0.833044,3.887561 -0.833044,5.970171 0,12.200619 9.788268,22.092985 21.85005,22.092985 12.079139,0 21.850051,-9.892366 21.850051,-22.092985 0,-1.995895 -0.27766,-3.92226 -0.763626,-5.744593 3.835473,2.742158 7.653589,6.681735 10.898991,12.322165 C 70.461642,51.440466 50.624783,49.114896 50.624783,49.114896 Z</Geometry>

    <Geometry x:Key="IconGeometryCrown">M528 448H112c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h416c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm64-320c-26.5 0-48 21.5-48 48 0 7.1 1.6 13.7 4.4 19.8L476 239.2c-15.4 9.2-35.3 4-44.2-11.6L350.3 85C361 76.2 368 63 368 48c0-26.5-21.5-48-48-48s-48 21.5-48 48c0 15 7 28.2 17.7 37l-81.5 142.6c-8.9 15.6-28.9 20.8-44.2 11.6l-72.3-43.4c2.7-6 4.4-12.7 4.4-19.8 0-26.5-21.5-48-48-48S0 149.5 0 176s21.5 48 48 48c2.6 0 5.2-.4 7.7-.8L128 416h384l72.3-192.8c2.5.4 5.1.8 7.7.8 26.5 0 48-21.5 48-48s-21.5-48-48-48z</Geometry>

    <Geometry x:Key="IconGeometryFactionPrivate">m 179.279,688.044 h -23.41 v 0 -37.891 c 0,-15.387 -12.478,-27.86 -27.869,-27.86 -15.392,0 -27.869,12.473 -27.869,27.86 v 37.891 0 H 76.7213 v -39.005 h 0.0282 C 77.3446,621.243 100.053,598.89 128,598.89 c 27.947,0 50.655,22.353 51.251,50.149 h 0.028 z m -111.278787,7.81377 c -4.418295,0 -7.999507,3.58152 -7.999507,7.99952 v 111.03222 c 0,4.418 3.581212,8.00097 7.999507,8.00097 H 188.00021 c 4.418,0 7.99951,-3.58297 7.99951,-8.00097 V 703.85729 c 0,-4.418 -3.58151,-7.99952 -7.99951,-7.99952 z m 60.556637,34.53369 c 8.31201,0 15.04981,6.73641 15.04981,15.04541 0,6.658 -4.33115,12.29684 -10.32715,14.27784 l 5.86816,26.39941 h -22.29638 l 5.95312,-26.77588 c -5.455,-2.259 -9.29589,-7.63037 -9.29589,-13.90137 0,-8.309 6.73734,-15.04541 15.04833,-15.04541 z</Geometry>
    <Geometry x:Key="IconGeometryFactionPublic">m 243.997,687.888 h -23.509 v 0 -37.824 c 0,-15.36 -12.531,-27.812 -27.988,-27.812 -15.457,0 -27.988,12.452 -27.988,27.812 v 37.824 0 h -23.509 v -38.937 h 0.028 c 0.598,-27.747 23.403,-50.061 51.469,-50.061 28.066,0 50.871,22.314 51.469,50.061 h 0.028 z m -189.997489,7.97026 c -4.418301,0 -7.999512,3.58151 -7.999512,7.99951 v 111.03222 c 0,4.418 3.581211,7.99952 7.999512,7.99952 H 173.99951 c 4.41799,0 8.00097,-3.58152 8.00097,-7.99952 V 703.85777 c 0,-4.418 -3.58298,-7.99951 -8.00097,-7.99951 z m 60.558099,34.53369 c 8.312,0 15.04981,6.73641 15.04981,15.0454 0,6.65801 -4.33215,12.29684 -10.32715,14.27784 l 5.8667,26.39941 h -22.29492 l 5.95166,-26.77588 c -5.455,-2.259 -9.295901,-7.63036 -9.295901,-13.90137 0,-8.30899 6.738801,-15.0454 15.049801,-15.0454 z</Geometry>
    <Geometry x:Key="IconGeometryFactionMembers">m 128.5,686.435 c -14.268,0 -25.835,-11.179 -25.835,-24.968 0,-13.79 11.567,-24.968 25.835,-24.968 14.268,0 25.835,11.178 25.835,24.968 0,13.789 -11.567,24.968 -25.835,24.968 z m -16.147,1.56 c 0,0 6.863,4.682 16.147,4.682 9.284,0 16.147,-4.682 16.147,-4.682 l 6.458,1.561 35.523,51.496 -14.532,9.363 -19.376,-29.649 v 93.63 H 133.344 V 766.02 h -4.844 -4.844 v 48.376 H 104.28 v -93.63 L 84.9042,750.415 70.372,741.052 105.895,689.556 Z M 53.99345,617.876 c -11.534999,0 -20.885741,9.113 -20.885741,20.354 0,11.241 9.350742,20.35401 20.885741,20.35401 11.5352,0 20.887206,-9.11301 20.887206,-20.35401 0,-11.241 -9.352006,-20.354 -20.887206,-20.354 z m -13.053222,41.97949 -5.222167,1.27295 -28.7182609,41.97949 11.7480459,7.63184 15.665039,-24.16992 v 76.32714 h 15.665038 v -39.43652 h 3.915527 3.916992 v 39.43652 H 73.574016 V 750.2217 l -10.302245,-6.78516 10.302245,-14.86377 v -42.00292 l 14.068361,21.70605 8.49609,-12.25782 -23.869626,-34.88964 -5.220704,-1.27295 c 0,0 -5.548787,3.81592 -13.054687,3.81592 -7.505999,0 -13.053222,-3.81592 -13.053222,-3.81592 z M 203.00614,617.876 c -11.535,0 -20.88574,9.113 -20.88574,20.354 0,11.241 9.35074,20.35401 20.88574,20.35401 11.535,0 20.88574,-9.11301 20.88574,-20.35401 0,-11.241 -9.35074,-20.354 -20.88574,-20.354 z m -13.05468,41.97949 -5.22071,1.27295 -23.42871,34.24658 8.48438,12.23877 13.63916,-21.04394 v 40.72265 l 11.18994,16.14404 -11.18994,7.63916 v 11.82129 h 15.66503 v -39.43652 h 3.91553 3.91699 v 39.43652 h 15.66358 v -76.32714 l 15.66504,24.16992 11.74804,-7.63184 -28.71826,-41.97949 -5.22217,-1.27295 c 0,0 -5.54722,3.81592 -13.05322,3.81592 -7.506,0 -13.05468,-3.81592 -13.05468,-3.81592 z</Geometry>

    <Style x:Key="LandClaimBoundTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="{StaticResource CondensedFontFamily}" />
        <Setter Property="Foreground" Value="#DDCCCCCC" />
        <Setter Property="noesis:Text.Stroke" Value="#DD000000" />
        <Setter Property="noesis:Text.StrokeThickness" Value="1" />
    </Style>

    <ImageSource x:Key="ImageSourceDamageTypeImpact">/UI/Images/Icons/Damage/icon_damage_impact.png</ImageSource>
    <ImageSource x:Key="ImageSourceDamageTypeKinetic">/UI/Images/Icons/Damage/icon_damage_kinetic.png</ImageSource>
    <ImageSource x:Key="ImageSourceDamageTypeExplosion">/UI/Images/Icons/Damage/icon_damage_explosion.png</ImageSource>
    <ImageSource x:Key="ImageSourceDamageTypeHeat">/UI/Images/Icons/Damage/icon_damage_heat.png</ImageSource>
    <ImageSource x:Key="ImageSourceDamageTypeCold">/UI/Images/Icons/Damage/icon_damage_cold.png</ImageSource>
    <ImageSource x:Key="ImageSourceDamageTypeChemical">/UI/Images/Icons/Damage/icon_damage_chemical.png</ImageSource>
    <ImageSource x:Key="ImageSourceDamageTypeRadiation">/UI/Images/Icons/Damage/icon_damage_radiation.png</ImageSource>
    <ImageSource x:Key="ImageSourceDamageTypePsi">/UI/Images/Icons/Damage/icon_damage_psi.png</ImageSource>

    <ImageBrush x:Key="LocalServerIconImageBrush"
                ImageSource="/UI/Images/Icons/MenuServers/LocalServerIcon.png"
                Stretch="Uniform" />

</ResourceDictionary>